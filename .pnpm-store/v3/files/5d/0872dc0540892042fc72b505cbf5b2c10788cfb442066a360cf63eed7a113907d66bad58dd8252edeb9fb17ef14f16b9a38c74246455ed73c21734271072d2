{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { InspectOptions } from 'util'\n\ninterface Context {\n  seen: unknown[]\n  showHidden?: boolean\n  depth?: number | null | undefined\n  customInspectSymbol: symbol\n}\n\ninterface FormatterOptions {\n  formatError?: (error: Error) => string\n  customInspectSymbol?: symbol\n}\n\nexport function createFormat(opts: FormatterOptions = {}) {\n  if (opts.customInspectSymbol === undefined) {\n    opts.customInspectSymbol = Symbol.for('edge-runtime.inspect.custom')\n  }\n\n  if (opts.formatError === undefined) {\n    opts.formatError = (error: Error) =>\n      `[${Error.prototype.toString.call(error)}]`\n  }\n\n  const { formatError, customInspectSymbol } = opts\n\n  function format(...args: unknown[]): string {\n    const [firstArg] = args\n\n    if (!kind(firstArg, 'string')) {\n      if (hasCustomSymbol(firstArg, customInspectSymbol)) {\n        return format(firstArg[customInspectSymbol]())\n      } else {\n        return args\n          .map((item) => inspect(item, { customInspectSymbol }))\n          .join(' ')\n      }\n    }\n\n    let index = 1\n    let str = String(firstArg).replace(/%[sjdOoif%]/g, (token) => {\n      if (token === '%%') return '%'\n      if (index >= args.length) return token\n      switch (token) {\n        case '%s': {\n          const arg = args[index++]\n          return hasCustomSymbol(arg, customInspectSymbol)\n            ? format(arg[customInspectSymbol]())\n            : String(arg)\n        }\n        case '%j':\n          return safeStringify(args[index++])\n        case '%d':\n          return String(Number(args[index++]))\n        case '%O':\n          return inspect(args[index++], { customInspectSymbol })\n        case '%o':\n          return inspect(args[index++], {\n            customInspectSymbol,\n            showHidden: true,\n            depth: 4,\n          })\n        case '%i':\n          return String(parseInt(args[index++] as any, 10))\n        case '%f':\n          return String(parseFloat(args[index++] as any))\n        default:\n          return token\n      }\n    })\n\n    for (let arg = args[index]; index < args.length; arg = args[++index]) {\n      if (arg === null || !kind(arg, 'object')) {\n        str += ' ' + arg\n      } else {\n        str += ' ' + inspect(arg)\n      }\n    }\n\n    return str\n  }\n\n  function formatValue(\n    ctx: Context,\n    value: unknown,\n    recurseTimes: number | null | undefined\n  ): string {\n    if (hasCustomSymbol(value, customInspectSymbol)) {\n      return format(value[customInspectSymbol]())\n    }\n\n    const formattedPrimitive = formatPrimitive(value)\n    if (formattedPrimitive !== undefined) {\n      return formattedPrimitive\n    }\n\n    const keys = ctx.showHidden\n      ? Object.getOwnPropertyNames(value)\n      : Object.keys(value as object)\n\n    const visibleKeys = new Set<string>()\n    keys.forEach((key) => visibleKeys.add(key))\n\n    if (keys.length === 0) {\n      if (kind(value, 'function')) {\n        return `[Function${value.name ? ': ' + value.name : ''}]`\n      } else if (isRegExp(value)) {\n        return RegExp.prototype.toString.call(value)\n      } else if (isDate(value)) {\n        return Date.prototype.toString.call(value)\n      } else if (isError(value)) {\n        return formatError(value)\n      } else if (hasCustomSymbol(value, ctx.customInspectSymbol)) {\n        return format(value[ctx.customInspectSymbol]())\n      }\n    }\n\n    let base = ''\n    if (kind(value, 'function')) {\n      base = `[Function${value.name ? ': ' + value.name : ''}]`\n    } else if (isRegExp(value)) {\n      base = ' ' + RegExp.prototype.toString.call(value)\n    } else if (isDate(value)) {\n      base = ' ' + Date.prototype.toUTCString.call(value)\n    } else if (isError(value)) {\n      base = ' ' + formatError(value)\n    } else if (hasCustomSymbol(value, ctx.customInspectSymbol)) {\n      base = ' ' + value[ctx.customInspectSymbol]()\n    }\n\n    const braces = Array.isArray(value) ? ['[', ']'] : ['{', '}']\n\n    if (keys.length === 0 && (!Array.isArray(value) || value.length === 0)) {\n      return braces[0] + base + braces[1]\n    }\n\n    if (recurseTimes && recurseTimes < 0) {\n      return isRegExp(value)\n        ? RegExp.prototype.toString.call(value)\n        : '[Object]'\n    }\n\n    ctx.seen.push(value)\n\n    const output = Array.isArray(value)\n      ? formatArray(ctx, value, recurseTimes, visibleKeys, keys)\n      : keys.map((key) =>\n          formatProperty(\n            ctx,\n            value as object,\n            recurseTimes,\n            visibleKeys,\n            key,\n            false\n          )\n        )\n\n    ctx.seen.pop()\n\n    return reduceToSingleString(output, base, braces)\n  }\n\n  function inspect(\n    value: unknown,\n    opts?: InspectOptions & { customInspectSymbol: symbol }\n  ) {\n    opts = Object.assign({ seen: [], depth: 2 }, opts)\n    return formatValue(opts as Context, value, opts.depth)\n  }\n\n  function formatProperty(\n    ctx: Context,\n    value: object,\n    recurseTimes: number | null | undefined,\n    visibleKeys: Set<string>,\n    key: string,\n    array: boolean\n  ) {\n    let name: string | undefined\n    let str: string | undefined\n\n    const desc = Object.getOwnPropertyDescriptor(value, key) || {\n      value: value[key as keyof typeof value],\n    }\n    if (desc.get) {\n      str = desc.set ? '[Getter/Setter]' : '[Getter]'\n    } else if (desc.set) {\n      str = '[Setter]'\n    }\n\n    if (!visibleKeys.has(key)) {\n      name = '[' + key + ']'\n    }\n\n    if (!str) {\n      if (ctx.seen.indexOf(desc.value) < 0) {\n        str = formatValue(\n          ctx,\n          desc.value,\n          recurseTimes === null || recurseTimes === undefined\n            ? null\n            : recurseTimes - 1\n        )\n\n        if (str.indexOf('\\n') > -1) {\n          if (array) {\n            str = str\n              .split('\\n')\n              .map((line) => `  ${line}`)\n              .join('\\n')\n              .slice(2)\n          } else {\n            str =\n              '\\n' +\n              str\n                .split('\\n')\n                .map((line) => `   ${line}`)\n                .join('\\n')\n          }\n        }\n      } else {\n        str = '[Circular]'\n      }\n    }\n\n    if (name === undefined) {\n      if (array && key.match(/^\\d+$/)) {\n        return str\n      }\n\n      name = JSON.stringify('' + key)\n      if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n        name = name.slice(1, -1)\n      } else {\n        name = name\n          .replace(/'/g, \"\\\\'\")\n          .replace(/\\\\\"/g, '\"')\n          .replace(/(^\"|\"$)/g, \"'\")\n      }\n    }\n\n    return `${name}: ${str}`\n  }\n\n  function formatArray(\n    ctx: Context,\n    value: unknown[],\n    recurseTimes: number | null | undefined,\n    visibleKeys: Set<string>,\n    keys: string[]\n  ) {\n    const output = []\n\n    for (let index = 0; index < value.length; ++index) {\n      if (Object.prototype.hasOwnProperty.call(value, String(index))) {\n        output.push(\n          formatProperty(\n            ctx,\n            value as object,\n            recurseTimes,\n            visibleKeys,\n            String(index),\n            true\n          )\n        )\n      } else {\n        output.push('')\n      }\n    }\n\n    keys.forEach((key) => {\n      if (!key.match(/^\\d+$/)) {\n        output.push(\n          formatProperty(ctx, value, recurseTimes, visibleKeys, key, true)\n        )\n      }\n    })\n\n    return output\n  }\n\n  return format\n}\n\nfunction formatPrimitive(value: unknown) {\n  if (value === null) return 'null'\n  if (value === undefined) return 'undefined'\n  if (kind(value, 'string')) {\n    return `'${JSON.stringify(value)\n      .replace(/^\"|\"$/g, '')\n      .replace(/'/g, \"\\\\'\")\n      .replace(/\\\\\"/g, '\"')}'`\n  }\n  if (kind(value, 'boolean')) return '' + value\n  if (kind(value, 'number')) return '' + value\n  if (kind(value, 'bigint')) return '' + value\n  if (kind(value, 'symbol')) return value.toString()\n}\n\nfunction hasCustomSymbol<CustomSymbol extends symbol>(\n  value: unknown,\n  customInspectSymbol: CustomSymbol\n): value is Record<CustomSymbol, () => unknown> {\n  return (\n    value !== null &&\n    kind(value, 'object') &&\n    customInspectSymbol in value &&\n    kind(value[customInspectSymbol], 'function')\n  )\n}\n\nfunction kind(value: unknown, type: 'bigint'): value is bigint\nfunction kind(value: unknown, type: 'boolean'): value is boolean\nfunction kind(value: unknown, type: 'function'): value is Function\nfunction kind(value: unknown, type: 'number'): value is number\nfunction kind(value: unknown, type: 'string'): value is string\nfunction kind(value: unknown, type: 'symbol'): value is symbol\nfunction kind(\n  value: unknown,\n  type: 'object'\n): value is Record<string | number | symbol, unknown>\nfunction kind(value: unknown, type: string): value is unknown {\n  return typeof value === type\n}\n\nfunction isRegExp(value: unknown): value is RegExp {\n  return (\n    kind(value, 'object') &&\n    Object.prototype.toString.call(value) === '[object RegExp]'\n  )\n}\n\nfunction isDate(value: unknown): value is Date {\n  return (\n    kind(value, 'object') &&\n    Object.prototype.toString.call(value) === '[object Date]'\n  )\n}\n\nfunction isError(value: unknown): value is Error {\n  return (\n    kind(value, 'object') &&\n    (Object.prototype.toString.call(value) === '[object Error]' ||\n      value instanceof Error)\n  )\n}\n\nfunction reduceToSingleString(\n  output: string[],\n  base: string,\n  braces: string[]\n) {\n  const length = output.reduce((prev, cur) => {\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1\n  }, 0)\n\n  if (length > 60) {\n    return (\n      braces[0] +\n      (base === '' ? '' : base + '\\n ') +\n      ' ' +\n      output.join(',\\n  ') +\n      ' ' +\n      braces[1]\n    )\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1]\n}\n\nfunction safeStringify(object: unknown) {\n  if (Array.isArray(object)) {\n    object = object.map((element) =>\n      JSON.parse(JSON.stringify(element, makeCircularReplacer()))\n    )\n  }\n  return JSON.stringify(object, makeCircularReplacer())\n}\n\nfunction makeCircularReplacer() {\n  const seen = new WeakSet()\n  return (key: unknown, value: unknown) => {\n    if (value !== null && kind(value, 'object')) {\n      if (seen.has(value)) return '[Circular]'\n      seen.add(value)\n    }\n    return value\n  }\n}\n"]}