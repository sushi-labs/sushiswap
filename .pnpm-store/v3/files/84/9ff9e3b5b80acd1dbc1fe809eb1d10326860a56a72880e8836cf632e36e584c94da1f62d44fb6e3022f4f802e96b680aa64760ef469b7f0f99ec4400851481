/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IConcentratedLiquidityPool,
  IConcentratedLiquidityPoolInterface,
} from "../IConcentratedLiquidityPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "int24",
        name: "lower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upper",
        type: "int24",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "token0Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token0Fees",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "token1Fees",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "lower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upper",
        type: "int24",
      },
    ],
    name: "collect",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0fees",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1fees",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeGrowthGlobal0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeGrowthGlobal1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAssets",
    outputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getImmutables",
    outputs: [
      {
        internalType: "uint128",
        name: "_MAX_TICK_LIQUIDITY",
        type: "uint128",
      },
      {
        internalType: "uint24",
        name: "_tickSpacing",
        type: "uint24",
      },
      {
        internalType: "uint24",
        name: "_swapFee",
        type: "uint24",
      },
      {
        internalType: "address",
        name: "_barFeeTo",
        type: "address",
      },
      {
        internalType: "contract IBentoBoxMinimal",
        name: "_bento",
        type: "address",
      },
      {
        internalType: "contract IMasterDeployer",
        name: "_masterDeployer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPriceAndNearestTicks",
    outputs: [
      {
        internalType: "uint160",
        name: "_price",
        type: "uint160",
      },
      {
        internalType: "int24",
        name: "_nearestTick",
        type: "int24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint128",
        name: "_reserve0",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_reserve1",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSecondsGrowthAndLastObservation",
    outputs: [
      {
        internalType: "uint160",
        name: "_secondGrowthGlobal",
        type: "uint160",
      },
      {
        internalType: "uint32",
        name: "_lastObservation",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenProtocolFees",
    outputs: [
      {
        internalType: "uint128",
        name: "_token0ProtocolFee",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_token1ProtocolFee",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "lowerOld",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "lower",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upperOld",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "upper",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "amount0Desired",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "amount1Desired",
            type: "uint128",
          },
          {
            internalType: "bool",
            name: "native",
            type: "bool",
          },
        ],
        internalType: "struct IConcentratedLiquidityPoolStruct.MintParams",
        name: "data",
        type: "tuple",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidityMinted",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "int24",
        name: "lower",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upper",
        type: "int24",
      },
    ],
    name: "positions",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside0Last",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthInside1Last",
            type: "uint256",
          },
        ],
        internalType: "struct IConcentratedLiquidityPoolStruct.Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "lowerTick",
        type: "int24",
      },
      {
        internalType: "int24",
        name: "upperTick",
        type: "int24",
      },
    ],
    name: "rangeFeeGrowth",
    outputs: [
      {
        internalType: "uint256",
        name: "feeGrowthInside0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeGrowthInside1",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint160",
        name: "price",
        type: "uint160",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int24",
        name: "_tick",
        type: "int24",
      },
    ],
    name: "ticks",
    outputs: [
      {
        components: [
          {
            internalType: "int24",
            name: "previousTick",
            type: "int24",
          },
          {
            internalType: "int24",
            name: "nextTick",
            type: "int24",
          },
          {
            internalType: "uint128",
            name: "liquidity",
            type: "uint128",
          },
          {
            internalType: "uint256",
            name: "feeGrowthOutside0",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "feeGrowthOutside1",
            type: "uint256",
          },
          {
            internalType: "uint160",
            name: "secondsGrowthOutside",
            type: "uint160",
          },
        ],
        internalType: "struct IConcentratedLiquidityPoolStruct.Tick",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IConcentratedLiquidityPool__factory {
  static readonly abi = _abi;
  static createInterface(): IConcentratedLiquidityPoolInterface {
    return new utils.Interface(_abi) as IConcentratedLiquidityPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IConcentratedLiquidityPool {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IConcentratedLiquidityPool;
  }
}
