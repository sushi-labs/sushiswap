import { Key, Fetcher, SWRConfiguration } from '../types';
export declare const normalize: <KeyType_1 = Key, Data = any>(args: [KeyType_1] | [KeyType_1, ((args_0: string) => import("../types").FetcherResponse<Data>) | ((args_0: any, ...args_1: unknown[]) => import("../types").FetcherResponse<Data>) | ((args_0: Record<any, any>) => import("../types").FetcherResponse<Data>) | ((args_0: string | [any, ...unknown[]] | readonly [any, ...unknown[]] | Record<any, any>) => import("../types").FetcherResponse<Data>) | null] | [KeyType_1, Partial<import("../types").PublicConfiguration<any, any, import("../types").BareFetcher<any>>> | undefined] | [KeyType_1, ((args_0: string) => import("../types").FetcherResponse<Data>) | ((args_0: any, ...args_1: unknown[]) => import("../types").FetcherResponse<Data>) | ((args_0: Record<any, any>) => import("../types").FetcherResponse<Data>) | ((args_0: string | [any, ...unknown[]] | readonly [any, ...unknown[]] | Record<any, any>) => import("../types").FetcherResponse<Data>) | null, Partial<import("../types").PublicConfiguration<any, any, import("../types").BareFetcher<any>>> | undefined]) => [KeyType_1, ((args_0: string) => import("../types").FetcherResponse<Data>) | ((args_0: any, ...args_1: unknown[]) => import("../types").FetcherResponse<Data>) | ((args_0: Record<any, any>) => import("../types").FetcherResponse<Data>) | ((args_0: string | [any, ...unknown[]] | readonly [any, ...unknown[]] | Record<any, any>) => import("../types").FetcherResponse<Data>) | null, Partial<Partial<import("../types").PublicConfiguration<Data, any, import("../types").BareFetcher<any>>>>];
