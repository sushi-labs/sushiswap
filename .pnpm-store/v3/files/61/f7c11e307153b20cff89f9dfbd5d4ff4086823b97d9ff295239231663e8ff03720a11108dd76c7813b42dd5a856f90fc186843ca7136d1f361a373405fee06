{"version":3,"file":"index.js","sources":["../dist-src/auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import btoa from \"btoa-lite\";\nimport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport async function auth(state, authOptions) {\n    if (authOptions.type === \"oauth-app\") {\n        return {\n            type: \"oauth-app\",\n            clientId: state.clientId,\n            clientSecret: state.clientSecret,\n            clientType: state.clientType,\n            headers: {\n                authorization: `basic ${btoa(`${state.clientId}:${state.clientSecret}`)}`,\n            },\n        };\n    }\n    if (\"factory\" in authOptions) {\n        const { type, ...options } = {\n            ...authOptions,\n            ...state,\n        };\n        // @ts-expect-error TODO: `option` cannot be never, is this a bug?\n        return authOptions.factory(options);\n    }\n    const common = {\n        clientId: state.clientId,\n        clientSecret: state.clientSecret,\n        request: state.request,\n        ...authOptions,\n    };\n    // TS: Look what you made me do\n    const userAuth = state.clientType === \"oauth-app\"\n        ? await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        })\n        : await createOAuthUserAuth({\n            ...common,\n            clientType: state.clientType,\n        });\n    return userAuth();\n}\n","import btoa from \"btoa-lite\";\nimport { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept OAuth Web/Device flow request\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    if (state.clientType === \"github-app\" && !requiresBasicAuth(endpoint.url)) {\n        throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than \"/applications/{client_id}/**\". \"${endpoint.method} ${endpoint.url}\" is not supported.`);\n    }\n    const credentials = btoa(`${state.clientId}:${state.clientSecret}`);\n    endpoint.headers.authorization = `basic ${credentials}`;\n    try {\n        return await request(endpoint);\n    }\n    catch (error) {\n        /* istanbul ignore if */\n        if (error.status !== 401)\n            throw error;\n        error.message = `[@octokit/auth-oauth-app] \"${endpoint.method} ${endpoint.url}\" does not support clientId/clientSecret basic authentication.`;\n        throw error;\n    }\n}\n","export const VERSION = \"5.0.1\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport function createOAuthAppAuth(options) {\n    const state = Object.assign({\n        request: request.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        }),\n        clientType: \"oauth-app\",\n    }, options);\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n"],"names":[],"mappings":"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"}