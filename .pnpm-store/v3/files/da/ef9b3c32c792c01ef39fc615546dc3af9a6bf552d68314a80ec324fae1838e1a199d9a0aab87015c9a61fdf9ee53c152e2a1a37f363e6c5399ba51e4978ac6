{"version":3,"names":["createFlowUnionType","createTSUnionType","createUnionTypeAnnotation","isFlowType","isTSType","createUnionType","types"],"sources":["../../../src/path/inference/util.ts"],"sourcesContent":["import {\n  createFlowUnionType,\n  createTSUnionType,\n  createUnionTypeAnnotation,\n  isFlowType,\n  isTSType,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\n\nexport function createUnionType(\n  types: Array<t.FlowType | t.TSType>,\n): t.FlowType | t.TSType {\n  if (process.env.BABEL_8_BREAKING) {\n    if (isFlowType(types[0])) {\n      return createFlowUnionType(types as t.FlowType[]);\n    }\n    if (isTSType(types[0])) {\n      return createTSUnionType(types as t.TSType[]);\n    }\n  } else {\n    if (isFlowType(types[0])) {\n      if (createFlowUnionType) {\n        return createFlowUnionType(types as t.FlowType[]);\n      }\n\n      return createUnionTypeAnnotation(types as t.FlowType[]);\n    } else {\n      if (createTSUnionType) {\n        return createTSUnionType(types as t.TSType[]);\n      }\n    }\n  }\n}\n"],"mappings":";;;;;;;AAAA;;;EACEA,mB;EACAC,iB;EACAC,yB;EACAC,U;EACAC;;;AAIK,SAASC,eAAT,CACLC,KADK,EAEkB;EAQhB;IACL,IAAIH,UAAU,CAACG,KAAK,CAAC,CAAD,CAAN,CAAd,EAA0B;MACxB,IAAIN,mBAAJ,EAAyB;QACvB,OAAOA,mBAAmB,CAACM,KAAD,CAA1B;MACD;;MAED,OAAOJ,yBAAyB,CAACI,KAAD,CAAhC;IACD,CAND,MAMO;MACL,IAAIL,iBAAJ,EAAuB;QACrB,OAAOA,iBAAiB,CAACK,KAAD,CAAxB;MACD;IACF;EACF;AACF"}