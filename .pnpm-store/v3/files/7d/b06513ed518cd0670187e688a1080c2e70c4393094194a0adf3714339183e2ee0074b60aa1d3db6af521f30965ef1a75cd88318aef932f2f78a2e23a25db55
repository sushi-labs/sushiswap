{"version":3,"file":"core-sdk.esm.js","sources":["../src/enums/ChainId.ts","../src/enums/ChainKey.ts","../src/enums/Rounding.ts","../src/enums/SolidityType.ts","../src/enums/TradeType.ts","../src/enums/TradeVersion.ts","../src/constants/addresses.ts","../src/constants/chain.ts","../src/constants/legacy.ts","../src/entities/AbstractCurrency.ts","../src/entities/NativeCurrency.ts","../src/functions/validateAndParseAddress.ts","../src/entities/Token.ts","../src/constants/tokens.ts","../src/entities/Native/Avalanche.ts","../src/entities/Native/Binance.ts","../src/entities/Native/Celo.ts","../src/entities/Native/Ether.ts","../src/entities/Native/Fantom.ts","../src/entities/Native/Harmony.ts","../src/entities/Native/Heco.ts","../src/entities/Native/Matic.ts","../src/entities/Native/Movr.ts","../src/entities/Native/Okex.ts","../src/entities/Native/xDai.ts","../src/entities/Native/Palm.ts","../src/entities/Native/Fuse.ts","../src/entities/Native/Telos.ts","../src/entities/Native/Glmr.ts","../src/entities/Native/Kava.ts","../src/entities/Native/Metis.ts","../src/constants/natives.ts","../src/constants/numbers.ts","../src/constants/solidity.ts","../src/errors.ts","../src/entities/Fraction.ts","../src/entities/CurrencyAmount.ts","../src/entities/Price.ts","../src/functions/computePairAddress.ts","../src/functions/math.ts","../src/entities/Pair.ts","../src/entities/Percent.ts","../src/entities/Route.ts","../src/functions/computePriceImpact.ts","../src/functions/sortedInsert.ts","../src/entities/Trade.ts","../src/functions/contract.ts","../src/functions/rebase.ts","../src/functions/validateSolidityTypeInstance.ts","../src/router.ts"],"sourcesContent":["export enum ChainId {\n  ETHEREUM = 1,\n  ROPSTEN = 3,\n  RINKEBY = 4,\n  GÖRLI = 5,\n  KOVAN = 42,\n  MATIC = 137,\n  MATIC_TESTNET = 80001,\n  FANTOM = 250,\n  FANTOM_TESTNET = 4002,\n  XDAI = 100,\n  BSC = 56,\n  BSC_TESTNET = 97,\n  ARBITRUM = 42161,\n  ARBITRUM_TESTNET = 79377087078960,\n  MOONBEAM_TESTNET = 1287,\n  AVALANCHE = 43114,\n  AVALANCHE_TESTNET = 43113,\n  HECO = 128,\n  HECO_TESTNET = 256,\n  HARMONY = 1666600000,\n  HARMONY_TESTNET = 1666700000,\n  OKEX = 66,\n  OKEX_TESTNET = 65,\n  CELO = 42220,\n  PALM = 11297108109,\n  PALM_TESTNET = 11297108099,\n  MOONRIVER = 1285,\n  FUSE = 122,\n  TELOS = 40,\n  HARDHAT = 31337,\n  MOONBEAM = 1284,\n  OPTIMISM = 10,\n  KAVA = 2222,\n  METIS = 1088,\n}\n","export enum ChainKey {\n  ARBITRUM = 'arbitrum',\n  ARBITRUM_TESTNET = 'arbitrum-testnet',\n  AVALANCHE = 'avalanche',\n  AVALANCHE_TESTNET = 'avalance-testnet',\n  BSC = 'bsc',\n  BSC_TESTNET = 'bsc-testnet',\n  CELO = 'celo',\n  ETHEREUM = 'ethereum',\n  FANTOM = 'fantom',\n  FANTOM_TESTNET = 'fantom-testnet',\n  FUSE = 'fuse',\n  GÖRLI = 'goerli',\n  HARMONY = 'harmony',\n  HARMONY_TESTNET = 'harmony-testnet',\n  HECO = 'heco',\n  HECO_TESTNET = 'heco-testnet',\n  KOVAN = 'kovan',\n  ROPSTEN = 'ropsten',\n  MATIC = 'polygon',\n  MATIC_TESTNET = 'matic-testnet',\n  MOONBEAM_TESTNET = 'moonbeam-testnet',\n  MOONRIVER = 'moonriver',\n  OKEX = 'okex',\n  OKEX_TESTNET = 'okex-testnet',\n  PALM = 'palm',\n  PALM_TESTNET = 'palm-testnet',\n  RINKEBY = 'rinkeby',\n  TELOS = 'telos',\n  XDAI = 'xdai',\n  MOONBEAM = 'moonbeam',\n  OPTIMISM = 'optimism',\n  KAVA = 'kava',\n  METIS = 'metis',\n}\n","export enum Rounding {\n  ROUND_DOWN = 0,\n  ROUND_HALF_UP = 1,\n  ROUND_UP = 3,\n}\n","export enum SolidityType {\n    uint8 = 'uint8',\n    uint256 = 'uint256',\n}","export enum TradeType {\n  EXACT_INPUT,\n  EXACT_OUTPUT,\n}\n","export enum TradeVersion {\n  V2TRADE,\n  V3TRADE,\n}\n","import { AddressMap } from '../types'\nimport { ChainId } from '../enums'\n\nexport const SUSHI_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x6B3595068778DD592e39A122f4f5a5cF09C90fE2',\n  [ChainId.ROPSTEN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.RINKEBY]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.GÖRLI]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.KOVAN]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.FANTOM]: '0xae75A438b2E0cB8Bb01Ec1E1e376De11D44477CC',\n  [ChainId.MATIC]: '0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a',\n  [ChainId.XDAI]: '0x2995D1317DcD4f0aB89f4AE60F3f020A4F17C7CE',\n  [ChainId.BSC]: '0x947950BcC74888a40Ffa2593C5798F11Fc9124C4',\n  [ChainId.ARBITRUM]: '0xd4d42F0b6DEF4CE0383636770eF773390d85c61A',\n  [ChainId.AVALANCHE]: '0x37B608519F91f70F2EeB0e5Ed9AF4061722e4F76',\n  [ChainId.HECO]: '0x52E00B2dA5Bd7940fFe26B609A42F957f31118D5',\n  [ChainId.HARMONY]: '0xBEC775Cb42AbFa4288dE81F387a9b1A3c4Bc552A',\n  [ChainId.OKEX]: '0x2218E0D5E0173769F5b4939a3aE423f7e5E4EAB7',\n  [ChainId.OKEX_TESTNET]: '',\n  [ChainId.PALM]: '',\n  [ChainId.PALM_TESTNET]: '',\n  [ChainId.MOONRIVER]: '0xf390830DF829cf22c53c8840554B98eafC5dCBc2',\n  [ChainId.CELO]: '0x29dFce9c22003A4999930382Fd00f9Fd6133Acd1',\n  [ChainId.TELOS]: '0x922D641a426DcFFaeF11680e5358F34d97d112E1',\n  [ChainId.FUSE]: '0x90708b20ccC1eb95a4FA7C8b18Fd2C22a0Ff9E78',\n  [ChainId.MOONBEAM]: '0x2C78f1b70Ccf63CDEe49F9233e9fAa99D43AA07e',\n  [ChainId.KAVA]: '0x7C598c96D02398d89FbCb9d41Eab3DF0C16F227D',\n  [ChainId.METIS]: '0x17Ee7E4dA37B01FC1bcc908fA63DF343F23B4B7C',\n}\n\nexport const USDC_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48',\n  [ChainId.ROPSTEN]: '0x0D9C8723B343A8368BebE0B5E89273fF8D712e3C',\n  [ChainId.KOVAN]: '0xb7a4F3E9097C08dA09517b5aB877F7a917224ede',\n  [ChainId.MATIC]: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n  [ChainId.MATIC_TESTNET]: '0x742DfA5Aa70a8212857966D491D67B09Ce7D6ec7',\n  [ChainId.FANTOM]: '0x04068DA6C83AFCFA0e13ba15A6696662335D5B75',\n  [ChainId.BSC]: '0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d',\n  [ChainId.HARMONY]: '0x985458E523dB3d53125813eD68c274899e9DfAb4',\n  [ChainId.HECO]: '0x9362Bbef4B8313A8Aa9f0c9808B80577Aa26B73B',\n  [ChainId.OKEX]: '0xc946DAf81b08146B1C7A8Da2A851Ddf2B3EAaf85',\n  [ChainId.XDAI]: '0xDDAfbb505ad214D7b80b1f830fcCc89B60fb7A83',\n  [ChainId.ARBITRUM]: '0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8',\n  [ChainId.AVALANCHE]: '0xA7D7079b0FEaD91F3e65f86E8915Cb59c1a4C664',\n  [ChainId.MOONRIVER]: '0xE3F5a90F9cb311505cd691a46596599aA1A0AD7D',\n  [ChainId.CELO]: '0xef4229c8c3250C675F21BCefa42f58EfbfF6002a',\n  [ChainId.TELOS]: '0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b',\n  [ChainId.FUSE]: '0x620fd5fa44BE6af63715Ef4E65DDFA0387aD13F5',\n  [ChainId.MOONBEAM]: '0x8f552a71EFE5eeFc207Bf75485b356A0b3f01eC9',\n  [ChainId.OPTIMISM]: '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',\n  [ChainId.KAVA]: '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f',\n  [ChainId.METIS]: '0xEA32A96608495e54156Ae48931A7c20f0dcc1a21',\n}\n\nexport const USD_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: USDC_ADDRESS[ChainId.ETHEREUM],\n  [ChainId.ROPSTEN]: USDC_ADDRESS[ChainId.ROPSTEN],\n  [ChainId.KOVAN]: USDC_ADDRESS[ChainId.KOVAN],\n  [ChainId.MATIC]: USDC_ADDRESS[ChainId.MATIC],\n  [ChainId.MATIC_TESTNET]: USDC_ADDRESS[ChainId.MATIC_TESTNET],\n  [ChainId.FANTOM]: USDC_ADDRESS[ChainId.FANTOM],\n  [ChainId.BSC]: USDC_ADDRESS[ChainId.BSC],\n  [ChainId.HARMONY]: USDC_ADDRESS[ChainId.HARMONY],\n  [ChainId.HECO]: USDC_ADDRESS[ChainId.HECO],\n  [ChainId.OKEX]: USDC_ADDRESS[ChainId.OKEX],\n  [ChainId.XDAI]: USDC_ADDRESS[ChainId.XDAI],\n  [ChainId.ARBITRUM]: USDC_ADDRESS[ChainId.ARBITRUM],\n  [ChainId.AVALANCHE]: USDC_ADDRESS[ChainId.AVALANCHE],\n  [ChainId.MOONRIVER]: USDC_ADDRESS[ChainId.MOONRIVER],\n  [ChainId.CELO]: '0x765DE816845861e75A25fCA122bb6898B8B1282a',\n  [ChainId.TELOS]: USDC_ADDRESS[ChainId.TELOS],\n  [ChainId.FUSE]: USDC_ADDRESS[ChainId.FUSE],\n  [ChainId.MOONBEAM]: USDC_ADDRESS[ChainId.MOONBEAM],\n  [ChainId.OPTIMISM]: USDC_ADDRESS[ChainId.OPTIMISM],\n  [ChainId.KAVA]: USDC_ADDRESS[ChainId.KAVA],\n  [ChainId.METIS]: USDC_ADDRESS[ChainId.METIS],\n}\n\nexport const WETH9_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',\n  [ChainId.ROPSTEN]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.RINKEBY]: '0xc778417E063141139Fce010982780140Aa0cD5Ab',\n  [ChainId.GÖRLI]: '0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6',\n  [ChainId.KOVAN]: '0xd0A1E359811322d97991E03f863a0C30C2cF029C',\n  [ChainId.ARBITRUM]: '0x82aF49447D8a07e3bd95BD0d56f35241523fBab1',\n  [ChainId.ARBITRUM_TESTNET]: '0xf8456e5e6A225C2C1D74D8C9a4cB2B1d5dc1153b',\n  [ChainId.BSC]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.FANTOM]: '0x74b23882a30290451A17c44f4F05243b6b58C76d',\n  [ChainId.MATIC]: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n  [ChainId.MATIC_TESTNET]: '0x714550C2C1Ea08688607D86ed8EeF4f5E4F22323',\n  [ChainId.OKEX]: '0x2170Ed0880ac9A755fd29B2688956BD959F933F8',\n  [ChainId.HECO]: '0x64FF637fB478863B7468bc97D30a5bF3A428a1fD',\n  [ChainId.HARMONY]: '0x6983D1E6DEf3690C4d616b13597A09e6193EA013',\n  [ChainId.XDAI]: '0x6A023CCd1ff6F2045C3309768eAd9E68F978f6e1',\n  [ChainId.AVALANCHE]: '0x49D5c2BdFfac6CE2BFdB6640F4F80f226bc10bAB',\n  [ChainId.PALM]: '0x726138359C17F1E56bA8c4F737a7CAf724F6010b',\n  [ChainId.CELO]: '0x122013fd7dF1C6F636a5bb8f03108E876548b455',\n  [ChainId.MOONRIVER]: '0x639A647fbe20b6c8ac19E48E2de44ea792c62c5C',\n  [ChainId.TELOS]: '0xfA9343C3897324496A05fC75abeD6bAC29f8A40f',\n  [ChainId.FUSE]: '0xa722c13135930332Eb3d749B2F0906559D2C5b99',\n  [ChainId.MOONBEAM]: '0x30D2a9F5FDf90ACe8c17952cbb4eE48a55D916A7',\n  [ChainId.OPTIMISM]: '0x4200000000000000000000000000000000000006',\n  [ChainId.KAVA]: '0xE3F5a90F9cb311505cd691a46596599aA1A0AD7D',\n  [ChainId.METIS]: '0x420000000000000000000000000000000000000A',\n}\n\nexport const WNATIVE_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: WETH9_ADDRESS[ChainId.ETHEREUM],\n  [ChainId.ROPSTEN]: WETH9_ADDRESS[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9_ADDRESS[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9_ADDRESS[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9_ADDRESS[ChainId.KOVAN],\n  [ChainId.OPTIMISM]: WETH9_ADDRESS[ChainId.OPTIMISM],\n  [ChainId.ARBITRUM]: WETH9_ADDRESS[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n  [ChainId.FANTOM]: '0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83',\n  [ChainId.FANTOM_TESTNET]: '0xf1277d1Ed8AD466beddF92ef448A132661956621',\n  [ChainId.MATIC]: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270',\n  [ChainId.MATIC_TESTNET]: '0x5B67676a984807a212b1c59eBFc9B3568a474F0a',\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\n  [ChainId.BSC]: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n  [ChainId.BSC_TESTNET]: '0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd',\n  [ChainId.MOONBEAM_TESTNET]: '0x372d0695E75563D9180F8CE31c9924D7e8aaac47',\n  [ChainId.AVALANCHE]: '0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0x5545153CCFcA01fbd7Dd11C0b23ba694D9509A6F',\n  [ChainId.HECO_TESTNET]: '0x5B2DA6F42CA09C77D577a12BeaD0446148830687',\n  [ChainId.HARMONY]: '0xcF664087a5bB0237a0BAd6742852ec6c8d69A27a',\n  [ChainId.HARMONY_TESTNET]: '0x7a2afac38517d512E55C0bCe3b6805c10a04D60F',\n  [ChainId.OKEX]: '0x8F8526dbfd6E38E3D8307702cA8469Bae6C56C15',\n  [ChainId.OKEX_TESTNET]: '0x2219845942d28716c0F7C605765fABDcA1a7d9E0',\n  [ChainId.PALM]: '0xF98cABF0a963452C5536330408B2590567611a71',\n  [ChainId.CELO]: '0x471EcE3750Da237f93B8E339c536989b8978a438',\n  [ChainId.MOONRIVER]: '0xf50225a84382c74CbdeA10b0c176f71fc3DE0C4d',\n  [ChainId.FUSE]: '0x0BE9e53fd7EDaC9F859882AfdDa116645287C629',\n  [ChainId.TELOS]: '0xD102cE6A4dB07D247fcc28F366A623Df0938CA9E',\n  [ChainId.MOONBEAM]: '0xAcc15dC74880C9944775448304B263D191c6077F',\n  [ChainId.KAVA]: '0xc86c7C0eFbd6A49B35E8714C5f59D99De09A225b',\n  [ChainId.METIS]: '0x75cb093E4D61d2A2e65D8e0BBb01DE8d89b53481',\n}\n\nexport const DAI_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x6B175474E89094C44Da98b954EedeAC495271d0F',\n  [ChainId.ROPSTEN]: '0xc2118d4d90b274016cB7a54c03EF52E6c537D957',\n  [ChainId.KOVAN]: '0x4F96Fe3b7A6Cf9725f59d353F723c1bDb64CA6Aa',\n  [ChainId.MATIC]: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n  [ChainId.FANTOM]: '0x8D11eC38a3EB5E956B052f67Da8Bdc9bef8Abf3E',\n  [ChainId.BSC]: '0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3',\n  [ChainId.HARMONY]: '0xEf977d2f931C1978Db5F6747666fa1eACB0d0339',\n  [ChainId.HECO]: '0x3D760a45D0887DFD89A2F5385a236B29Cb46ED2a',\n  [ChainId.OKEX]: '0x21cDE7E32a6CAF4742d00d44B07279e7596d26B9',\n  [ChainId.XDAI]: '0xe91D153E0b41518A2Ce8Dd3D7944Fa863463a97d',\n  [ChainId.ARBITRUM]: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\n  [ChainId.AVALANCHE]: '0xd586E7F844cEa2F87f50152665BCbc2C279D8d70',\n  [ChainId.CELO]: '0x90Ca507a5D4458a4C6C6249d186b6dCb02a5BCCd',\n  [ChainId.MOONRIVER]: '0x80A16016cC4A2E6a2CACA8a4a498b1699fF0f844',\n  // [ChainId.TELOS]: '',\n  [ChainId.FUSE]: '0x94Ba7A27c7A95863d1bdC7645AC2951E0cca06bA',\n  [ChainId.MOONBEAM]: '0xc234A67a4F840E61adE794be47de455361b52413',\n  [ChainId.OPTIMISM]: '0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1',\n  [ChainId.KAVA]: '0x765277EebeCA2e31912C9946eAe1021199B39C61',\n  [ChainId.METIS]: '0x4c078361FC9BbB78DF910800A991C7c3DD2F6ce0',\n}\n\nexport const USDT_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xdAC17F958D2ee523a2206206994597C13D831ec7',\n  [ChainId.ROPSTEN]: '0x110a13FC3efE6A245B50102D2d79B3E76125Ae83',\n  [ChainId.KOVAN]: '0x07de306FF27a2B630B1141956844eB1552B956B5',\n  [ChainId.MATIC]: '0xc2132D05D31c914a87C6611C10748AEb04B58e8F',\n  [ChainId.FANTOM]: '0x049d68029688eAbF473097a2fC38ef61633A3C7A',\n  [ChainId.BSC]: '0x55d398326f99059fF775485246999027B3197955',\n  [ChainId.HARMONY]: '0x3C2B8Be99c50593081EAA2A724F0B8285F5aba8f',\n  [ChainId.HECO]: '0xa71EdC38d189767582C38A3145b5873052c3e47a',\n  [ChainId.OKEX]: '0x382bB369d343125BfB2117af9c149795C6C65C50',\n  [ChainId.XDAI]: '0x4ECaBa5870353805a9F068101A40E0f32ed605C6',\n  [ChainId.ARBITRUM]: '0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9',\n  [ChainId.AVALANCHE]: '0xc7198437980c041c805A1EDcbA50c1Ce5db95118',\n  [ChainId.CELO]: '0x88eeC49252c8cbc039DCdB394c0c2BA2f1637EA0',\n  [ChainId.MOONRIVER]: '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',\n  [ChainId.TELOS]: '0xeFAeeE334F0Fd1712f9a8cc375f427D9Cdd40d73',\n  [ChainId.FUSE]: '0xFaDbBF8Ce7D5b7041bE672561bbA99f79c532e10',\n  [ChainId.MOONBEAM]: '0x8e70cd5b4ff3f62659049e74b6649c6603a0e594',\n  [ChainId.OPTIMISM]: '0x94b008aA00579c1307B0EF2c499aD98a8ce58e58',\n  [ChainId.KAVA]: '0xB44a9B6905aF7c801311e8F4E76932ee959c663C',\n  [ChainId.METIS]: '0xbB06DCA3AE6887fAbF931640f67cab3e3a16F4dC',\n}\n\nexport const MIM_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x99D8a9C45b2ecA8864373A26D1459e3Dff1e17F3',\n  [ChainId.FANTOM]: '0x82f0B8B456c1A451378467398982d4834b6829c1',\n  [ChainId.BSC]: '0xfE19F0B51438fd612f6FD59C1dbB3eA319f433Ba',\n  [ChainId.ARBITRUM]: '0xFEa7a6a0B346362BF88A9e4A88416B77a57D6c2A',\n  [ChainId.AVALANCHE]: '0x130966628846BFd36ff31a822705796e8cb8C18D',\n  [ChainId.MATIC]: '0x49a0400587A7F65072c87c4910449fDcC5c47242',\n  [ChainId.MOONRIVER]: '0x0caE51e1032e8461f4806e26332c030E34De3aDb',\n}\n\nexport const FRAX_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x853d955aCEf822Db058eb8505911ED77F175b99e',\n  [ChainId.FANTOM]: '0xdc301622e621166BD8E82f2cA0A26c13Ad0BE355',\n  [ChainId.BSC]: '0x90C97F71E18723b0Cf0dfa30ee176Ab653E89F40',\n  [ChainId.ARBITRUM]: '0x17FC002b466eEc40DaE837Fc4bE5c67993ddBd6F',\n  [ChainId.AVALANCHE]: '0xD24C2Ad096400B6FBcd2ad8B24E7acBc21A1da64',\n  [ChainId.MATIC]: '0x45c32fA6DF82ead1e2EF74d17b76547EDdFaFF89',\n  [ChainId.MOONRIVER]: '0x1A93B23281CC1CDE4C4741353F3064709A16197d',\n  [ChainId.MOONBEAM]: '0x322E86852e492a7Ee17f28a78c663da38FB33bfb',\n  [ChainId.HARMONY]: '0xFa7191D292d5633f702B0bd7E3E3BcCC0e633200',\n}\n\nexport const FACTORY_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xC0AEe478e3658e2610c5F7A4A2E1777cE9e4f2Ac',\n  [ChainId.ROPSTEN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.RINKEBY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.GÖRLI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.KOVAN]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.MATIC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.XDAI]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.BSC]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.BSC_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0x2Ce3F07dD4c62b56a502E223A7cBE38b1d77A1b5',\n  [ChainId.AVALANCHE]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.AVALANCHE_TESTNET]: '0xd00ae08403B9bbb9124bB305C09058E32C39A48c',\n  [ChainId.HECO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HECO_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.HARMONY_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.OKEX_TESTNET]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.CELO]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.PALM_TESTNET]: '',\n  [ChainId.MOONRIVER]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.FUSE]: '0x43eA90e2b786728520e4f930d2A71a477BF2737C',\n  [ChainId.TELOS]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.MOONBEAM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n}\n\nexport const ROUTER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F',\n  [ChainId.RINKEBY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ROPSTEN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.GÖRLI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.KOVAN]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FANTOM_TESTNET]: '',\n  [ChainId.MATIC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.MATIC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.XDAI]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.BSC_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.ARBITRUM_TESTNET]: '',\n  [ChainId.MOONBEAM_TESTNET]: '0xeB5c2BB5E83B51d83F3534Ae21E84336B8B376ef',\n  [ChainId.AVALANCHE]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.AVALANCHE_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HECO_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.HARMONY_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.OKEX_TESTNET]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.CELO]: '0x1421bDe4B10e8dd459b3BCb598810B1337D56842',\n  [ChainId.PALM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.PALM_TESTNET]: '',\n  [ChainId.MOONRIVER]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.FUSE]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\n  [ChainId.TELOS]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n  [ChainId.MOONBEAM]: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506',\n}\n\nexport const MASTERCHEF_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd',\n  [ChainId.ROPSTEN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.RINKEBY]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.GÖRLI]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.KOVAN]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n}\n\nexport const BAR_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x8798249c2E607446EfB7Ad49eC89dD1865Ff4272',\n  [ChainId.ROPSTEN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.RINKEBY]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.GÖRLI]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n  [ChainId.KOVAN]: '0x1be211D8DA40BC0ae8719c6663307Bfc987b1d6c',\n}\n\nexport const MAKER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xE11fc0B43ab98Eb91e9836129d1ee7c3Bc95df50',\n  [ChainId.ROPSTEN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.RINKEBY]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.GÖRLI]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n  [ChainId.KOVAN]: '0x1b9d177CcdeA3c79B6c8F40761fc8Dc9d0500EAa',\n}\n\nexport const TIMELOCK_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x9a8541Ddf3a932a9A922B607e9CF7301f1d47bD1',\n}\n\nexport const BENTOBOX_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ROPSTEN]: '0x6BdD85290001C8Aef74f35A7606065FA15aD5ACF',\n  [ChainId.RINKEBY]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.GÖRLI]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.KOVAN]: '0xc381a85ed7C7448Da073b7d6C9d4cBf1Cbf576f0',\n  [ChainId.FANTOM]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.MATIC]: '0x0319000133d3AdA02600f0875d2cf03D442C3367',\n  [ChainId.MATIC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.XDAI]: '0xE2d7F5dd869Fc7c126D21b13a9080e75a4bDb324',\n  [ChainId.BSC]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.BSC_TESTNET]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.ARBITRUM]: '0x74c764D41B77DBbb4fe771daB1939B00b146894A',\n  [ChainId.AVALANCHE]: '0x0711B6026068f736bae6B213031fCE978D48E026',\n  [ChainId.HECO]: '0xF5BCE5077908a1b7370B9ae04AdC565EBd643966',\n  [ChainId.CELO]: '0x0711B6026068f736bae6B213031fCE978D48E026',\n  [ChainId.HARMONY]: '0xA28cfF72b04f83A7E3f912e6ad34d5537708a2C2',\n  [ChainId.MOONBEAM]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.MOONRIVER]: '0x145d82bCa93cCa2AE057D1c6f26245d1b9522E6F',\n  [ChainId.OPTIMISM]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.KAVA]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n  [ChainId.METIS]: '0xc35DADB65012eC5796536bD9864eD8773aBc74C4',\n}\n\nexport const KASHI_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.KOVAN]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.MATIC]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.XDAI]: '0x7a6DA9903d0a481F40b8336c1463487BC8C0407e',\n  [ChainId.BSC]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n  [ChainId.ARBITRUM]: '0xa010eE0226cd071BeBd8919A1F675cAE1f1f5D3e',\n  [ChainId.AVALANCHE]: '0x513037395FA0C9c35E41f89189ceDfE3bD42fAdb',\n  [ChainId.AVALANCHE_TESTNET]: '',\n  [ChainId.HECO]: '0x2cBA6Ab6574646Badc84F0544d05059e57a5dc42',\n}\n\nexport const SUSHISWAP_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.MATIC]: '0xe9589382130Ded5DF2397E2fD7A3E9b41DD2701D',\n  [ChainId.XDAI]: '0xE02BDb31C353CE95A1D74F81C93eEa70Bf7371B9',\n  [ChainId.BSC]: '0x1766733112408b95239aD1951925567CB1203084',\n  [ChainId.ARBITRUM]: '0x0bFcD5dD76218bF9e3BE8A1055f9e6D27E5745eb',\n  [ChainId.AVALANCHE]: '0x062eee8B38ab5E8ee3bc58CE505939db53E63785',\n  [ChainId.HECO]: '0x1766733112408b95239aD1951925567CB1203084',\n}\n\nexport const SUSHISWAP_MULTISWAPPER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x545820d5Cc05248da112419fEfb18522c63C8e12',\n  [ChainId.KOVAN]: '0xc0c1649b2c67f1a9f5ff1dd618188165e2555bcf',\n  [ChainId.MATIC]: '0x73BE093B84c773fe8eE0f76DDc0829E45c215415',\n  [ChainId.XDAI]: '0x735f0FbEb3b6389986BcaAf073Af07D2F8be2b93',\n  [ChainId.BSC]: '0x86c655cAc122e9A2fd9Ae1f79Df27b30E357968c',\n  [ChainId.ARBITRUM]: '0xbe7D5968296843756109D42946D01195320922EF',\n  [ChainId.AVALANCHE]: '0xB7C8b5BFcd7212f034Be42a2aAb08b8773B76920',\n}\n\nexport const SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xB527C5295c4Bc348cBb3a2E96B2494fD292075a7',\n  [ChainId.KOVAN]: '0x75AE0Aa596D39b20addC921DeB5EE3c96279dABE',\n  [ChainId.MATIC]: '0xDB6C4EDd9545d3b815dA85E6429B699c418886f9',\n  [ChainId.XDAI]: '0x07b6e34EeCF38B02e83b6B4702699717e298967E',\n  [ChainId.BSC]: '0x1B16149Edaf1EFa6ADE6aEEF33e63C6e08c9bB1B',\n  [ChainId.ARBITRUM]: '0x860D841bfD1cfEf72A14B2b734005799F07dC7ED',\n  [ChainId.AVALANCHE]: '0x2c46217Fae90D302d1Fb5467ADA504bC2A84f448',\n}\n\nexport const PEGGED_ORACLE_ADDRESS = '0x6cbfbB38498Df0E1e7A4506593cDB02db9001564'\n\nexport const SUSHISWAP_TWAP_0_ORACLE_ADDRESS = '0x66F03B0d30838A3fee971928627ea6F59B236065'\n\nexport const SUSHISWAP_TWAP_1_ORACLE_ADDRESS = '0x0D51b575591F8f74a2763Ade75D3CDCf6789266f'\n\nexport const CHAINLINK_ORACLE_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.MATIC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.XDAI]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.BSC]: '0x00632CFe43d8F9f8E6cD0d39Ffa3D4fa7ec73CFB',\n  [ChainId.ARBITRUM]: '0xB2B5C26B6868be10fF77e4E233fD231ceB90162a',\n  [ChainId.AVALANCHE]: '0x43198B6fA5d89B88D2E072fA4841724571De5A59',\n}\n\nexport const BORING_HELPER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.KOVAN]: '0x5bd6e4eFA335192FDA5D6B42a344ccA3d45894B8',\n  [ChainId.MATIC]: '0xA77a7fD5a16237B85E0FAd02C51f459D18AE93Cd',\n  [ChainId.XDAI]: '0x97e4a0fb71243A83A6FbaEF7Cf73617594e4cF2F',\n  [ChainId.BSC]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n  [ChainId.ARBITRUM]: '0x9AF28d4f7Fa007686958c306BD4c8c52c2b615b8',\n  [ChainId.AVALANCHE]: '0xD18cA07a599bf5eBb9B7327871ad682F0b660748',\n  [ChainId.HECO]: '0x11Ca5375AdAfd6205E41131A4409f182677996E6',\n}\n\nexport const MINICHEF_ADDRESS: AddressMap = {\n  [ChainId.MATIC]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.XDAI]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n  [ChainId.ARBITRUM]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\n  [ChainId.CELO]: '0x8084936982D089130e001b470eDf58faCA445008',\n  [ChainId.MOONRIVER]: '0x3dB01570D97631f69bbb0ba39796865456Cf89A5',\n  [ChainId.FUSE]: '0x182CD0C6F1FaEc0aED2eA83cd0e160c8Bd4cb063',\n  [ChainId.FANTOM]: '0xf731202A3cf7EfA9368C2d7bD613926f7A144dB5',\n  [ChainId.MOONBEAM]: '0x011E52E4E40CF9498c79273329E8827b21E2e581',\n  [ChainId.KAVA]: '0xf731202A3cf7EfA9368C2d7bD613926f7A144dB5',\n  [ChainId.METIS]: '0x1334c8e873E1cae8467156e2A81d1C8b566B2da1',\n}\n\nexport const MASTERCHEF_V2_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xEF0881eC094552b2e128Cf945EF17a6752B4Ec5d',\n}\n\nexport const ENS_REGISTRAR_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.GÖRLI]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.ROPSTEN]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n  [ChainId.RINKEBY]: '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e',\n}\n\nexport const ZAPPER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\n  [ChainId.ROPSTEN]: '0xcff6eF0B9916682B37D80c19cFF8949bc1886bC2',\n}\n\nexport const MERKLE_DISTRIBUTOR_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0xcBE6B83e77cdc011Cc18F6f0Df8444E5783ed982',\n  [ChainId.ROPSTEN]: '0x84d1f7202e0e7dac211617017ca72a2cb5e2b955',\n}\n\nexport const MULTICALL2_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ROPSTEN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.RINKEBY]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.GÖRLI]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.KOVAN]: '0x5BA1e12693Dc8F9c48aAD8770482f4739bEeD696',\n  [ChainId.ARBITRUM]: '0x80C7DD17B01855a6D2347444a0FCC36136a314de',\n  [ChainId.ARBITRUM_TESTNET]: '0xa501c031958F579dB7676fF1CE78AD305794d579',\n  [ChainId.CELO]: '0x9aac9048fC8139667D6a2597B902865bfdc225d3',\n  [ChainId.FANTOM]: '0x22D4cF72C45F8198CfbF4B568dBdB5A85e8DC0B5',\n  [ChainId.MATIC]: '0x02817C1e3543c2d908a590F5dB6bc97f933dB4BD',\n  [ChainId.XDAI]: '0x67dA5f2FfaDDfF067AB9d5F025F8810634d84287',\n  [ChainId.BSC]: '0xa9193376D09C7f31283C54e56D013fCF370Cd9D9',\n  [ChainId.AVALANCHE]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HECO]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.HARMONY]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.OKEX]: '0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3',\n  [ChainId.PALM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.MOONRIVER]: '0x270f2F35bED92B7A59eA5F08F6B3fd34c8D9D9b5',\n  [ChainId.FUSE]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n  [ChainId.TELOS]: '0xdDCbf776dF3dE60163066A5ddDF2277cB445E0F3',\n  [ChainId.MOONBEAM]: '0x0769fd68dFb93167989C6f7254cd0D766Fb2841F',\n}\n\nexport const BALANCE_FETCHER_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x386a4B75578C7843A6082EFe181D5d629236C047',\n  [ChainId.MATIC]: '0x06a846BA430Ed005bE60f8598B4C563dbaa6feF0',\n  [ChainId.AVALANCHE]: '0x4d4A0D45a98AE8EC25b359D93A088A87BC9eF70b',\n  [ChainId.XDAI]: '0x26DC4e2f63bad22BCdF99087E40bd5B6c456e69d',\n  [ChainId.BSC]: '0x9d6c13Bc5269E553C4697767b4c267FB33Dd8d1A',\n  [ChainId.ARBITRUM]: '0x0e9b6C08Fe70Aac8fd08a74a076c2B1C9f7c7d14',\n  [ChainId.HECO]: '0x4d4A0D45a98AE8EC25b359D93A088A87BC9eF70b',\n  [ChainId.KOVAN]: '0x980bE39AC44E5500f0f16bA692084A6E44e6549A',\n}\n\nexport const MULTISIG_ADDRESS: AddressMap = {\n  [ChainId.ETHEREUM]: '0x19B3Eb3Af5D93b77a5619b047De0EED7115A19e7',\n  // [ChainId.ROPSTEN]: '',\n  // [ChainId.RINKEBY]: '',\n  // [ChainId.GÖRLI]: '',\n  // [ChainId.KOVAN]: '',\n  [ChainId.FANTOM]: '0xF9E7d4c6d36ca311566f46c81E572102A2DC9F52',\n  [ChainId.MATIC]: '0x850a57630A2012B2494779fBc86bBc24F2a7baeF',\n  [ChainId.XDAI]: '0xc375411C6597F692Add6a7a3AD5b3C38626B0F26',\n  [ChainId.BSC]: '0xc6fD91aD4919Fd91e2c84077ba648092cB499638',\n  [ChainId.ARBITRUM]: '0x978982772b8e4055B921bf9295c0d74eB36Bc54e',\n  [ChainId.AVALANCHE]: '0x09842Ce338647906B686aBB3B648A6457fbB25DA',\n  // [ChainId.HECO]: '',\n  [ChainId.HARMONY]: '0x30af69A3f4a6f266961313Ce0943719dF4A8AA10',\n  // [ChainId.OKEX]: '',\n  // [ChainId.OKEX_TESTNET]: '',\n  // [ChainId.PALM]: '',\n  // [ChainId.PALM_TESTNET]: '',\n  [ChainId.MOONRIVER]: '0x939f7E76cc515cc296dD3ce362D9a52e148A7D5f',\n  [ChainId.CELO]: '0x751b01Fa14fD9640a1DF9014e2D0f3a03A198b81',\n  // [ChainId.TELOS]: '',\n  [ChainId.FUSE]: '0x33b6beb37837459Ee84a1Ffed2C6a4ca22e5F316',\n}\n","import { ChainId } from '../enums'\nimport { ChainKey } from '../enums'\n\nexport const CHAIN_KEY: { [chainId: number]: ChainKey } = {\n  [ChainId.ETHEREUM]: ChainKey.ETHEREUM,\n  [ChainId.ROPSTEN]: ChainKey.ROPSTEN,\n  [ChainId.RINKEBY]: ChainKey.RINKEBY,\n  [ChainId.GÖRLI]: ChainKey.GÖRLI,\n  [ChainId.KOVAN]: ChainKey.KOVAN,\n  [ChainId.MATIC]: ChainKey.MATIC,\n  [ChainId.MATIC_TESTNET]: ChainKey.MATIC_TESTNET,\n  [ChainId.FANTOM]: ChainKey.FANTOM,\n  [ChainId.FANTOM_TESTNET]: ChainKey.FANTOM_TESTNET,\n  [ChainId.XDAI]: ChainKey.XDAI,\n  [ChainId.BSC]: ChainKey.BSC,\n  [ChainId.BSC_TESTNET]: ChainKey.BSC_TESTNET,\n  [ChainId.ARBITRUM]: ChainKey.ARBITRUM,\n  [ChainId.ARBITRUM_TESTNET]: ChainKey.ARBITRUM_TESTNET,\n  [ChainId.MOONBEAM_TESTNET]: ChainKey.MOONBEAM_TESTNET,\n  [ChainId.AVALANCHE]: ChainKey.AVALANCHE,\n  [ChainId.AVALANCHE_TESTNET]: ChainKey.AVALANCHE_TESTNET,\n  [ChainId.HECO]: ChainKey.HECO,\n  [ChainId.HECO_TESTNET]: ChainKey.HECO_TESTNET,\n  [ChainId.HARMONY]: ChainKey.HARMONY,\n  [ChainId.HARMONY_TESTNET]: ChainKey.HARMONY_TESTNET,\n  [ChainId.OKEX]: ChainKey.OKEX,\n  [ChainId.OKEX_TESTNET]: ChainKey.OKEX_TESTNET,\n  [ChainId.CELO]: ChainKey.CELO,\n  [ChainId.PALM]: ChainKey.PALM,\n  [ChainId.PALM_TESTNET]: ChainKey.PALM_TESTNET,\n  [ChainId.MOONRIVER]: ChainKey.MOONRIVER,\n  [ChainId.FUSE]: ChainKey.FUSE,\n  [ChainId.TELOS]: ChainKey.TELOS,\n  [ChainId.MOONBEAM]: ChainKey.MOONBEAM,\n  [ChainId.OPTIMISM]: ChainKey.OPTIMISM,\n  [ChainId.KAVA]: ChainKey.KAVA,\n  [ChainId.METIS]: ChainKey.METIS,\n}\n","import { ChainId } from '../enums/ChainId'\n\nexport const INIT_CODE_HASH: { [chainId: number]: string } = {\n  [ChainId.ETHEREUM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.ROPSTEN]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.RINKEBY]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.GÖRLI]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.KOVAN]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.FANTOM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.MATIC]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.MATIC_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.XDAI]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.BSC]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.BSC_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.ARBITRUM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.MOONBEAM_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.AVALANCHE]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.AVALANCHE_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.HECO]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.HECO_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.HARMONY]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.HARMONY_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.OKEX]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.OKEX_TESTNET]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.CELO]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.PALM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.MOONRIVER]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.FUSE]: '0x1901958ef8b470f2c0a3875a79ee0bd303866d85102c0f1ea820d317024d50b5',\n  [ChainId.TELOS]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n  [ChainId.MOONBEAM]: '0xe18a34eb0e04b04f7a0ac29a6e80748dca96319b42c54d679cb821dca90c6303',\n}\n","import { Currency } from './Currency'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\n/**\n * A currency is any fungible financial instrument, including Ether, all ERC20 tokens, and other chain-native currencies\n */\nexport abstract class AbstractCurrency {\n  /**\n   * Returns whether the currency is native to the chain and must be wrapped (e.g. Ether)\n   */\n  public abstract readonly isNative: boolean\n  /**\n   * Returns whether the currency is a token that is usable in Uniswap without wrapping\n   */\n  public abstract readonly isToken: boolean\n\n  /**\n   * The chain ID on which this currency resides\n   */\n  public readonly chainId: number\n  /**\n   * The decimals used in representing currency amounts\n   */\n  public readonly decimals: number\n  /**\n   * The symbol of the currency, i.e. a short textual non-unique identifier\n   */\n  public readonly symbol?: string\n  /**\n   * The name of the currency, i.e. a descriptive textual non-unique identifier\n   */\n  public readonly name?: string\n\n  /**\n   * Constructs an instance of the base class `BaseCurrency`.\n   * @param chainId the chain ID on which this currency resides\n   * @param decimals decimals of the currency\n   * @param symbol symbol of the currency\n   * @param name of the currency\n   */\n  protected constructor(chainId: number, decimals: number, symbol?: string, name?: string) {\n    invariant(Number.isSafeInteger(chainId), 'CHAIN_ID')\n    invariant(decimals >= 0 && decimals < 255 && Number.isInteger(decimals), 'DECIMALS')\n\n    this.chainId = chainId\n    this.decimals = decimals\n    this.symbol = symbol\n    this.name = name\n  }\n\n  /**\n   * Returns whether this currency is functionally equivalent to the other currency\n   * @param other the other currency\n   */\n  public abstract equals(other: Currency): boolean\n\n  /**\n   * Return the wrapped version of this currency that can be used with the Uniswap contracts. Currencies must\n   * implement this to be used in Uniswap\n   */\n  public abstract get wrapped(): Token\n}\n","import { AbstractCurrency } from './AbstractCurrency'\n\n/**\n * Represents the native currency of the chain on which it resides, e.g.\n */\nexport abstract class NativeCurrency extends AbstractCurrency {\n  public readonly isNative: true = true\n  public readonly isToken: false = false\n}\n","import { getAddress } from '@ethersproject/address'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\n\n// warns if addresses are not checksummed\nexport function validateAndParseAddress(address: string): string {\n  try {\n    const checksummedAddress = getAddress(address)\n    warning(address === checksummedAddress, `${address} is not checksummed.`)\n    return checksummedAddress\n  } catch (error) {\n    invariant(false, `${address} is not a valid address.`)\n  }\n}\n","import { AbstractCurrency } from './AbstractCurrency'\nimport { Currency } from './Currency'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from '../functions/validateAndParseAddress'\n\n/**\n * Represents an ERC20 token with a unique address and some metadata.\n */\nexport class Token extends AbstractCurrency {\n  public readonly chainId: number\n  public readonly address: string\n\n  public readonly isNative: false = false\n  public readonly isToken: true = true\n\n  public constructor(chainId: number, address: string, decimals: number, symbol?: string, name?: string) {\n    super(chainId, decimals, symbol, name)\n    this.chainId = chainId\n    this.address = validateAndParseAddress(address)\n  }\n\n  /**\n   * Returns true if the two tokens are equivalent, i.e. have the same chainId and address.\n   * @param other other token to compare\n   */\n  public equals(other: Currency): boolean {\n    return other.isToken && this.chainId === other.chainId && this.address === other.address\n  }\n\n  /**\n   * Returns true if the address of this token sorts before the address of the other token\n   * @param other other token to compare\n   * @throws if the tokens have the same address\n   * @throws if the tokens are on different chains\n   */\n  public sortsBefore(other: Token): boolean {\n    invariant(this.chainId === other.chainId, 'CHAIN_IDS')\n    invariant(this.address !== other.address, 'ADDRESSES')\n    return this.address.toLowerCase() < other.address.toLowerCase()\n  }\n\n  /**\n   * Return this token, which does not need to be wrapped\n   */\n  public get wrapped(): Token {\n    return this\n  }\n\n  /**\n   * Return logo\n   */\n  // public get logo(): string | null {\n  //   return this.chainId in CHAIN_KEY ? `https://raw.githubusercontent.com/sushiswap/logos/main/network/${CHAIN_KEY[this.chainId]}/.jpg` : undefined\n  // }\n}\n\n/**\n * Compares two currencies for equality\n */\nexport function currencyEquals(currencyA: Currency, currencyB: Currency): boolean {\n  if (currencyA instanceof Token && currencyB instanceof Token) {\n    return currencyA.equals(currencyB)\n  } else if (currencyA instanceof Token) {\n    return false\n  } else if (currencyB instanceof Token) {\n    return false\n  } else {\n    return currencyA === currencyB\n  }\n}\n","import { ChainTokenMap, TokenMap } from '../types'\nimport { SUSHI_ADDRESS, USDC_ADDRESS, USD_ADDRESS, WETH9_ADDRESS, WNATIVE_ADDRESS } from './addresses'\n\nimport { ChainId } from '../enums'\nimport { Token } from '../entities/Token'\n\nexport const USDC: TokenMap = {\n  [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, USDC_ADDRESS[ChainId.ETHEREUM], 6, 'USDC', 'USD Coin'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, USDC_ADDRESS[ChainId.ROPSTEN], 6, 'USDC', 'USD Coin'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, USDC_ADDRESS[ChainId.KOVAN], 6, 'USDC', 'USD Coin'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, USDC_ADDRESS[ChainId.MATIC], 6, 'USDC', 'USD Coin'),\n  [ChainId.MATIC_TESTNET]: new Token(ChainId.MATIC_TESTNET, USDC_ADDRESS[ChainId.MATIC_TESTNET], 6, 'USDC', 'USD Coin'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, USDC_ADDRESS[ChainId.FANTOM], 6, 'USDC', 'USD Coin'),\n  [ChainId.BSC]: new Token(ChainId.BSC, USDC_ADDRESS[ChainId.BSC], 18, 'USDC', 'USD Coin'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, USDC_ADDRESS[ChainId.HARMONY], 6, 'USDC', 'USD Coin'),\n  [ChainId.HECO]: new Token(ChainId.HECO, USDC_ADDRESS[ChainId.HECO], 6, 'USDC', 'USD Coin'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, USDC_ADDRESS[ChainId.OKEX], 18, 'USDC', 'USD Coin'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, USDC_ADDRESS[ChainId.XDAI], 6, 'USDC', 'USD Coin'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, USDC_ADDRESS[ChainId.ARBITRUM], 6, 'USDC', 'USD Coin'),\n  [ChainId.MOONRIVER]: new Token(ChainId.MOONRIVER, USDC_ADDRESS[ChainId.MOONRIVER], 6, 'USDC', 'USD Coin'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, USDC_ADDRESS[ChainId.AVALANCHE], 6, 'USDC', 'USD Coin'),\n  [ChainId.FUSE]: new Token(ChainId.FUSE, USDC_ADDRESS[ChainId.FUSE], 6, 'USDC', 'USD Coin'),\n  [ChainId.TELOS]: new Token(ChainId.TELOS, USDC_ADDRESS[ChainId.TELOS], 6, 'USDC', 'USD Coin'),\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, USDC_ADDRESS[ChainId.MOONBEAM], 6, 'USDC', 'USD Coin'),\n  [ChainId.OPTIMISM]: new Token(ChainId.OPTIMISM, USDC_ADDRESS[ChainId.OPTIMISM], 6, 'USDC', 'USD Coin'),\n  [ChainId.KAVA]: new Token(ChainId.KAVA, USDC_ADDRESS[ChainId.KAVA], 6, 'USDC', 'USD Coin'),\n  [ChainId.METIS]: new Token(ChainId.METIS, USDC_ADDRESS[ChainId.METIS], 6, 'USDC', 'USD Coin'),\n}\n\nexport const USD: TokenMap = {\n  ...USDC,\n  [ChainId.CELO]: new Token(ChainId.CELO, USD_ADDRESS[ChainId.CELO], 18, 'cUSD', 'Celo Dollar'),\n}\n\nexport const WETH9: TokenMap = {\n  [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, WETH9_ADDRESS[ChainId.ETHEREUM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, WETH9_ADDRESS[ChainId.ROPSTEN], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, WETH9_ADDRESS[ChainId.RINKEBY], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, WETH9_ADDRESS[ChainId.GÖRLI], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, WETH9_ADDRESS[ChainId.KOVAN], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, WETH9_ADDRESS[ChainId.ARBITRUM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.ARBITRUM_TESTNET]: new Token(\n    ChainId.ARBITRUM_TESTNET,\n    WETH9_ADDRESS[ChainId.ARBITRUM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.BSC]: new Token(ChainId.BSC, WETH9_ADDRESS[ChainId.BSC], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WETH9_ADDRESS[ChainId.FANTOM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WETH9_ADDRESS[ChainId.MATIC], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    WETH9_ADDRESS[ChainId.MATIC_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WETH9_ADDRESS[ChainId.OKEX], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.HECO]: new Token(ChainId.HECO, WETH9_ADDRESS[ChainId.HECO], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WETH9_ADDRESS[ChainId.HARMONY], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WETH9_ADDRESS[ChainId.XDAI], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WETH9_ADDRESS[ChainId.AVALANCHE], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.PALM]: new Token(ChainId.PALM, WETH9_ADDRESS[ChainId.PALM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.TELOS]: new Token(ChainId.TELOS, WETH9_ADDRESS[ChainId.TELOS], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.FUSE]: new Token(ChainId.FUSE, WETH9_ADDRESS[ChainId.FUSE], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, WETH9_ADDRESS[ChainId.MOONBEAM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.OPTIMISM]: new Token(ChainId.OPTIMISM, WETH9_ADDRESS[ChainId.OPTIMISM], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.KAVA]: new Token(ChainId.KAVA, WETH9_ADDRESS[ChainId.KAVA], 18, 'WETH', 'Wrapped Ether'),\n  [ChainId.METIS]: new Token(ChainId.METIS, WETH9_ADDRESS[ChainId.METIS], 18, 'WETH', 'Wrapped Ether'),\n}\n\nexport const WNATIVE: TokenMap = {\n  [ChainId.ETHEREUM]: WETH9[ChainId.ETHEREUM],\n  [ChainId.ROPSTEN]: WETH9[ChainId.ROPSTEN],\n  [ChainId.RINKEBY]: WETH9[ChainId.RINKEBY],\n  [ChainId.GÖRLI]: WETH9[ChainId.GÖRLI],\n  [ChainId.KOVAN]: WETH9[ChainId.KOVAN],\n  [ChainId.OPTIMISM]: WETH9[ChainId.OPTIMISM],\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, WNATIVE_ADDRESS[ChainId.FANTOM], 18, 'WFTM', 'Wrapped FTM'),\n  [ChainId.FANTOM_TESTNET]: new Token(\n    ChainId.FANTOM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.FANTOM_TESTNET],\n    18,\n    'FTM',\n    'Wrapped FTM'\n  ),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, WNATIVE_ADDRESS[ChainId.MATIC], 18, 'WMATIC', 'Wrapped Matic'),\n  [ChainId.MATIC_TESTNET]: new Token(\n    ChainId.MATIC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MATIC_TESTNET],\n    18,\n    'WMATIC',\n    'Wrapped Matic'\n  ),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, WNATIVE_ADDRESS[ChainId.XDAI], 18, 'WXDAI', 'Wrapped xDai'),\n  [ChainId.BSC]: new Token(ChainId.BSC, WNATIVE_ADDRESS[ChainId.BSC], 18, 'WBNB', 'Wrapped BNB'),\n  [ChainId.BSC_TESTNET]: new Token(\n    ChainId.BSC_TESTNET,\n    WNATIVE_ADDRESS[ChainId.BSC_TESTNET],\n    18,\n    'WBNB',\n    'Wrapped BNB'\n  ),\n  [ChainId.ARBITRUM]: WETH9[ChainId.ARBITRUM],\n  [ChainId.ARBITRUM_TESTNET]: WETH9[ChainId.ARBITRUM_TESTNET],\n  [ChainId.MOONBEAM_TESTNET]: new Token(\n    ChainId.MOONBEAM_TESTNET,\n    WNATIVE_ADDRESS[ChainId.MOONBEAM_TESTNET],\n    18,\n    'WETH',\n    'Wrapped Ether'\n  ),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, WNATIVE_ADDRESS[ChainId.AVALANCHE], 18, 'WAVAX', 'Wrapped AVAX'),\n  [ChainId.AVALANCHE_TESTNET]: new Token(\n    ChainId.AVALANCHE_TESTNET,\n    WNATIVE_ADDRESS[ChainId.AVALANCHE_TESTNET],\n    18,\n    'WAVAX',\n    'Wrapped AVAX'\n  ),\n  [ChainId.HECO]: new Token(ChainId.HECO, WNATIVE_ADDRESS[ChainId.HECO], 18, 'WHT', 'Wrapped HT'),\n  [ChainId.HECO_TESTNET]: new Token(\n    ChainId.HECO_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HECO_TESTNET],\n    18,\n    'WHT',\n    'Wrapped HT'\n  ),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, WNATIVE_ADDRESS[ChainId.HARMONY], 18, 'WONE', 'Wrapped ONE'),\n  [ChainId.HARMONY_TESTNET]: new Token(\n    ChainId.HARMONY_TESTNET,\n    WNATIVE_ADDRESS[ChainId.HARMONY_TESTNET],\n    18,\n    'WONE',\n    'Wrapped ONE'\n  ),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, WNATIVE_ADDRESS[ChainId.OKEX], 18, 'WOKT', 'Wrapped OKExChain'),\n  [ChainId.OKEX_TESTNET]: new Token(\n    ChainId.OKEX_TESTNET,\n    WNATIVE_ADDRESS[ChainId.OKEX_TESTNET],\n    18,\n    'WOKT',\n    'Wrapped OKExChain'\n  ),\n  [ChainId.CELO]: new Token(ChainId.CELO, WNATIVE_ADDRESS[ChainId.CELO], 18, 'CELO', 'Celo'),\n  [ChainId.PALM]: new Token(ChainId.PALM, WNATIVE_ADDRESS[ChainId.PALM], 18, 'WPALM', 'Wrapped Palm'),\n  [ChainId.MOONRIVER]: new Token(\n    ChainId.MOONRIVER,\n    WNATIVE_ADDRESS[ChainId.MOONRIVER],\n    18,\n    'WMOVR',\n    'Wrapped Moonriver'\n  ),\n  [ChainId.FUSE]: new Token(ChainId.FUSE, WNATIVE_ADDRESS[ChainId.FUSE], 18, 'WFUSE', 'Wrapped Fuse'),\n  [ChainId.TELOS]: new Token(ChainId.TELOS, WNATIVE_ADDRESS[ChainId.TELOS], 18, 'WTLOS', 'Wrapped Telos'),\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, WNATIVE_ADDRESS[ChainId.MOONBEAM], 18, 'WGLMR', 'Wrapped Glimmer'),\n  [ChainId.KAVA]: new Token(ChainId.KAVA, WNATIVE_ADDRESS[ChainId.KAVA], 18, 'WKAVA', 'Wrapped Kava'),\n  [ChainId.METIS]: new Token(ChainId.METIS, WNATIVE_ADDRESS[ChainId.METIS], 18, 'WMETIS', 'Wrapped Metis'),\n}\n\nexport const SUSHI: ChainTokenMap = {\n  [ChainId.ETHEREUM]: new Token(ChainId.ETHEREUM, SUSHI_ADDRESS[ChainId.ETHEREUM], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.ROPSTEN]: new Token(ChainId.ROPSTEN, SUSHI_ADDRESS[ChainId.ROPSTEN], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.RINKEBY]: new Token(ChainId.RINKEBY, SUSHI_ADDRESS[ChainId.RINKEBY], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.GÖRLI]: new Token(ChainId.GÖRLI, SUSHI_ADDRESS[ChainId.GÖRLI], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.KOVAN]: new Token(ChainId.KOVAN, SUSHI_ADDRESS[ChainId.KOVAN], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.MATIC]: new Token(ChainId.MATIC, SUSHI_ADDRESS[ChainId.MATIC], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.FANTOM]: new Token(ChainId.FANTOM, SUSHI_ADDRESS[ChainId.FANTOM], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.XDAI]: new Token(ChainId.XDAI, SUSHI_ADDRESS[ChainId.XDAI], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.BSC]: new Token(ChainId.BSC, SUSHI_ADDRESS[ChainId.BSC], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.ARBITRUM]: new Token(ChainId.ARBITRUM, SUSHI_ADDRESS[ChainId.ARBITRUM], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.AVALANCHE]: new Token(ChainId.AVALANCHE, SUSHI_ADDRESS[ChainId.AVALANCHE], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.OKEX]: new Token(ChainId.OKEX, SUSHI_ADDRESS[ChainId.OKEX], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.HARMONY]: new Token(ChainId.HARMONY, SUSHI_ADDRESS[ChainId.HARMONY], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.HECO]: new Token(ChainId.HECO, SUSHI_ADDRESS[ChainId.HECO], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.CELO]: new Token(ChainId.CELO, SUSHI_ADDRESS[ChainId.CELO], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.MOONRIVER]: new Token(ChainId.MOONRIVER, SUSHI_ADDRESS[ChainId.MOONRIVER], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.FUSE]: new Token(ChainId.FUSE, SUSHI_ADDRESS[ChainId.FUSE], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.TELOS]: new Token(ChainId.TELOS, SUSHI_ADDRESS[ChainId.TELOS], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.MOONBEAM]: new Token(ChainId.MOONBEAM, SUSHI_ADDRESS[ChainId.MOONBEAM], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.KAVA]: new Token(ChainId.KAVA, SUSHI_ADDRESS[ChainId.KAVA], 18, 'SUSHI', 'SushiToken'),\n  [ChainId.METIS]: new Token(ChainId.METIS, SUSHI_ADDRESS[ChainId.METIS], 18, 'SUSHI', 'SushiToken'),\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Avalanche extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'AVAX', 'Avalanche')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Avalanche } = {}\n\n  public static onChain(chainId: number): Avalanche {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Avalanche(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Binance extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'BNB', 'Binance Coin')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Binance } = {}\n\n  public static onChain(chainId: number): Binance {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Binance(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Celo extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'CELO', 'Celo')\n  }\n\n  public get wrapped(): Token {\n    const wcelo = WNATIVE[this.chainId]\n    invariant(!!wcelo, 'WRAPPED')\n    return wcelo\n  }\n\n  private static _cache: { [chainId: number]: Celo } = {}\n\n  public static onChain(chainId: number): Celo {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Celo(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WETH9 } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\n/**\n * Ether is the main usage of a 'native' currency, i.e. for Ethereum mainnet and all testnets\n */\nexport class Ether extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ETH', 'Ether')\n  }\n\n  public get wrapped(): Token {\n    const weth9 = WETH9[this.chainId]\n    invariant(!!weth9, 'WRAPPED')\n    return weth9\n  }\n\n  private static _etherCache: { [chainId: number]: Ether } = {}\n\n  public static onChain(chainId: number): Ether {\n    return this._etherCache[chainId] ?? (this._etherCache[chainId] = new Ether(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Fantom extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'FTM', 'Fantom')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Fantom } = {}\n\n  public static onChain(chainId: number): Fantom {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fantom(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Harmony extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'ONE', 'Harmony')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Harmony } = {}\n\n  public static onChain(chainId: number): Harmony {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Harmony(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Heco extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'HT', 'Huobi Token')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Heco } = {}\n\n  public static onChain(chainId: number): Heco {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Heco(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Matic extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'MATIC', 'Matic')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Matic } = {}\n\n  public static onChain(chainId: number): Matic {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Matic(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Movr extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'MOVR', 'Moonriver')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Movr } = {}\n\n  public static onChain(chainId: number): Movr {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Movr(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Okex extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'OKT', 'OKExChain')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Okex } = {}\n\n  public static onChain(chainId: number): Okex {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Okex(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class xDai extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'XDAI', 'xDai')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: xDai } = {}\n\n  public static onChain(chainId: number): xDai {\n    return this._cache[chainId] ?? (this._cache[chainId] = new xDai(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Palm extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'PALM', 'Palm')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Palm } = {}\n\n  public static onChain(chainId: number): Palm {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Palm(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Fuse extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'FUSE', 'Fuse')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Fuse } = {}\n\n  public static onChain(chainId: number): Fuse {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Fuse(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Telos extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'TLOS', 'Telos')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Telos } = {}\n\n  public static onChain(chainId: number): Telos {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Telos(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Glmr extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'GLMR', 'Glimmer')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Glmr } = {}\n\n  public static onChain(chainId: number): Glmr {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Glmr(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Kava extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'KAVA', 'Kava')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Kava } = {}\n\n  public static onChain(chainId: number): Kava {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Kava(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import { Currency } from '../Currency'\nimport { NativeCurrency } from '../NativeCurrency'\nimport { Token } from '../Token'\nimport { WNATIVE } from '../../constants/tokens'\nimport invariant from 'tiny-invariant'\n\nexport class Metis extends NativeCurrency {\n  protected constructor(chainId: number) {\n    super(chainId, 18, 'METIS', 'Metis')\n  }\n\n  public get wrapped(): Token {\n    const wnative = WNATIVE[this.chainId]\n    invariant(!!wnative, 'WRAPPED')\n    return wnative\n  }\n\n  private static _cache: { [chainId: number]: Metis } = {}\n\n  public static onChain(chainId: number): Metis {\n    return this._cache[chainId] ?? (this._cache[chainId] = new Metis(chainId))\n  }\n\n  public equals(other: Currency): boolean {\n    return other.isNative && other.chainId === this.chainId\n  }\n}\n","import {\n  Avalanche,\n  Binance,\n  Celo,\n  Ether,\n  Fantom,\n  Fuse,\n  Glmr,\n  Harmony,\n  Heco,\n  Kava,\n  Matic,\n  Movr,\n  Okex,\n  Palm,\n  Telos,\n  xDai,\n  Metis,\n} from '../entities/Native'\n\nimport { ChainId } from '../enums'\nimport { NativeMap } from '../types'\n\nexport const NATIVE: NativeMap = {\n  [ChainId.ETHEREUM]: Ether.onChain(ChainId.ETHEREUM),\n  [ChainId.ROPSTEN]: Ether.onChain(ChainId.ROPSTEN),\n  [ChainId.RINKEBY]: Ether.onChain(ChainId.RINKEBY),\n  [ChainId.GÖRLI]: Ether.onChain(ChainId.GÖRLI),\n  [ChainId.KOVAN]: Ether.onChain(ChainId.KOVAN),\n  [ChainId.FANTOM]: Fantom.onChain(ChainId.FANTOM),\n  [ChainId.FANTOM_TESTNET]: Fantom.onChain(ChainId.FANTOM_TESTNET),\n  [ChainId.MATIC]: Matic.onChain(ChainId.MATIC),\n  [ChainId.MATIC_TESTNET]: Matic.onChain(ChainId.MATIC_TESTNET),\n  [ChainId.XDAI]: xDai.onChain(ChainId.XDAI),\n  [ChainId.BSC]: Binance.onChain(ChainId.BSC),\n  [ChainId.BSC_TESTNET]: Binance.onChain(ChainId.BSC_TESTNET),\n  // [ChainId.MOONBEAM_TESTNET]: Currency.GLMR,\n  [ChainId.ARBITRUM]: Ether.onChain(ChainId.ARBITRUM),\n  [ChainId.ARBITRUM_TESTNET]: Ether.onChain(ChainId.ARBITRUM_TESTNET),\n  [ChainId.AVALANCHE]: Avalanche.onChain(ChainId.AVALANCHE),\n  [ChainId.AVALANCHE_TESTNET]: Avalanche.onChain(ChainId.AVALANCHE_TESTNET),\n  [ChainId.HECO]: Heco.onChain(ChainId.HECO),\n  [ChainId.HECO_TESTNET]: Heco.onChain(ChainId.HECO_TESTNET),\n  [ChainId.HARMONY]: Harmony.onChain(ChainId.HARMONY),\n  [ChainId.HARMONY_TESTNET]: Harmony.onChain(ChainId.HARMONY_TESTNET),\n  [ChainId.OKEX]: Okex.onChain(ChainId.OKEX),\n  [ChainId.OKEX_TESTNET]: Okex.onChain(ChainId.OKEX_TESTNET),\n  [ChainId.CELO]: Celo.onChain(ChainId.CELO),\n  [ChainId.PALM]: Palm.onChain(ChainId.PALM),\n  [ChainId.MOONRIVER]: Movr.onChain(ChainId.MOONRIVER),\n  [ChainId.FUSE]: Fuse.onChain(ChainId.FUSE),\n  [ChainId.TELOS]: Telos.onChain(ChainId.TELOS),\n  [ChainId.MOONBEAM]: Glmr.onChain(ChainId.MOONBEAM),\n  [ChainId.OPTIMISM]: Ether.onChain(ChainId.OPTIMISM),\n  [ChainId.KAVA]: Kava.onChain(ChainId.KAVA),\n  [ChainId.METIS]: Metis.onChain(ChainId.METIS),\n}\n","import JSBI from 'jsbi'\n\nexport const MaxUint256 = JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff')\n\n// exports for internal consumption\nexport const ZERO = JSBI.BigInt(0)\nexport const ONE = JSBI.BigInt(1)\nexport const TWO = JSBI.BigInt(2)\nexport const THREE = JSBI.BigInt(3)\nexport const FIVE = JSBI.BigInt(5)\nexport const TEN = JSBI.BigInt(10)\nexport const _100 = JSBI.BigInt(100)\nexport const _997 = JSBI.BigInt(997)\nexport const _1000 = JSBI.BigInt(1000)\n\nexport const MINIMUM_LIQUIDITY = JSBI.BigInt(1000)","import JSBI from 'jsbi'\nimport { SolidityType } from \"../enums/SolidityType\";\n\nexport const SOLIDITY_TYPE_MAXIMA = {\n  [SolidityType.uint8]: JSBI.BigInt('0xff'),\n  [SolidityType.uint256]: JSBI.BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'),\n}","// see https://stackoverflow.com/a/41102306\nconst CAN_SET_PROTOTYPE = 'setPrototypeOf' in Object\n\n/**\n * Indicates that the pair has insufficient reserves for a desired output amount. I.e. the amount of output cannot be\n * obtained by sending any amount of input.\n */\nexport class InsufficientReservesError extends Error {\n  public readonly isInsufficientReservesError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n\n/**\n * Indicates that the input amount is too small to produce any amount of output. I.e. the amount of input sent is less\n * than the price of a single unit of output after fees.\n */\nexport class InsufficientInputAmountError extends Error {\n  public readonly isInsufficientInputAmountError: true = true\n\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    if (CAN_SET_PROTOTYPE) Object.setPrototypeOf(this, new.target.prototype)\n  }\n}\n","import _Big, { RoundingMode } from 'big.js'\n\nimport { BigintIsh } from '../types'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport _Decimal from 'decimal.js-light'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Decimal = toFormat(_Decimal)\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nconst toSignificantRounding = {\n  [Rounding.ROUND_DOWN]: Decimal.ROUND_DOWN,\n  [Rounding.ROUND_HALF_UP]: Decimal.ROUND_HALF_UP,\n  [Rounding.ROUND_UP]: Decimal.ROUND_UP,\n}\n\nconst toFixedRounding = {\n  [Rounding.ROUND_DOWN]: RoundingMode.RoundDown,\n  [Rounding.ROUND_HALF_UP]: RoundingMode.RoundHalfUp,\n  [Rounding.ROUND_UP]: RoundingMode.RoundUp,\n}\n\nexport class Fraction {\n  public readonly numerator: JSBI\n  public readonly denominator: JSBI\n\n  public constructor(numerator: BigintIsh, denominator: BigintIsh = JSBI.BigInt(1)) {\n    this.numerator = JSBI.BigInt(numerator)\n    this.denominator = JSBI.BigInt(denominator)\n  }\n\n  private static tryParseFraction(fractionish: BigintIsh | Fraction): Fraction {\n    if (fractionish instanceof JSBI || typeof fractionish === 'number' || typeof fractionish === 'string')\n      return new Fraction(fractionish)\n\n    if ('numerator' in fractionish && 'denominator' in fractionish) return fractionish\n    throw new Error('Could not parse fraction')\n  }\n\n  // performs floor division\n  public get quotient(): JSBI {\n    return JSBI.divide(this.numerator, this.denominator)\n  }\n\n  // remainder after floor division\n  public get remainder(): Fraction {\n    return new Fraction(JSBI.remainder(this.numerator, this.denominator), this.denominator)\n  }\n\n  public invert(): Fraction {\n    return new Fraction(this.denominator, this.numerator)\n  }\n\n  public add(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.add(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.add(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public subtract(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    if (JSBI.equal(this.denominator, otherParsed.denominator)) {\n      return new Fraction(JSBI.subtract(this.numerator, otherParsed.numerator), this.denominator)\n    }\n    return new Fraction(\n      JSBI.subtract(\n        JSBI.multiply(this.numerator, otherParsed.denominator),\n        JSBI.multiply(otherParsed.numerator, this.denominator)\n      ),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public lessThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.lessThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public equalTo(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.equal(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public greaterThan(other: Fraction | BigintIsh): boolean {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return JSBI.greaterThan(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(otherParsed.numerator, this.denominator)\n    )\n  }\n\n  public multiply(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.numerator),\n      JSBI.multiply(this.denominator, otherParsed.denominator)\n    )\n  }\n\n  public divide(other: Fraction | BigintIsh): Fraction {\n    const otherParsed = Fraction.tryParseFraction(other)\n    return new Fraction(\n      JSBI.multiply(this.numerator, otherParsed.denominator),\n      JSBI.multiply(this.denominator, otherParsed.numerator)\n    )\n  }\n\n  public toSignificant(\n    significantDigits: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(significantDigits), `${significantDigits} is not an integer.`)\n    invariant(significantDigits > 0, `${significantDigits} is not positive.`)\n\n    Decimal.set({\n      precision: significantDigits + 1,\n      rounding: toSignificantRounding[rounding],\n    })\n    const quotient = new Decimal(this.numerator.toString())\n      .div(this.denominator.toString())\n      .toSignificantDigits(significantDigits)\n    return quotient.toFormat(quotient.decimalPlaces(), format)\n  }\n\n  public toFixed(\n    decimalPlaces: number,\n    format: object = { groupSeparator: '' },\n    rounding: Rounding = Rounding.ROUND_HALF_UP\n  ): string {\n    invariant(Number.isInteger(decimalPlaces), `${decimalPlaces} is not an integer.`)\n    invariant(decimalPlaces >= 0, `${decimalPlaces} is negative.`)\n\n    Big.DP = decimalPlaces\n    Big.RM = toFixedRounding[rounding]\n    return new Big(this.numerator.toString()).div(this.denominator.toString()).toFormat(decimalPlaces, format)\n  }\n\n  /**\n   * Helper method for converting any super class back to a fraction\n   */\n  public get asFraction(): Fraction {\n    return new Fraction(this.numerator, this.denominator)\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { MaxUint256 } from '../constants'\nimport { Rounding } from '../enums'\nimport { Token } from './Token'\nimport _Big from 'big.js'\nimport invariant from 'tiny-invariant'\nimport toFormat from 'toformat'\n\nconst Big = toFormat(_Big)\n\nBig.strict = true\n\nexport class CurrencyAmount<T extends Currency> extends Fraction {\n  public readonly currency: T\n  public readonly decimalScale: JSBI\n\n  /**\n   * Returns a new currency amount instance from the unitless amount of token, i.e. the raw amount\n   * @param currency the currency in the amount\n   * @param rawAmount the raw token or ether amount\n   */\n  public static fromRawAmount<T extends Currency>(currency: T, rawAmount: BigintIsh): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, rawAmount)\n  }\n\n  /**\n   * Construct a currency amount with a denominator that is not equal to 1\n   * @param currency the currency\n   * @param numerator the numerator of the fractional token amount\n   * @param denominator the denominator of the fractional token amount\n   */\n  public static fromFractionalAmount<T extends Currency>(\n    currency: T,\n    numerator: BigintIsh,\n    denominator: BigintIsh\n  ): CurrencyAmount<T> {\n    return new CurrencyAmount(currency, numerator, denominator)\n  }\n\n  protected constructor(currency: T, numerator: BigintIsh, denominator?: BigintIsh) {\n    super(numerator, denominator)\n    invariant(JSBI.lessThanOrEqual(this.quotient, MaxUint256), 'AMOUNT')\n    this.currency = currency\n    this.decimalScale = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(currency.decimals))\n  }\n\n  public add(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const added = super.add(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, added.numerator, added.denominator)\n  }\n\n  public subtract(other: CurrencyAmount<T>): CurrencyAmount<T> {\n    invariant(this.currency.equals(other.currency), 'CURRENCY')\n    const subtracted = super.subtract(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, subtracted.numerator, subtracted.denominator)\n  }\n\n  public multiply(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const multiplied = super.multiply(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, multiplied.numerator, multiplied.denominator)\n  }\n\n  public divide(other: Fraction | BigintIsh): CurrencyAmount<T> {\n    const divided = super.divide(other)\n    return CurrencyAmount.fromFractionalAmount(this.currency, divided.numerator, divided.denominator)\n  }\n\n  public toSignificant(\n    significantDigits: number = 6,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    return super.divide(this.decimalScale).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(\n    decimalPlaces: number = this.currency.decimals,\n    format?: object,\n    rounding: Rounding = Rounding.ROUND_DOWN\n  ): string {\n    invariant(decimalPlaces <= this.currency.decimals, 'DECIMALS')\n    return super.divide(this.decimalScale).toFixed(decimalPlaces, format, rounding)\n  }\n\n  public toExact(format: object = { groupSeparator: '' }): string {\n    Big.DP = this.currency.decimals\n    return new Big(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(format)\n  }\n\n  public get wrapped(): CurrencyAmount<Token> {\n    if (this.currency.isToken) return this as CurrencyAmount<Token>\n    return CurrencyAmount.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)\n  }\n\n  /**\n   * Returns a string representation of the address and currency amount.\n   * Useful in cases where a dependency is needed to detect changes (e.g. useEffect).\n   * @return string [0x6B3595068778DD592e39A122f4f5a5cF09C90fE2 - 1323.94]\n   */\n  public serialize(): string {\n    return `[${this.currency.wrapped.address} - ${this.toExact()}]`\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\nimport invariant from 'tiny-invariant'\n\nexport class Price<TBase extends Currency, TQuote extends Currency> extends Fraction {\n  public readonly baseCurrency: TBase // input i.e. denominator\n  public readonly quoteCurrency: TQuote // output i.e. numerator\n  public readonly scalar: Fraction // used to adjust the raw fraction w/r/t the decimals of the {base,quote}Token\n\n  /**\n   * Construct a price, either with the base and quote currency amount, or the\n   * @param args\n   */\n  public constructor(\n    ...args:\n      | [TBase, TQuote, BigintIsh, BigintIsh]\n      | [\n          {\n            baseAmount: CurrencyAmount<TBase>\n            quoteAmount: CurrencyAmount<TQuote>\n          }\n        ]\n  ) {\n    let baseCurrency: TBase, quoteCurrency: TQuote, denominator: BigintIsh, numerator: BigintIsh\n\n    if (args.length === 4) {\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = args\n    } else {\n      const result = args[0].quoteAmount.divide(args[0].baseAmount)\n      ;[baseCurrency, quoteCurrency, denominator, numerator] = [\n        args[0].baseAmount.currency,\n        args[0].quoteAmount.currency,\n        result.denominator,\n        result.numerator,\n      ]\n    }\n    super(numerator, denominator)\n\n    this.baseCurrency = baseCurrency\n    this.quoteCurrency = quoteCurrency\n    this.scalar = new Fraction(\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(baseCurrency.decimals)),\n      JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(quoteCurrency.decimals))\n    )\n  }\n\n  /**\n   * Flip the price, switching the base and quote currency\n   */\n  public invert(): Price<TQuote, TBase> {\n    return new Price(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)\n  }\n\n  /**\n   * Multiply the price by another price, returning a new price. The other price must have the same base currency as this price's quote currency\n   * @param other the other price\n   */\n  public multiply<TOtherQuote extends Currency>(other: Price<TQuote, TOtherQuote>): Price<TBase, TOtherQuote> {\n    invariant(this.quoteCurrency.equals(other.baseCurrency), 'TOKEN')\n    const fraction = super.multiply(other)\n    return new Price(this.baseCurrency, other.quoteCurrency, fraction.denominator, fraction.numerator)\n  }\n\n  /**\n   * Return the amount of quote currency corresponding to a given amount of the base currency\n   * @param currencyAmount the amount of base currency to quote against the price\n   */\n  public quote(currencyAmount: CurrencyAmount<TBase>): CurrencyAmount<TQuote> {\n    invariant(currencyAmount.currency.equals(this.baseCurrency), 'TOKEN')\n    const result = super.multiply(currencyAmount)\n    return CurrencyAmount.fromFractionalAmount(this.quoteCurrency, result.numerator, result.denominator)\n  }\n\n  /**\n   * Get the value scaled by decimals for formatting\n   * @private\n   */\n  private get adjustedForDecimals(): Fraction {\n    return super.multiply(this.scalar)\n  }\n\n  public toSignificant(significantDigits: number = 6, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 4, format?: object, rounding?: Rounding): string {\n    return this.adjustedForDecimals.toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { keccak256, pack } from '@ethersproject/solidity'\n\nimport { INIT_CODE_HASH } from '../constants'\nimport { Token } from '../entities/Token'\nimport { getCreate2Address } from '@ethersproject/address'\n\nexport const computePairAddress = ({\n  factoryAddress,\n  tokenA,\n  tokenB,\n}: {\n  factoryAddress: string\n  tokenA: Token\n  tokenB: Token\n}): string => {\n  const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA] // does safety checks\n  return getCreate2Address(\n    factoryAddress,\n    keccak256(['bytes'], [pack(['address', 'address'], [token0.address, token1.address])]),\n    INIT_CODE_HASH[token0.chainId]\n  )\n}\n","import { ONE, TWO, ZERO } from '../constants/numbers'\n\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport const MAX_SAFE_INTEGER = JSBI.BigInt(Number.MAX_SAFE_INTEGER)\n\n/**\n * Computes floor(sqrt(value))\n * @param value the value for which to compute the square root, rounded down\n */\nexport function sqrt(value: JSBI): JSBI {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), 'NEGATIVE')\n\n  // rely on built in sqrt if possible\n  if (JSBI.lessThan(value, MAX_SAFE_INTEGER)) {\n    return JSBI.BigInt(Math.floor(Math.sqrt(JSBI.toNumber(value))))\n  }\n\n  let z: JSBI\n  let x: JSBI\n  z = value\n  x = JSBI.add(JSBI.divide(value, TWO), ONE)\n  while (JSBI.lessThan(x, z)) {\n    z = x\n    x = JSBI.divide(JSBI.add(JSBI.divide(value, x), x), TWO)\n  }\n  return z\n}\n\n/**\n * Returns the smallest member of the array\n * @param values the values from which the smallest gets returned\n * @returns the smallest memmber of the array\n */\nexport function minimum(...values: JSBI[]): JSBI {\n  let lowest = values[0]\n  for (let i = 1; i < values.length; i++) {\n    const value = values[i]\n    if (JSBI.LT(value, lowest)) {\n      lowest = value\n    }\n  }\n  return lowest\n}\n\n/**\n * Returns the biggest member of the array\n * @param values the values from which the biggest gets returned\n * @returns the biggest memmber of the array\n */\nexport function maximum(...values: JSBI[]): JSBI {\n  let highest = values[0]\n  for (let i = 1; i < values.length; i++) {\n    const value = values[i]\n    if (JSBI.GT(value, highest)) {\n      highest = value\n    }\n  }\n  return highest\n}\n\nexport function difference(a: JSBI, b: JSBI): JSBI {\n  if (JSBI.greaterThan(a, b)) {\n    return JSBI.subtract(a, b)\n  }\n  return JSBI.subtract(b, a)\n}\n","import { FACTORY_ADDRESS, FIVE, MINIMUM_LIQUIDITY, ONE, ZERO, _1000, _997 } from '../constants'\nimport { InsufficientInputAmountError, InsufficientReservesError } from '../errors'\n\nimport { BigintIsh } from '../types'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport JSBI from 'jsbi'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport { computePairAddress } from '../functions/computePairAddress'\nimport invariant from 'tiny-invariant'\nimport { sqrt } from '../functions/math'\n\nexport class Pair {\n  public readonly liquidityToken: Token\n  private readonly tokenAmounts: [CurrencyAmount<Token>, CurrencyAmount<Token>]\n\n  public static getAddress(tokenA: Token, tokenB: Token): string {\n    return computePairAddress({\n      factoryAddress: FACTORY_ADDRESS[tokenA.chainId],\n      tokenA,\n      tokenB,\n    })\n  }\n\n  public constructor(currencyAmountA: CurrencyAmount<Token>, currencyAmountB: CurrencyAmount<Token>) {\n    const currencyAmounts = currencyAmountA.currency.sortsBefore(currencyAmountB.currency) // does safety checks\n      ? [currencyAmountA, currencyAmountB]\n      : [currencyAmountB, currencyAmountA]\n    this.liquidityToken = new Token(\n      currencyAmounts[0].currency.chainId,\n      Pair.getAddress(currencyAmounts[0].currency, currencyAmounts[1].currency),\n      18,\n      'UNI-V2',\n      'Uniswap V2'\n    )\n    this.tokenAmounts = currencyAmounts as [CurrencyAmount<Token>, CurrencyAmount<Token>]\n  }\n\n  /**\n   * Returns true if the token is either token0 or token1\n   * @param token to check\n   */\n  public involvesToken(token: Token): boolean {\n    return token.equals(this.token0) || token.equals(this.token1)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token0, i.e. the ratio of reserve1 to reserve0\n   */\n  public get token0Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[1].divide(this.tokenAmounts[0])\n    return new Price(this.token0, this.token1, result.denominator, result.numerator)\n  }\n\n  /**\n   * Returns the current mid price of the pair in terms of token1, i.e. the ratio of reserve0 to reserve1\n   */\n  public get token1Price(): Price<Token, Token> {\n    const result = this.tokenAmounts[0].divide(this.tokenAmounts[1])\n    return new Price(this.token1, this.token0, result.denominator, result.numerator)\n  }\n\n  /**\n   * Return the price of the given token in terms of the other token in the pair.\n   * @param token token to return price of\n   */\n  public priceOf(token: Token): Price<Token, Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.token0Price : this.token1Price\n  }\n\n  /**\n   * Returns the chain ID of the tokens in the pair.\n   */\n  public get chainId(): number {\n    return this.token0.chainId\n  }\n\n  public get token0(): Token {\n    return this.tokenAmounts[0].currency\n  }\n\n  public get token1(): Token {\n    return this.tokenAmounts[1].currency\n  }\n\n  public get reserve0(): CurrencyAmount<Token> {\n    return this.tokenAmounts[0]\n  }\n\n  public get reserve1(): CurrencyAmount<Token> {\n    return this.tokenAmounts[1]\n  }\n\n  public reserveOf(token: Token): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    return token.equals(this.token0) ? this.reserve0 : this.reserve1\n  }\n\n  public getOutputAmount(inputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(inputAmount.currency), 'TOKEN')\n    if (JSBI.equal(this.reserve0.quotient, ZERO) || JSBI.equal(this.reserve1.quotient, ZERO)) {\n      throw new InsufficientReservesError()\n    }\n    const inputReserve = this.reserveOf(inputAmount.currency)\n    const outputReserve = this.reserveOf(inputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const inputAmountWithFee = JSBI.multiply(inputAmount.quotient, _997)\n    const numerator = JSBI.multiply(inputAmountWithFee, outputReserve.quotient)\n    const denominator = JSBI.add(JSBI.multiply(inputReserve.quotient, _1000), inputAmountWithFee)\n    const outputAmount = CurrencyAmount.fromRawAmount(\n      inputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.divide(numerator, denominator)\n    )\n    if (JSBI.equal(outputAmount.quotient, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n    return [outputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getInputAmount(outputAmount: CurrencyAmount<Token>): [CurrencyAmount<Token>, Pair] {\n    invariant(this.involvesToken(outputAmount.currency), 'TOKEN')\n    if (\n      JSBI.equal(this.reserve0.quotient, ZERO) ||\n      JSBI.equal(this.reserve1.quotient, ZERO) ||\n      JSBI.greaterThanOrEqual(outputAmount.quotient, this.reserveOf(outputAmount.currency).quotient)\n    ) {\n      throw new InsufficientReservesError()\n    }\n\n    const outputReserve = this.reserveOf(outputAmount.currency)\n    const inputReserve = this.reserveOf(outputAmount.currency.equals(this.token0) ? this.token1 : this.token0)\n    const numerator = JSBI.multiply(JSBI.multiply(inputReserve.quotient, outputAmount.quotient), _1000)\n    const denominator = JSBI.multiply(JSBI.subtract(outputReserve.quotient, outputAmount.quotient), _997)\n    const inputAmount = CurrencyAmount.fromRawAmount(\n      outputAmount.currency.equals(this.token0) ? this.token1 : this.token0,\n      JSBI.add(JSBI.divide(numerator, denominator), ONE)\n    )\n    return [inputAmount, new Pair(inputReserve.add(inputAmount), outputReserve.subtract(outputAmount))]\n  }\n\n  public getLiquidityMinted(\n    totalSupply: CurrencyAmount<Token>,\n    tokenAmountA: CurrencyAmount<Token>,\n    tokenAmountB: CurrencyAmount<Token>\n  ): CurrencyAmount<Token> {\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    const tokenAmounts = tokenAmountA.currency.sortsBefore(tokenAmountB.currency) // does safety checks\n      ? [tokenAmountA, tokenAmountB]\n      : [tokenAmountB, tokenAmountA]\n    invariant(tokenAmounts[0].currency.equals(this.token0) && tokenAmounts[1].currency.equals(this.token1), 'TOKEN')\n\n    let liquidity: JSBI\n    if (JSBI.equal(totalSupply.quotient, ZERO)) {\n      liquidity = JSBI.subtract(\n        sqrt(JSBI.multiply(tokenAmounts[0].quotient, tokenAmounts[1].quotient)),\n        MINIMUM_LIQUIDITY\n      )\n    } else {\n      const amount0 = JSBI.divide(JSBI.multiply(tokenAmounts[0].quotient, totalSupply.quotient), this.reserve0.quotient)\n      const amount1 = JSBI.divide(JSBI.multiply(tokenAmounts[1].quotient, totalSupply.quotient), this.reserve1.quotient)\n      liquidity = JSBI.lessThanOrEqual(amount0, amount1) ? amount0 : amount1\n\n      console.log({\n        amount0: amount0.toString(),\n        amount1: amount1.toString(),\n        liquidity: liquidity.toString(),\n        totalSupply: totalSupply.quotient.toString(),\n        kLast: sqrt(JSBI.multiply(this.tokenAmounts[0].quotient, this.tokenAmounts[1].quotient)),\n      })\n    }\n    if (!JSBI.greaterThan(liquidity, ZERO)) {\n      throw new InsufficientInputAmountError()\n    }\n\n    return CurrencyAmount.fromRawAmount(this.liquidityToken, liquidity)\n  }\n\n  public getLiquidityValue(\n    token: Token,\n    totalSupply: CurrencyAmount<Token>,\n    liquidity: CurrencyAmount<Token>,\n    feeOn: boolean = false,\n    kLast?: BigintIsh\n  ): CurrencyAmount<Token> {\n    invariant(this.involvesToken(token), 'TOKEN')\n    invariant(totalSupply.currency.equals(this.liquidityToken), 'TOTAL_SUPPLY')\n    invariant(liquidity.currency.equals(this.liquidityToken), 'LIQUIDITY')\n    invariant(JSBI.lessThanOrEqual(liquidity.quotient, totalSupply.quotient), 'LIQUIDITY')\n\n    let totalSupplyAdjusted: CurrencyAmount<Token>\n    if (!feeOn) {\n      totalSupplyAdjusted = totalSupply\n    } else {\n      invariant(!!kLast, 'K_LAST')\n      const kLastParsed = JSBI.BigInt(kLast)\n      if (!JSBI.equal(kLastParsed, ZERO)) {\n        const rootK = sqrt(JSBI.multiply(this.reserve0.quotient, this.reserve1.quotient))\n        const rootKLast = sqrt(kLastParsed)\n        if (JSBI.greaterThan(rootK, rootKLast)) {\n          const numerator = JSBI.multiply(totalSupply.quotient, JSBI.subtract(rootK, rootKLast))\n          const denominator = JSBI.add(JSBI.multiply(rootK, FIVE), rootKLast)\n          const feeLiquidity = JSBI.divide(numerator, denominator)\n          totalSupplyAdjusted = totalSupply.add(CurrencyAmount.fromRawAmount(this.liquidityToken, feeLiquidity))\n        } else {\n          totalSupplyAdjusted = totalSupply\n        }\n      } else {\n        totalSupplyAdjusted = totalSupply\n      }\n    }\n\n    return CurrencyAmount.fromRawAmount(\n      token,\n      JSBI.divide(JSBI.multiply(liquidity.quotient, this.reserveOf(token).quotient), totalSupplyAdjusted.quotient)\n    )\n  }\n}\n","import { BigintIsh } from '../types'\nimport { Fraction } from './Fraction'\nimport JSBI from 'jsbi'\nimport { Rounding } from '../enums'\n\nconst ONE_HUNDRED = new Fraction(JSBI.BigInt(100))\n\n/**\n * Converts a fraction to a percent\n * @param fraction the fraction to convert\n */\nfunction toPercent(fraction: Fraction): Percent {\n  return new Percent(fraction.numerator, fraction.denominator)\n}\n\nexport class Percent extends Fraction {\n  /**\n   * This boolean prevents a fraction from being interpreted as a Percent\n   */\n  public readonly isPercent: true = true\n\n  add(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.add(other))\n  }\n\n  subtract(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.subtract(other))\n  }\n\n  multiply(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.multiply(other))\n  }\n\n  divide(other: Fraction | BigintIsh): Percent {\n    return toPercent(super.divide(other))\n  }\n\n  public toSignificant(significantDigits: number = 5, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toSignificant(significantDigits, format, rounding)\n  }\n\n  public toFixed(decimalPlaces: number = 2, format?: object, rounding?: Rounding): string {\n    return super.multiply(ONE_HUNDRED).toFixed(decimalPlaces, format, rounding)\n  }\n}\n","import { Currency } from './Currency'\nimport { Pair } from './Pair'\nimport { Price } from './Price'\nimport { Token } from './Token'\nimport invariant from 'tiny-invariant'\n\nexport class Route<TInput extends Currency, TOutput extends Currency> {\n  public readonly pairs: Pair[]\n  public readonly path: Token[]\n  public readonly input: TInput\n  public readonly output: TOutput\n\n  public constructor(pairs: Pair[], input: TInput, output: TOutput) {\n    invariant(pairs.length > 0, 'PAIRS')\n    const chainId: number = pairs[0].chainId\n    invariant(\n      pairs.every((pair) => pair.chainId === chainId),\n      'CHAIN_IDS'\n    )\n\n    const wrappedInput = input.wrapped\n    invariant(pairs[0].involvesToken(wrappedInput), 'INPUT')\n    invariant(typeof output === 'undefined' || pairs[pairs.length - 1].involvesToken(output.wrapped), 'OUTPUT')\n\n    const path: Token[] = [wrappedInput]\n    for (const [i, pair] of pairs.entries()) {\n      const currentInput = path[i]\n      invariant(currentInput.equals(pair.token0) || currentInput.equals(pair.token1), 'PATH')\n      const output = currentInput.equals(pair.token0) ? pair.token1 : pair.token0\n      path.push(output)\n    }\n\n    this.pairs = pairs\n    this.path = path\n    this.input = input\n    this.output = output\n  }\n\n  private _midPrice: Price<TInput, TOutput> | null = null\n\n  public get midPrice(): Price<TInput, TOutput> {\n    if (this._midPrice !== null) return this._midPrice\n    const prices: Price<Currency, Currency>[] = []\n    for (const [i, pair] of this.pairs.entries()) {\n      prices.push(\n        this.path[i].equals(pair.token0)\n          ? new Price(pair.reserve0.currency, pair.reserve1.currency, pair.reserve0.quotient, pair.reserve1.quotient)\n          : new Price(pair.reserve1.currency, pair.reserve0.currency, pair.reserve1.quotient, pair.reserve0.quotient)\n      )\n    }\n    const reduced = prices.slice(1).reduce((accumulator, currentValue) => accumulator.multiply(currentValue), prices[0])\n    return (this._midPrice = new Price(this.input, this.output, reduced.denominator, reduced.numerator))\n  }\n\n  public get chainId(): number {\n    return this.pairs[0].chainId\n  }\n}\n","import { Currency } from '../entities/Currency'\nimport { CurrencyAmount } from '../entities/CurrencyAmount'\nimport { Percent } from '../entities/Percent'\nimport { Price } from '../entities/Price'\n\n/**\n * Returns the percent difference between the mid price and the execution price, i.e. price impact.\n * @param midPrice mid price before the trade\n * @param inputAmount the input amount of the trade\n * @param outputAmount the output amount of the trade\n */\nexport function computePriceImpact<TBase extends Currency, TQuote extends Currency>(\n  midPrice: Price<TBase, TQuote>,\n  inputAmount: CurrencyAmount<TBase>,\n  outputAmount: CurrencyAmount<TQuote>\n): Percent {\n  const quotedOutputAmount = midPrice.quote(inputAmount)\n  // calculate price impact := (exactQuote - outputAmount) / exactQuote\n  const priceImpact = quotedOutputAmount.subtract(outputAmount).divide(quotedOutputAmount)\n  return new Percent(priceImpact.numerator, priceImpact.denominator)\n}\n","import invariant from 'tiny-invariant'\n\n// given an array of items sorted by `comparator`, insert an item into its sort index and constrain the size to\n// `maxSize` by removing the last item\nexport function sortedInsert<T>(items: T[], add: T, maxSize: number, comparator: (a: T, b: T) => number): T | null {\n  invariant(maxSize > 0, 'MAX_SIZE_ZERO')\n  // this is an invariant because the interface cannot return multiple removed items if items.length exceeds maxSize\n  invariant(items.length <= maxSize, 'ITEMS_SIZE')\n\n  // short circuit first item add\n  if (items.length === 0) {\n    items.push(add)\n    return null\n  } else {\n    const isFull = items.length === maxSize\n    // short circuit if full and the additional item does not come before the last item\n    if (isFull && comparator(items[items.length - 1], add) <= 0) {\n      return add\n    }\n\n    let lo = 0,\n      hi = items.length\n\n    while (lo < hi) {\n      const mid = (lo + hi) >>> 1\n      if (comparator(items[mid], add) <= 0) {\n        lo = mid + 1\n      } else {\n        hi = mid\n      }\n    }\n    items.splice(lo, 0, add)\n    return isFull ? items.pop()! : null\n  }\n}\n","import { ONE, ZERO } from '../constants'\n\nimport { Currency } from './Currency'\nimport { CurrencyAmount } from './CurrencyAmount'\nimport { Fraction } from './Fraction'\nimport { Pair } from './Pair'\nimport { Percent } from './Percent'\nimport { Price } from './Price'\nimport { Route } from './Route'\nimport { Token } from './Token'\nimport { TradeType } from '../enums/TradeType'\nimport { computePriceImpact } from '../functions/computePriceImpact'\nimport invariant from 'tiny-invariant'\nimport { sortedInsert } from '../functions/sortedInsert'\n\n// minimal interface so the input output comparator may be shared across types\ninterface InputOutput<TInput extends Currency, TOutput extends Currency> {\n  readonly inputAmount: CurrencyAmount<TInput>\n  readonly outputAmount: CurrencyAmount<TOutput>\n}\n\n// comparator function that allows sorting trades by their output amounts, in decreasing order, and then input amounts\n// in increasing order. i.e. the best trades have the most outputs for the least inputs and are sorted first\nexport function inputOutputComparator<TInput extends Currency, TOutput extends Currency>(\n  a: InputOutput<TInput, TOutput>,\n  b: InputOutput<TInput, TOutput>\n): number {\n  // must have same input and output token for comparison\n  invariant(a.inputAmount.currency.equals(b.inputAmount.currency), 'INPUT_CURRENCY')\n  invariant(a.outputAmount.currency.equals(b.outputAmount.currency), 'OUTPUT_CURRENCY')\n  if (a.outputAmount.equalTo(b.outputAmount)) {\n    if (a.inputAmount.equalTo(b.inputAmount)) {\n      return 0\n    }\n    // trade A requires less input than trade B, so A should come first\n    if (a.inputAmount.lessThan(b.inputAmount)) {\n      return -1\n    } else {\n      return 1\n    }\n  } else {\n    // tradeA has less output than trade B, so should come second\n    if (a.outputAmount.lessThan(b.outputAmount)) {\n      return 1\n    } else {\n      return -1\n    }\n  }\n}\n\n// extension of the input output comparator that also considers other dimensions of the trade in ranking them\nexport function tradeComparator<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType>(\n  a: Trade<TInput, TOutput, TTradeType>,\n  b: Trade<TInput, TOutput, TTradeType>\n) {\n  const ioComp = inputOutputComparator(a, b)\n  if (ioComp !== 0) {\n    return ioComp\n  }\n\n  // consider lowest slippage next, since these are less likely to fail\n  if (a.priceImpact.lessThan(b.priceImpact)) {\n    return -1\n  } else if (a.priceImpact.greaterThan(b.priceImpact)) {\n    return 1\n  }\n\n  // finally consider the number of hops since each hop costs gas\n  return a.route.path.length - b.route.path.length\n}\n\nexport interface BestTradeOptions {\n  // how many results to return\n  maxNumResults?: number\n  // the maximum number of hops a trade should contain\n  maxHops?: number\n}\n\n/**\n * Represents a trade executed against a list of pairs.\n * Does not account for slippage, i.e. trades that front run this trade and move the price.\n */\nexport class Trade<TInput extends Currency, TOutput extends Currency, TTradeType extends TradeType> {\n  /**\n   * The route of the trade, i.e. which pairs the trade goes through and the input/output currencies.\n   */\n  public readonly route: Route<TInput, TOutput>\n  /**\n   * The type of the trade, either exact in or exact out.\n   */\n  public readonly tradeType: TTradeType\n  /**\n   * The input amount for the trade assuming no slippage.\n   */\n  public readonly inputAmount: CurrencyAmount<TInput>\n  /**\n   * The output amount for the trade assuming no slippage.\n   */\n  public readonly outputAmount: CurrencyAmount<TOutput>\n  /**\n   * The price expressed in terms of output amount/input amount.\n   */\n  public readonly executionPrice: Price<TInput, TOutput>\n  /**\n   * The percent difference between the mid price before the trade and the trade execution price.\n   */\n  public readonly priceImpact: Percent\n\n  /**\n   * Constructs an exact in trade with the given amount in and route\n   * @param route route of the exact in trade\n   * @param amountIn the amount being passed in\n   */\n  public static exactIn<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountIn: CurrencyAmount<TInput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT> {\n    return new Trade(route, amountIn, TradeType.EXACT_INPUT)\n  }\n\n  /**\n   * Constructs an exact out trade with the given amount out and route\n   * @param route route of the exact out trade\n   * @param amountOut the amount returned by the trade\n   */\n  public static exactOut<TInput extends Currency, TOutput extends Currency>(\n    route: Route<TInput, TOutput>,\n    amountOut: CurrencyAmount<TOutput>\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT> {\n    return new Trade(route, amountOut, TradeType.EXACT_OUTPUT)\n  }\n\n  public constructor(\n    route: Route<TInput, TOutput>,\n    amount: TTradeType extends TradeType.EXACT_INPUT ? CurrencyAmount<TInput> : CurrencyAmount<TOutput>,\n    tradeType: TTradeType\n  ) {\n    this.route = route\n    this.tradeType = tradeType\n\n    const tokenAmounts: CurrencyAmount<Token>[] = new Array(route.path.length)\n    if (tradeType === TradeType.EXACT_INPUT) {\n      invariant(amount.currency.equals(route.input), 'INPUT')\n      tokenAmounts[0] = amount.wrapped\n      for (let i = 0; i < route.path.length - 1; i++) {\n        const pair = route.pairs[i]\n        const [outputAmount] = pair.getOutputAmount(tokenAmounts[i])\n        tokenAmounts[i + 1] = outputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(route.input, amount.numerator, amount.denominator)\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(\n        route.output,\n        tokenAmounts[tokenAmounts.length - 1].numerator,\n        tokenAmounts[tokenAmounts.length - 1].denominator\n      )\n    } else {\n      invariant(amount.currency.equals(route.output), 'OUTPUT')\n      tokenAmounts[tokenAmounts.length - 1] = amount.wrapped\n      for (let i = route.path.length - 1; i > 0; i--) {\n        const pair = route.pairs[i - 1]\n        const [inputAmount] = pair.getInputAmount(tokenAmounts[i])\n        tokenAmounts[i - 1] = inputAmount\n      }\n      this.inputAmount = CurrencyAmount.fromFractionalAmount(\n        route.input,\n        tokenAmounts[0].numerator,\n        tokenAmounts[0].denominator\n      )\n      this.outputAmount = CurrencyAmount.fromFractionalAmount(route.output, amount.numerator, amount.denominator)\n    }\n    this.executionPrice = new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.inputAmount.quotient,\n      this.outputAmount.quotient\n    )\n    this.priceImpact = computePriceImpact(route.midPrice, this.inputAmount, this.outputAmount)\n  }\n\n  /**\n   * Get the minimum amount that must be received from this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public minimumAmountOut(slippageTolerance: Percent): CurrencyAmount<TOutput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_OUTPUT) {\n      return this.outputAmount\n    } else {\n      const slippageAdjustedAmountOut = new Fraction(ONE)\n        .add(slippageTolerance)\n        .invert()\n        .multiply(this.outputAmount.quotient).quotient\n      return CurrencyAmount.fromRawAmount(this.outputAmount.currency, slippageAdjustedAmountOut)\n    }\n  }\n\n  /**\n   * Get the maximum amount in that can be spent via this trade for the given slippage tolerance\n   * @param slippageTolerance tolerance of unfavorable slippage from the execution price of this trade\n   */\n  public maximumAmountIn(slippageTolerance: Percent): CurrencyAmount<TInput> {\n    invariant(!slippageTolerance.lessThan(ZERO), 'SLIPPAGE_TOLERANCE')\n    if (this.tradeType === TradeType.EXACT_INPUT) {\n      return this.inputAmount\n    } else {\n      const slippageAdjustedAmountIn = new Fraction(ONE)\n        .add(slippageTolerance)\n        .multiply(this.inputAmount.quotient).quotient\n      return CurrencyAmount.fromRawAmount(this.inputAmount.currency, slippageAdjustedAmountIn)\n    }\n  }\n\n  /**\n   * Given a list of pairs, and a fixed amount in, returns the top `maxNumResults` trades that go from an input token\n   * amount to an output token, making at most `maxHops` hops.\n   * Note this does not consider aggregation, as routes are linear. It's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param nextAmountIn exact amount of input currency to spend\n   * @param currencyOut the desired currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountIn used in recursion; the original value of the currencyAmountIn parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactIn<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyAmountIn: CurrencyAmount<TInput>,\n    currencyOut: TOutput,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountIn: CurrencyAmount<Currency> = currencyAmountIn,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_INPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountIn === nextAmountIn || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountIn = nextAmountIn.wrapped\n    const tokenOut = currencyOut.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountIn.currency) && !pair.token1.equals(amountIn.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountOut: CurrencyAmount<Token>\n      try {\n        ;[amountOut] = pair.getOutputAmount(amountIn)\n      } catch (error) {\n        // input too low\n        if (error.isInsufficientInputAmountError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the output token, so this is the final trade of one of the paths\n      if (amountOut.currency.equals(tokenOut)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([...currentPairs, pair], currencyAmountIn.currency, currencyOut),\n            currencyAmountIn,\n            TradeType.EXACT_INPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that lead from this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactIn(\n          pairsExcludingThisPair,\n          currencyAmountIn,\n          currencyOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1,\n          },\n          [...currentPairs, pair],\n          amountOut,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n\n  /**\n   * Return the execution price after accounting for slippage tolerance\n   * @param slippageTolerance the allowed tolerated slippage\n   */\n  public worstExecutionPrice(slippageTolerance: Percent): Price<TInput, TOutput> {\n    return new Price(\n      this.inputAmount.currency,\n      this.outputAmount.currency,\n      this.maximumAmountIn(slippageTolerance).quotient,\n      this.minimumAmountOut(slippageTolerance).quotient\n    )\n  }\n\n  /**\n   * similar to the above method but instead targets a fixed output amount\n   * given a list of pairs, and a fixed amount out, returns the top `maxNumResults` trades that go from an input token\n   * to an output token amount, making at most `maxHops` hops\n   * note this does not consider aggregation, as routes are linear. it's possible a better route exists by splitting\n   * the amount in among multiple routes.\n   * @param pairs the pairs to consider in finding the best trade\n   * @param currencyIn the currency to spend\n   * @param nextAmountOut the exact amount of currency out\n   * @param maxNumResults maximum number of results to return\n   * @param maxHops maximum number of hops a returned trade can make, e.g. 1 hop goes through a single pair\n   * @param currentPairs used in recursion; the current list of pairs\n   * @param currencyAmountOut used in recursion; the original value of the currencyAmountOut parameter\n   * @param bestTrades used in recursion; the current list of best trades\n   */\n  public static bestTradeExactOut<TInput extends Currency, TOutput extends Currency>(\n    pairs: Pair[],\n    currencyIn: TInput,\n    currencyAmountOut: CurrencyAmount<TOutput>,\n    { maxNumResults = 3, maxHops = 3 }: BestTradeOptions = {},\n    // used in recursion.\n    currentPairs: Pair[] = [],\n    nextAmountOut: CurrencyAmount<Currency> = currencyAmountOut,\n    bestTrades: Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] = []\n  ): Trade<TInput, TOutput, TradeType.EXACT_OUTPUT>[] {\n    invariant(pairs.length > 0, 'PAIRS')\n    invariant(maxHops > 0, 'MAX_HOPS')\n    invariant(currencyAmountOut === nextAmountOut || currentPairs.length > 0, 'INVALID_RECURSION')\n\n    const amountOut = nextAmountOut.wrapped\n    const tokenIn = currencyIn.wrapped\n    for (let i = 0; i < pairs.length; i++) {\n      const pair = pairs[i]\n      // pair irrelevant\n      if (!pair.token0.equals(amountOut.currency) && !pair.token1.equals(amountOut.currency)) continue\n      if (pair.reserve0.equalTo(ZERO) || pair.reserve1.equalTo(ZERO)) continue\n\n      let amountIn: CurrencyAmount<Token>\n      try {\n        ;[amountIn] = pair.getInputAmount(amountOut)\n      } catch (error) {\n        // not enough liquidity in this pair\n        if (error.isInsufficientReservesError) {\n          continue\n        }\n        throw error\n      }\n      // we have arrived at the input token, so this is the first trade of one of the paths\n      if (amountIn.currency.equals(tokenIn)) {\n        sortedInsert(\n          bestTrades,\n          new Trade(\n            new Route([pair, ...currentPairs], currencyIn, currencyAmountOut.currency),\n            currencyAmountOut,\n            TradeType.EXACT_OUTPUT\n          ),\n          maxNumResults,\n          tradeComparator\n        )\n      } else if (maxHops > 1 && pairs.length > 1) {\n        const pairsExcludingThisPair = pairs.slice(0, i).concat(pairs.slice(i + 1, pairs.length))\n\n        // otherwise, consider all the other paths that arrive at this token as long as we have not exceeded maxHops\n        Trade.bestTradeExactOut(\n          pairsExcludingThisPair,\n          currencyIn,\n          currencyAmountOut,\n          {\n            maxNumResults,\n            maxHops: maxHops - 1,\n          },\n          [pair, ...currentPairs],\n          amountIn,\n          bestTrades\n        )\n      }\n    }\n\n    return bestTrades\n  }\n}\n","import { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n","import JSBI from 'jsbi'\n\nimport { ONE, ZERO } from '../constants'\nimport { Rebase } from '../interfaces'\n\nexport function rebase(value: JSBI, from: JSBI, to: JSBI): JSBI {\n  return from ? JSBI.divide(JSBI.multiply(value, to), from) : ZERO\n}\n\nexport function toElastic(total: Rebase, base: JSBI, roundUp: boolean): JSBI {\n  let elastic: JSBI\n  if (JSBI.equal(total.base, ZERO)) {\n    elastic = base\n  } else {\n    elastic = JSBI.divide(JSBI.multiply(base, total.elastic), total.base)\n    if (roundUp && JSBI.lessThan(JSBI.divide(JSBI.multiply(elastic, total.base), total.elastic), base)) {\n      elastic = JSBI.add(elastic, ONE)\n    }\n  }\n\n  return elastic\n}\n","import { SOLIDITY_TYPE_MAXIMA, ZERO } from '../constants'\nimport { SolidityType } from '../enums'\n\nimport JSBI from 'jsbi'\nimport invariant from 'tiny-invariant'\n\nexport function validateSolidityTypeInstance(value: JSBI, solidityType: SolidityType): void {\n  invariant(JSBI.greaterThanOrEqual(value, ZERO), `${value} is not a ${solidityType}.`)\n  invariant(JSBI.lessThanOrEqual(value, SOLIDITY_TYPE_MAXIMA[solidityType]), `${value} is not a ${solidityType}.`)\n}\n","import { Currency } from './entities/Currency'\nimport { CurrencyAmount } from './entities/CurrencyAmount'\nimport { Percent } from './entities/Percent'\nimport { Token } from './entities/Token'\nimport { Trade } from './entities/Trade'\nimport { TradeType } from './enums/TradeType'\nimport invariant from 'tiny-invariant'\nimport { validateAndParseAddress } from './functions/validateAndParseAddress'\n\n/**\n * Options for producing the arguments to send call to the router.\n */\nexport interface TradeOptions {\n  /**\n   * How much the execution price is allowed to move unfavorably from the trade execution price.\n   */\n  allowedSlippage: Percent\n  /**\n   * How long the swap is valid until it expires, in seconds.\n   * This will be used to produce a `deadline` parameter which is computed from when the swap call parameters\n   * are generated.\n   */\n  ttl: number\n  /**\n   * The account that should receive the output of the swap.\n   */\n  recipient: string\n\n  /**\n   * Whether any of the tokens in the path are fee on transfer tokens, which should be handled with special methods\n   */\n  feeOnTransfer?: boolean\n}\n\nexport interface TradeOptionsDeadline extends Omit<TradeOptions, 'ttl'> {\n  /**\n   * When the transaction expires.\n   * This is an atlernate to specifying the ttl, for when you do not want to use local time.\n   */\n  deadline: number\n}\n\n/**\n * The parameters to use in the call to the Uniswap V2 Router to execute a trade.\n */\nexport interface SwapParameters {\n  /**\n   * The method to call on the Uniswap V2 Router.\n   */\n  methodName: string\n  /**\n   * The arguments to pass to the method, all hex encoded.\n   */\n  args: (string | string[])[]\n  /**\n   * The amount of wei to send in hex.\n   */\n  value: string\n}\n\nexport function toHex(currencyAmount: CurrencyAmount<Currency>) {\n  return `0x${currencyAmount.quotient.toString(16)}`\n}\n\nconst ZERO_HEX = '0x0'\n\n/**\n * Represents the Uniswap V2 Router, and has static methods for helping execute trades.\n */\nexport abstract class Router {\n  /**\n   * Cannot be constructed.\n   */\n  private constructor() {}\n\n  /**\n   * Produces the on-chain method name to call and the hex encoded parameters to pass as arguments for a given trade.\n   * @param trade to produce call parameters for\n   * @param options options for the call parameters\n   */\n  public static swapCallParameters(\n    trade: Trade<Currency, Currency, TradeType>,\n    options: TradeOptions | TradeOptionsDeadline\n  ): SwapParameters {\n    const etherIn = trade.inputAmount.currency.isNative\n    const etherOut = trade.outputAmount.currency.isNative\n    // the router does not support both ether in and out\n    invariant(!(etherIn && etherOut), 'ETHER_IN_OUT')\n    invariant(!('ttl' in options) || options.ttl > 0, 'TTL')\n\n    const to: string = validateAndParseAddress(options.recipient)\n    const amountIn: string = toHex(trade.maximumAmountIn(options.allowedSlippage))\n    const amountOut: string = toHex(trade.minimumAmountOut(options.allowedSlippage))\n    const path: string[] = trade.route.path.map((token: Token) => token.address)\n    const deadline =\n      'ttl' in options\n        ? `0x${(Math.floor(new Date().getTime() / 1000) + options.ttl).toString(16)}`\n        : `0x${options.deadline.toString(16)}`\n\n    const useFeeOnTransfer = Boolean(options.feeOnTransfer)\n\n    let methodName: string\n    let args: (string | string[])[]\n    let value: string\n    switch (trade.tradeType) {\n      case TradeType.EXACT_INPUT:\n        if (etherIn) {\n          methodName = useFeeOnTransfer ? 'swapExactETHForTokensSupportingFeeOnTransferTokens' : 'swapExactETHForTokens'\n          // (uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = useFeeOnTransfer ? 'swapExactTokensForETHSupportingFeeOnTransferTokens' : 'swapExactTokensForETH'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = useFeeOnTransfer\n            ? 'swapExactTokensForTokensSupportingFeeOnTransferTokens'\n            : 'swapExactTokensForTokens'\n          // (uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n          args = [amountIn, amountOut, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n      case TradeType.EXACT_OUTPUT:\n        invariant(!useFeeOnTransfer, 'EXACT_OUT_FOT')\n        if (etherIn) {\n          methodName = 'swapETHForExactTokens'\n          // (uint amountOut, address[] calldata path, address to, uint deadline)\n          args = [amountOut, path, to, deadline]\n          value = amountIn\n        } else if (etherOut) {\n          methodName = 'swapTokensForExactETH'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        } else {\n          methodName = 'swapTokensForExactTokens'\n          // (uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n          args = [amountOut, amountIn, path, to, deadline]\n          value = ZERO_HEX\n        }\n        break\n    }\n    return {\n      methodName,\n      args,\n      value,\n    }\n  }\n}\n"],"names":["ChainId","ChainKey","Rounding","SolidityType","TradeType","TradeVersion","SUSHI_ADDRESS","ETHEREUM","ROPSTEN","RINKEBY","GÖRLI","KOVAN","FANTOM","MATIC","XDAI","BSC","ARBITRUM","AVALANCHE","HECO","HARMONY","OKEX","OKEX_TESTNET","PALM","PALM_TESTNET","MOONRIVER","CELO","TELOS","FUSE","MOONBEAM","KAVA","METIS","USDC_ADDRESS","MATIC_TESTNET","OPTIMISM","USD_ADDRESS","WETH9_ADDRESS","ARBITRUM_TESTNET","WNATIVE_ADDRESS","FANTOM_TESTNET","BSC_TESTNET","MOONBEAM_TESTNET","AVALANCHE_TESTNET","HECO_TESTNET","HARMONY_TESTNET","DAI_ADDRESS","USDT_ADDRESS","MIM_ADDRESS","FRAX_ADDRESS","FACTORY_ADDRESS","ROUTER_ADDRESS","MASTERCHEF_ADDRESS","BAR_ADDRESS","MAKER_ADDRESS","TIMELOCK_ADDRESS","BENTOBOX_ADDRESS","KASHI_ADDRESS","SUSHISWAP_SWAPPER_ADDRESS","SUSHISWAP_MULTISWAPPER_ADDRESS","SUSHISWAP_MULTI_EXACT_SWAPPER_ADDRESS","PEGGED_ORACLE_ADDRESS","SUSHISWAP_TWAP_0_ORACLE_ADDRESS","SUSHISWAP_TWAP_1_ORACLE_ADDRESS","CHAINLINK_ORACLE_ADDRESS","BORING_HELPER_ADDRESS","MINICHEF_ADDRESS","MASTERCHEF_V2_ADDRESS","ENS_REGISTRAR_ADDRESS","ZAPPER_ADDRESS","MERKLE_DISTRIBUTOR_ADDRESS","MULTICALL2_ADDRESS","BALANCE_FETCHER_ADDRESS","MULTISIG_ADDRESS","CHAIN_KEY","INIT_CODE_HASH","AbstractCurrency","chainId","decimals","symbol","name","Number","isSafeInteger","invariant","isInteger","NativeCurrency","validateAndParseAddress","address","checksummedAddress","getAddress","warning","error","Token","equals","other","isToken","sortsBefore","toLowerCase","currencyEquals","currencyA","currencyB","USDC","USD","WETH9","WNATIVE","SUSHI","Avalanche","onChain","_cache","isNative","wnative","Binance","Celo","wcelo","Ether","_etherCache","weth9","Fantom","Harmony","Heco","Matic","Movr","Okex","xDai","Palm","Fuse","Telos","Glmr","Kava","Metis","NATIVE","MaxUint256","JSBI","BigInt","ZERO","ONE","TWO","THREE","FIVE","TEN","_100","_997","_1000","MINIMUM_LIQUIDITY","SOLIDITY_TYPE_MAXIMA","uint8","uint256","CAN_SET_PROTOTYPE","Object","InsufficientReservesError","constructor","setPrototypeOf","prototype","Error","InsufficientInputAmountError","Decimal","toFormat","_Decimal","Big","_Big","strict","toSignificantRounding","ROUND_DOWN","ROUND_HALF_UP","ROUND_UP","toFixedRounding","Fraction","numerator","denominator","tryParseFraction","fractionish","invert","add","otherParsed","equal","multiply","subtract","lessThan","equalTo","greaterThan","divide","toSignificant","significantDigits","format","rounding","groupSeparator","set","precision","quotient","toString","div","toSignificantDigits","decimalPlaces","toFixed","DP","RM","remainder","CurrencyAmount","currency","lessThanOrEqual","decimalScale","exponentiate","fromRawAmount","rawAmount","fromFractionalAmount","added","subtracted","multiplied","divided","toExact","serialize","wrapped","Price","baseCurrency","quoteCurrency","args","length","result","quoteAmount","baseAmount","scalar","fraction","quote","currencyAmount","adjustedForDecimals","computePairAddress","factoryAddress","tokenA","tokenB","token0","token1","getCreate2Address","keccak256","pack","MAX_SAFE_INTEGER","sqrt","value","greaterThanOrEqual","Math","floor","toNumber","z","x","minimum","lowest","i","LT","maximum","highest","GT","difference","a","b","Pair","currencyAmountA","currencyAmountB","currencyAmounts","liquidityToken","tokenAmounts","involvesToken","token","priceOf","token0Price","token1Price","reserveOf","reserve0","reserve1","getOutputAmount","inputAmount","inputReserve","outputReserve","inputAmountWithFee","outputAmount","getInputAmount","getLiquidityMinted","totalSupply","tokenAmountA","tokenAmountB","liquidity","amount0","amount1","console","log","kLast","getLiquidityValue","feeOn","totalSupplyAdjusted","kLastParsed","rootK","rootKLast","feeLiquidity","ONE_HUNDRED","toPercent","Percent","Route","pairs","input","output","every","pair","wrappedInput","path","entries","currentInput","push","_midPrice","prices","reduced","slice","reduce","accumulator","currentValue","computePriceImpact","midPrice","quotedOutputAmount","priceImpact","sortedInsert","items","maxSize","comparator","isFull","lo","hi","mid","splice","pop","inputOutputComparator","tradeComparator","ioComp","route","Trade","amount","tradeType","Array","EXACT_INPUT","executionPrice","exactIn","amountIn","exactOut","amountOut","EXACT_OUTPUT","minimumAmountOut","slippageTolerance","slippageAdjustedAmountOut","maximumAmountIn","slippageAdjustedAmountIn","bestTradeExactIn","currencyAmountIn","currencyOut","currentPairs","nextAmountIn","bestTrades","maxNumResults","maxHops","tokenOut","isInsufficientInputAmountError","pairsExcludingThisPair","concat","worstExecutionPrice","bestTradeExactOut","currencyIn","currencyAmountOut","nextAmountOut","tokenIn","isInsufficientReservesError","getSigner","library","account","connectUnchecked","getProviderOrSigner","rebase","from","to","toElastic","total","base","roundUp","elastic","validateSolidityTypeInstance","solidityType","toHex","ZERO_HEX","Router","swapCallParameters","trade","options","etherIn","etherOut","ttl","recipient","allowedSlippage","map","deadline","Date","getTime","useFeeOnTransfer","Boolean","feeOnTransfer","methodName"],"mappings":"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"}