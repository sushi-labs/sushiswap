{"version":3,"file":"redux-multicall.cjs.development.js","sources":["../src/constants.ts","../src/utils/callKeys.ts","../src/utils/callState.ts","../src/validation.ts","../src/hooks.ts","../src/slice.ts","../node_modules/regenerator-runtime/runtime.js","../src/utils/chunkCalls.ts","../src/utils/retry.ts","../src/utils/useDebounce.ts","../src/updater.tsx","../src/create.ts"],"sourcesContent":["import type { CallResult, CallState, ListenerOptions } from './types'\n\nexport const DEFAULT_BLOCKS_PER_FETCH = 1\nexport const DEFAULT_CALL_GAS_REQUIRED = 1_000_000\nexport const DEFAULT_CHUNK_GAS_REQUIRED = 200_000\nexport const CHUNK_GAS_LIMIT = 100_000_000\nexport const CONSERVATIVE_BLOCK_GAS_LIMIT = 10_000_000 // conservative, hard-coded estimate of the current block gas limit\n\n// Consts for hooks\nexport const INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\nexport const INVALID_CALL_STATE: CallState = {\n  valid: false,\n  result: undefined,\n  loading: false,\n  syncing: false,\n  error: false,\n}\nexport const LOADING_CALL_STATE: CallState = {\n  valid: true,\n  result: undefined,\n  loading: true,\n  syncing: true,\n  error: false,\n}\n","import { Call } from '../types'\n\nexport function toCallKey(call: Call): string {\n  let key = `${call.address}-${call.callData}`\n  if (call.gasRequired) {\n    if (!Number.isSafeInteger(call.gasRequired)) {\n      throw new Error(`Invalid number: ${call.gasRequired}`)\n    }\n    key += `-${call.gasRequired}`\n  }\n  return key\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (![2, 3].includes(pcs.length)) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n    ...(pcs[2] ? { gasRequired: Number.parseInt(pcs[2]) } : {}),\n  }\n}\n\nexport function callsToCallKeys(calls?: Array<Call | undefined>) {\n  return (\n    calls\n      ?.filter((c): c is Call => Boolean(c))\n      ?.map(toCallKey)\n      ?.sort() ?? []\n  )\n}\n\nexport function callKeysToCalls(callKeys: string[]) {\n  if (!callKeys?.length) return null\n  return callKeys.map((key) => parseCallKey(key))\n}\n","import type { FunctionFragment, Interface } from '@ethersproject/abi'\nimport { INVALID_CALL_STATE, LOADING_CALL_STATE } from '../constants'\nimport type { CallResult, CallState, CallStateResult } from '../types'\n\nexport function toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: CallStateResult | undefined = undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n","import { BigNumber } from '@ethersproject/bignumber'\n\nexport type MethodArg = string | number | BigNumber\nexport type MethodArgs = Array<MethodArg | MethodArg[]>\n\nexport function isMethodArg(x: unknown): x is MethodArg {\n  return BigNumber.isBigNumber(x) || ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nexport function isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Interface } from '@ethersproject/abi'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { batch, useDispatch, useSelector } from 'react-redux'\nimport { INVALID_CALL_STATE, INVALID_RESULT, DEFAULT_BLOCKS_PER_FETCH } from './constants'\nimport type { MulticallContext } from './context'\nimport type { Call, CallResult, CallState, ListenerOptions, ListenerOptionsWithGas, WithMulticallState } from './types'\nimport { callKeysToCalls, callsToCallKeys, toCallKey } from './utils/callKeys'\nimport { toCallState } from './utils/callState'\nimport { isValidMethodArgs, MethodArg } from './validation'\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\n// the lowest level call for subscribing to contract data\nexport function useCallsDataSubscription(\n  context: MulticallContext,\n  chainId: number | undefined,\n  calls: Array<Call | undefined>,\n  listenerOptions?: ListenerOptions\n): CallResult[] {\n  const { reducerPath, actions } = context\n  const callResults = useSelector((state: WithMulticallState) => state[reducerPath].callResults)\n  const defaultListenerOptions = useSelector((state: WithMulticallState) => state[reducerPath].listenerOptions)\n  const dispatch = useDispatch()\n  const serializedCallKeys: string = useMemo(() => JSON.stringify(callsToCallKeys(calls)), [calls])\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    const calls = callKeysToCalls(callKeys)\n    if (!chainId || !calls) return\n    const blocksPerFetchFromState = (defaultListenerOptions ?? {})[chainId]?.blocksPerFetch\n    const blocksPerFetchForChain =\n      listenerOptions?.blocksPerFetch ?? blocksPerFetchFromState ?? DEFAULT_BLOCKS_PER_FETCH\n\n    dispatch(\n      actions.addMulticallListeners({\n        chainId,\n        calls,\n        options: { blocksPerFetch: blocksPerFetchForChain },\n      })\n    )\n\n    return () => {\n      dispatch(\n        actions.removeMulticallListeners({\n          chainId,\n          calls,\n          options: { blocksPerFetch: blocksPerFetchForChain },\n        })\n      )\n    }\n  }, [actions, chainId, dispatch, listenerOptions, serializedCallKeys, defaultListenerOptions])\n\n  // Ensure that call results arrays remain referentially equivalent when unchanged to prevent\n  // spurious re-renders, which would otherwise occur because mapping always creates a new object.\n  const stableResults = useRef<CallResult[]>([])\n  return useMemo(() => {\n    // Construct results using a for-loop to handle sparse arrays.\n    // Array.prototype.map would skip empty entries.\n    let results: CallResult[] = []\n    for (let i = 0; i < calls.length; ++i) {\n      const call = calls[i]\n      if (!chainId || !call) {\n        results.push(INVALID_RESULT)\n        continue\n      }\n      const result = callResults[chainId]?.[toCallKey(call)]\n      const data = result?.data && result.data !== '0x' ? result.data : undefined\n      results.push({ valid: true, data, blockNumber: result?.blockNumber })\n    }\n\n    if (!areCallResultsEqual(results, stableResults.current)) {\n      stableResults.current = results\n    }\n    return stableResults.current\n  }, [callResults, calls, chainId])\n}\n\nfunction areCallResultsEqual(a: CallResult[], b: CallResult[]) {\n  if (a.length !== b.length) return false\n  return a.every(\n    (_, i) => a[i].valid === b[i].valid && a[i].data === b[i].data && a[i].blockNumber === b[i].blockNumber\n  )\n}\n\n// Similar to useCallsDataSubscription above but for subscribing to\n// calls to multiple chains at once\nfunction useMultichainCallsDataSubscription(\n  context: MulticallContext,\n  chainToCalls: Record<number, Array<Call | undefined>>,\n  listenerOptions?: ListenerOptions\n): Record<number, CallResult[]> {\n  const { reducerPath, actions } = context\n  const callResults = useSelector((state: WithMulticallState) => state[reducerPath].callResults)\n  const defaultListenerOptions = useSelector((state: WithMulticallState) => state[reducerPath].listenerOptions)\n  const dispatch = useDispatch()\n\n  const serializedCallKeys: string = useMemo(() => {\n    const sortedChainIds = getChainIds(chainToCalls).sort()\n    const chainCallKeysTuple = sortedChainIds.map((chainId) => {\n      const calls = chainToCalls[chainId]\n      const callKeys = callsToCallKeys(calls)\n      // Note, using a tuple to ensure consistent order when serialized\n      return [chainId, callKeys]\n    })\n    return JSON.stringify(chainCallKeysTuple)\n  }, [chainToCalls])\n\n  useEffect(() => {\n    const chainCallKeysTuples: Array<[number, string[]]> = JSON.parse(serializedCallKeys)\n    if (!chainCallKeysTuples?.length) return\n\n    batch(() => {\n      for (const [chainId, callKeys] of chainCallKeysTuples) {\n        const calls = callKeysToCalls(callKeys)\n        if (!calls?.length) continue\n        const blocksPerFetchFromState = (defaultListenerOptions ?? {})[chainId]?.blocksPerFetch\n        const blocksPerFetchForChain =\n          listenerOptions?.blocksPerFetch ?? blocksPerFetchFromState ?? DEFAULT_BLOCKS_PER_FETCH\n\n        dispatch(\n          actions.addMulticallListeners({\n            chainId,\n            calls,\n            options: { blocksPerFetch: blocksPerFetchForChain },\n          })\n        )\n      }\n    })\n\n    return () => {\n      batch(() => {\n        for (const [chainId, callKeys] of chainCallKeysTuples) {\n          const calls = callKeysToCalls(callKeys)\n          if (!calls?.length) continue\n          const blocksPerFetchFromState = (defaultListenerOptions ?? {})[chainId]?.blocksPerFetch\n          const blocksPerFetchForChain =\n            listenerOptions?.blocksPerFetch ?? blocksPerFetchFromState ?? DEFAULT_BLOCKS_PER_FETCH\n          dispatch(\n            actions.removeMulticallListeners({\n              chainId,\n              calls,\n              options: { blocksPerFetch: blocksPerFetchForChain },\n            })\n          )\n        }\n      })\n    }\n  }, [actions, dispatch, listenerOptions, serializedCallKeys, defaultListenerOptions])\n\n  return useMemo(\n    () =>\n      getChainIds(chainToCalls).reduce((result, chainId) => {\n        const calls = chainToCalls[chainId]\n        result[chainId] = calls.map<CallResult>((call) => {\n          if (!chainId || !call) return INVALID_RESULT\n          const result = callResults[chainId]?.[toCallKey(call)]\n          const data = result?.data && result.data !== '0x' ? result.data : undefined\n          return { valid: true, data, blockNumber: result?.blockNumber }\n        })\n        return result\n      }, {} as Record<number, CallResult[]>),\n    [callResults, chainToCalls]\n  )\n}\n\n// formats many calls to a single function on a single contract, with the function name and inputs specified\nexport function useSingleContractMultipleData(\n  context: MulticallContext,\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: Partial<ListenerOptionsWithGas>\n): CallState[] {\n  const { gasRequired } = options ?? {}\n\n  // Create ethers function fragment\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  // Get encoded call data. Note can't use useCallData below b.c. this is  for a list of CallInputs\n  const callDatas = useMemo(() => {\n    if (!contract || !fragment) return []\n    return callInputs.map<string | undefined>((callInput) =>\n      isValidMethodArgs(callInput) ? contract.interface.encodeFunctionData(fragment, callInput) : undefined\n    )\n  }, [callInputs, contract, fragment])\n\n  // Create call objects\n  const calls = useMemo(() => {\n    if (!contract) return []\n    return callDatas.map<Call | undefined>((callData) => {\n      if (!callData) return undefined\n      return {\n        address: contract.address,\n        callData,\n        gasRequired,\n      }\n    })\n  }, [contract, callDatas, gasRequired])\n\n  // Subscribe to call data\n  const results = useCallsDataSubscription(context, chainId, calls, options as ListenerOptions)\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, latestBlockNumber))\n  }, [results, contract, fragment, latestBlockNumber])\n}\n\nexport function useMultipleContractSingleData(\n  context: MulticallContext,\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: Partial<ListenerOptionsWithGas>\n): CallState[] {\n  const { gasRequired } = options ?? {}\n\n  const { fragment, callData } = useCallData(methodName, contractInterface, callInputs)\n\n  // Create call objects\n  const calls = useMemo(() => {\n    if (!callData) return []\n    return addresses.map<Call | undefined>((address) => {\n      if (!address) return undefined\n      return { address, callData, gasRequired }\n    })\n  }, [addresses, callData, gasRequired])\n\n  // Subscribe to call data\n  const results = useCallsDataSubscription(context, chainId, calls, options as ListenerOptions)\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, latestBlockNumber))\n  }, [fragment, results, contractInterface, latestBlockNumber])\n}\n\nexport function useSingleCallResult(\n  context: MulticallContext,\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: Partial<ListenerOptionsWithGas>\n): CallState {\n  return (\n    useSingleContractMultipleData(context, chainId, latestBlockNumber, contract, methodName, [inputs], options)[0] ??\n    INVALID_CALL_STATE\n  )\n}\n\n// formats many calls to any number of functions on a single contract, with only the calldata specified\nexport function useSingleContractWithCallData(\n  context: MulticallContext,\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined,\n  contract: Contract | null | undefined,\n  callDatas: string[],\n  options?: Partial<ListenerOptionsWithGas>\n): CallState[] {\n  const { gasRequired } = options ?? {}\n\n  // Create call objects\n  const calls = useMemo(() => {\n    if (!contract) return []\n    return callDatas.map<Call>((callData) => ({\n      address: contract.address,\n      callData,\n      gasRequired,\n    }))\n  }, [contract, callDatas, gasRequired])\n\n  // Subscribe to call data\n  const results = useCallsDataSubscription(context, chainId, calls, options as ListenerOptions)\n\n  return useMemo(() => {\n    return results.map((result, i) =>\n      toCallState(\n        result,\n        contract?.interface,\n        contract?.interface?.getFunction(callDatas[i].substring(0, 10)),\n        latestBlockNumber\n      )\n    )\n  }, [results, contract, callDatas, latestBlockNumber])\n}\n\n// Similar to useMultipleContractSingleData but instead of multiple contracts on one chain,\n// this is for querying compatible contracts on multiple chains\nexport function useMultiChainMultiContractSingleData(\n  context: MulticallContext,\n  chainToBlockNumber: Record<number, number | undefined>,\n  chainToAddresses: Record<number, Array<string | undefined>>,\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: Partial<ListenerOptionsWithGas>\n): Record<number, CallState[]> {\n  const { gasRequired } = options ?? {}\n\n  const { fragment, callData } = useCallData(methodName, contractInterface, callInputs)\n\n  // Create call objects\n  const chainToCalls = useMemo(() => {\n    if (!callData || !chainToAddresses) return {}\n    return getChainIds(chainToAddresses).reduce((result, chainId) => {\n      const addresses = chainToAddresses[chainId]\n      const calls = addresses.map<Call | undefined>((address) => {\n        if (!address) return undefined\n        return { address, callData, gasRequired }\n      })\n      result[chainId] = calls\n      return result\n    }, {} as Record<number, Array<Call | undefined>>)\n  }, [chainToAddresses, callData, gasRequired])\n\n  // Subscribe to call data\n  const chainIdToResults = useMultichainCallsDataSubscription(context, chainToCalls, options as ListenerOptions)\n\n  return useMemo(() => {\n    return getChainIds(chainIdToResults).reduce((combinedResults, chainId) => {\n      const latestBlockNumber = chainToBlockNumber?.[chainId]\n      const results = chainIdToResults[chainId]\n      combinedResults[chainId] = results.map((result) =>\n        toCallState(result, contractInterface, fragment, latestBlockNumber)\n      )\n      return combinedResults\n    }, {} as Record<number, CallState[]>)\n  }, [fragment, contractInterface, chainIdToResults, chainToBlockNumber])\n}\n\n// Similar to useSingleCallResult but instead of one contract on one chain,\n// this is for querying a contract on multiple chains\nexport function useMultiChainSingleContractSingleData(\n  context: MulticallContext,\n  chainToBlockNumber: Record<number, number | undefined>,\n  chainToAddress: Record<number, string | undefined>,\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: Partial<ListenerOptionsWithGas>\n): Record<number, CallState> {\n  // This hook uses the more flexible useMultiChainMultiContractSingleData internally,\n  // but transforms the inputs and outputs for convenience\n  const chainIdToAddresses = useMemo(() => {\n    return getChainIds(chainToAddress).reduce((result, chainId) => {\n      result[chainId] = [chainToAddress[chainId]]\n      return result\n    }, {} as Record<number, Array<string | undefined>>)\n  }, [chainToAddress])\n\n  const multiContractResults = useMultiChainMultiContractSingleData(\n    context,\n    chainToBlockNumber,\n    chainIdToAddresses,\n    contractInterface,\n    methodName,\n    callInputs,\n    options\n  )\n\n  return useMemo(() => {\n    return getChainIds(chainToAddress).reduce((result, chainId) => {\n      result[chainId] = multiContractResults[chainId]?.[0] ?? INVALID_CALL_STATE\n      return result\n    }, {} as Record<number, CallState>)\n  }, [chainToAddress, multiContractResults])\n}\n\nfunction useCallData(\n  methodName: string,\n  contractInterface: Interface | null | undefined,\n  callInputs: OptionalMethodInputs | undefined\n) {\n  // Create ethers function fragment\n  const fragment = useMemo(() => contractInterface?.getFunction(methodName), [contractInterface, methodName])\n  // Get encoded call data\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface?.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment]\n  )\n  return { fragment, callData }\n}\n\nfunction getChainIds(chainIdMap: Record<number, any>) {\n  return Object.keys(chainIdMap).map((c) => parseInt(c, 10))\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport {\n  MulticallFetchingPayload,\n  MulticallListenerPayload,\n  MulticallResultsPayload,\n  MulticallState,\n  MulticallListenerOptionsPayload,\n} from './types'\nimport { toCallKey } from './utils/callKeys'\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport function createMulticallSlice(reducerPath: string) {\n  return createSlice({\n    name: reducerPath,\n    initialState,\n    reducers: {\n      addMulticallListeners: (state, action: PayloadAction<MulticallListenerPayload>) => {\n        const {\n          calls,\n          chainId,\n          options: { blocksPerFetch },\n        } = action.payload\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n        listeners[chainId] = listeners[chainId] ?? {}\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n          listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n        })\n      },\n\n      removeMulticallListeners: (state, action: PayloadAction<MulticallListenerPayload>) => {\n        const {\n          calls,\n          chainId,\n          options: { blocksPerFetch },\n        } = action.payload\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n\n      fetchingMulticallResults: (state, action: PayloadAction<MulticallFetchingPayload>) => {\n        const { chainId, fetchingBlockNumber, calls } = action.payload\n        state.callResults[chainId] = state.callResults[chainId] ?? {}\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          const current = state.callResults[chainId][callKey]\n          if (!current) {\n            state.callResults[chainId][callKey] = {\n              fetchingBlockNumber,\n            }\n          } else {\n            if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n            state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n          }\n        })\n      },\n\n      errorFetchingMulticallResults: (state, action: PayloadAction<MulticallFetchingPayload>) => {\n        const { chainId, fetchingBlockNumber, calls } = action.payload\n        state.callResults[chainId] = state.callResults[chainId] ?? {}\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          const current = state.callResults[chainId][callKey]\n          if (!current || typeof current.fetchingBlockNumber !== 'number') return // only should be dispatched if we are already fetching\n          if (current.fetchingBlockNumber <= fetchingBlockNumber) {\n            delete current.fetchingBlockNumber\n            current.data = null\n            current.blockNumber = fetchingBlockNumber\n          }\n        })\n      },\n\n      updateMulticallResults: (state, action: PayloadAction<MulticallResultsPayload>) => {\n        const { chainId, results, blockNumber } = action.payload\n        state.callResults[chainId] = state.callResults[chainId] ?? {}\n        Object.keys(results).forEach((callKey) => {\n          const current = state.callResults[chainId][callKey]\n          if ((current?.blockNumber ?? 0) > blockNumber) return\n          if (current?.data === results[callKey] && current?.blockNumber === blockNumber) return\n          state.callResults[chainId][callKey] = {\n            data: results[callKey],\n            blockNumber,\n          }\n        })\n      },\n\n      updateListenerOptions: (state, action: PayloadAction<MulticallListenerOptionsPayload>) => {\n        const { chainId, listenerOptions } = action.payload\n        state.listenerOptions = state.listenerOptions ?? {}\n        state.listenerOptions[chainId] = listenerOptions\n      },\n    },\n  })\n}\n\nexport type MulticallActions = ReturnType<typeof createMulticallSlice>['actions']\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { DEFAULT_CHUNK_GAS_REQUIRED } from '../constants'\n\ninterface Bin<T> {\n  calls: T[]\n  cumulativeGasLimit: number\n}\n\n/**\n * Tries to pack a list of items into as few bins as possible using the first-fit bin packing algorithm\n * @param calls the calls to chunk\n * @param chunkGasLimit the gas limit of any one chunk of calls, i.e. bin capacity\n * @param defaultGasRequired the default amount of gas an individual call should cost if not specified\n */\nexport default function chunkCalls<T extends { gasRequired?: number }>(\n  calls: T[],\n  chunkGasLimit: number,\n  defaultGasRequired: number = DEFAULT_CHUNK_GAS_REQUIRED\n): T[][] {\n  return (\n    calls\n      // first sort by gas required\n      .sort((c1, c2) => (c2.gasRequired ?? defaultGasRequired) - (c1.gasRequired ?? defaultGasRequired))\n      // then bin the calls according to the first fit algorithm\n      .reduce<Bin<T>[]>((bins, call) => {\n        const gas = call.gasRequired ?? defaultGasRequired\n        for (const bin of bins) {\n          if (bin.cumulativeGasLimit + gas <= chunkGasLimit) {\n            bin.calls.push(call)\n            bin.cumulativeGasLimit += gas\n            return bins\n          }\n        }\n        // didn't find a bin for the call, make a new bin\n        bins.push({\n          calls: [call],\n          cumulativeGasLimit: gas,\n        })\n        return bins\n      }, [])\n      // pull out just the calls from each bin\n      .map((b) => b.calls)\n  )\n}\n","// TODO de-duplicate this file with web interface\n// https://github.com/Uniswap/interface/blob/main/src/utils/retry.ts\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nclass CancelledError extends Error {\n  public isCancelledError: true = true\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {\n  public isRetryableError: true = true\n}\n\nexport interface RetryOptions {\n  n: number\n  minWait: number\n  maxWait: number\n}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: RetryOptions\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error as any).isRetryableError) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n","// TODO de-duplicate this file with web interface\n// https://github.com/Uniswap/interface/blob/main/src/hooks/useDebounce.ts\n\nimport { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import React, { Dispatch, useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport type { UniswapInterfaceMulticall } from './abi/types'\nimport { CHUNK_GAS_LIMIT, DEFAULT_CALL_GAS_REQUIRED } from './constants'\nimport type { MulticallContext } from './context'\nimport type { MulticallActions } from './slice'\nimport type { Call, MulticallState, WithMulticallState, ListenerOptions } from './types'\nimport { parseCallKey, toCallKey } from './utils/callKeys'\nimport chunkCalls from './utils/chunkCalls'\nimport { retry, RetryableError } from './utils/retry'\nimport useDebounce from './utils/useDebounce'\n\nconst FETCH_RETRY_CONFIG = {\n  n: Infinity,\n  minWait: 1000,\n  maxWait: 2500,\n}\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicall multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param blockNumber block number passed as the block tag in the eth_call\n */\nasync function fetchChunk(\n  multicall: UniswapInterfaceMulticall,\n  chunk: Call[],\n  blockNumber: number,\n  isDebug?: boolean\n): Promise<{ success: boolean; returnData: string }[]> {\n  console.debug('Fetching chunk', chunk, blockNumber)\n  try {\n    const { returnData } = await multicall.callStatic.multicall(\n      chunk.map((obj) => ({\n        target: obj.address,\n        callData: obj.callData,\n        gasLimit: obj.gasRequired ?? DEFAULT_CALL_GAS_REQUIRED,\n      })),\n      // we aren't passing through the block gas limit we used to create the chunk, because it causes a problem with the integ tests\n      { blockTag: blockNumber }\n    )\n\n    if (isDebug) {\n      returnData.forEach(({ gasUsed, returnData, success }, i) => {\n        if (\n          !success &&\n          returnData.length === 2 &&\n          gasUsed.gte(Math.floor((chunk[i].gasRequired ?? DEFAULT_CALL_GAS_REQUIRED) * 0.95))\n        ) {\n          console.warn(\n            `A call failed due to requiring ${gasUsed.toString()} vs. allowed ${\n              chunk[i].gasRequired ?? DEFAULT_CALL_GAS_REQUIRED\n            }`,\n            chunk[i]\n          )\n        }\n      })\n    }\n\n    return returnData\n  } catch (e) {\n    const error = e as any\n    if (error.code === -32000 || error.message?.indexOf('header not found') !== -1) {\n      throw new RetryableError(`header not found for block number ${blockNumber}`)\n    } else if (error.code === -32603 || error.message?.indexOf('execution ran out of gas') !== -1) {\n      if (chunk.length > 1) {\n        if (process.env.NODE_ENV === 'development') {\n          console.debug('Splitting a chunk in 2', chunk)\n        }\n        const half = Math.floor(chunk.length / 2)\n        const [c0, c1] = await Promise.all([\n          fetchChunk(multicall, chunk.slice(0, half), blockNumber),\n          fetchChunk(multicall, chunk.slice(half, chunk.length), blockNumber),\n        ])\n        return c0.concat(c1)\n      }\n    }\n    console.error('Failed to fetch chunk', error)\n    throw error\n  }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: MulticallState['callListeners'],\n  chainId?: number\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param latestBlockNumber the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: MulticallState['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  latestBlockNumber: number | undefined\n): string[] {\n  if (!chainId || !latestBlockNumber) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = latestBlockNumber - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\ninterface FetchChunkContext {\n  actions: MulticallActions\n  dispatch: Dispatch<any>\n  chainId: number\n  latestBlockNumber: number\n  isDebug?: boolean\n}\n\nfunction onFetchChunkSuccess(\n  context: FetchChunkContext,\n  chunk: Call[],\n  result: Array<{ success: boolean; returnData: string }>\n) {\n  const { actions, dispatch, chainId, latestBlockNumber, isDebug } = context\n\n  // split the returned slice into errors and results\n  const { erroredCalls, results } = chunk.reduce<{\n    erroredCalls: Call[]\n    results: { [callKey: string]: string | null }\n  }>(\n    (memo, call, i) => {\n      if (result[i].success) {\n        memo.results[toCallKey(call)] = result[i].returnData ?? null\n      } else {\n        memo.erroredCalls.push(call)\n      }\n      return memo\n    },\n    { erroredCalls: [], results: {} }\n  )\n\n  // dispatch any new results\n  if (Object.keys(results).length > 0)\n    dispatch(\n      actions.updateMulticallResults({\n        chainId,\n        results,\n        blockNumber: latestBlockNumber,\n      })\n    )\n\n  // dispatch any errored calls\n  if (erroredCalls.length > 0) {\n    if (isDebug) {\n      result.forEach((returnData, ix) => {\n        if (!returnData.success) {\n          console.debug('Call failed', chunk[ix], returnData)\n        }\n      })\n    } else {\n      console.debug('Calls errored in fetch', erroredCalls)\n    }\n    dispatch(\n      actions.errorFetchingMulticallResults({\n        calls: erroredCalls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      })\n    )\n  }\n}\n\nfunction onFetchChunkFailure(context: FetchChunkContext, chunk: Call[], error: any) {\n  const { actions, dispatch, chainId, latestBlockNumber } = context\n\n  if (error.isCancelledError) {\n    console.debug('Cancelled fetch for blockNumber', latestBlockNumber, chunk, chainId)\n    return\n  }\n  console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n  dispatch(\n    actions.errorFetchingMulticallResults({\n      calls: chunk,\n      chainId,\n      fetchingBlockNumber: latestBlockNumber,\n    })\n  )\n}\n\nexport interface UpdaterProps {\n  context: MulticallContext\n  chainId: number | undefined // For now, one updater is required for each chainId to be watched\n  latestBlockNumber: number | undefined\n  contract: UniswapInterfaceMulticall\n  isDebug?: boolean\n  listenerOptions?: ListenerOptions\n}\n\nfunction Updater(props: UpdaterProps): null {\n  const { context, chainId, latestBlockNumber, contract, isDebug, listenerOptions } = props\n  const { actions, reducerPath } = context\n  const dispatch = useDispatch()\n\n  // set user configured listenerOptions in state for given chain ID.\n  if (chainId && listenerOptions) dispatch(actions.updateListenerOptions({ chainId, listenerOptions }))\n  const state = useSelector((state: WithMulticallState) => state[reducerPath])\n\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const serializedOutdatedCallKeys = useMemo(() => {\n    const outdatedCallKeys = outdatedListeningKeys(state.callResults, listeningKeys, chainId, latestBlockNumber)\n    return JSON.stringify(outdatedCallKeys.sort())\n  }, [chainId, state.callResults, listeningKeys, latestBlockNumber])\n\n  useEffect(() => {\n    if (!latestBlockNumber || !chainId || !contract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkCalls(calls, CHUNK_GAS_LIMIT)\n\n    if (cancellations.current && cancellations.current.blockNumber !== latestBlockNumber) {\n      cancellations.current.cancellations.forEach((c) => c())\n    }\n\n    dispatch(\n      actions.fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: latestBlockNumber,\n      })\n    )\n\n    const fetchChunkContext = {\n      actions,\n      dispatch,\n      chainId,\n      latestBlockNumber,\n      isDebug,\n    }\n    // Execute fetches and gather cancellation callbacks\n    const newCancellations = chunkedCalls.map((chunk) => {\n      const { cancel, promise } = retry(\n        () => fetchChunk(contract, chunk, latestBlockNumber, isDebug),\n        FETCH_RETRY_CONFIG\n      )\n      promise\n        .then((result) => onFetchChunkSuccess(fetchChunkContext, chunk, result))\n        .catch((error) => onFetchChunkFailure(fetchChunkContext, chunk, error))\n      return cancel\n    })\n\n    cancellations.current = {\n      blockNumber: latestBlockNumber,\n      cancellations: newCancellations,\n    }\n  }, [actions, chainId, contract, dispatch, serializedOutdatedCallKeys, latestBlockNumber, isDebug])\n\n  return null\n}\n\nexport function createUpdater(context: MulticallContext) {\n  const UpdaterContextBound = (props: Omit<UpdaterProps, 'context'>) => {\n    return <Updater context={context} {...props} />\n  }\n  return UpdaterContextBound\n}\n","import type { MulticallContext } from './context'\nimport {\n  useMultiChainMultiContractSingleData as _useMultiChainMultiContractSingleData,\n  useMultiChainSingleContractSingleData as _useMultiChainSingleContractSingleData,\n  useMultipleContractSingleData as _useMultipleContractSingleData,\n  useSingleCallResult as _useSingleCallResult,\n  useSingleContractMultipleData as _useSingleContractMultipleData,\n  useSingleContractWithCallData as _useSingleContractWithCallData,\n} from './hooks'\nimport { createMulticallSlice } from './slice'\nimport { createUpdater } from './updater'\n\ntype RemoveFirstFromTuple<T extends any[]> = T['length'] extends 0\n  ? undefined\n  : ((...b: T) => void) extends (a: any, ...b: infer I) => void\n  ? I\n  : []\ntype ParamsWithoutContext<T extends (...args: any) => any> = RemoveFirstFromTuple<Parameters<T>>\n\nexport interface MulticallOptions {\n  reducerPath?: string\n  // More options can be added here as multicall's capabilities are extended\n}\n\n// Inspired by RTK Query's createApi\nexport function createMulticall(options?: MulticallOptions) {\n  const reducerPath = options?.reducerPath ?? 'multicall'\n  const slice = createMulticallSlice(reducerPath)\n  const { actions, reducer } = slice\n  const context: MulticallContext = { reducerPath, actions }\n\n  const useMultipleContractSingleData = (...args: ParamsWithoutContext<typeof _useMultipleContractSingleData>) =>\n    _useMultipleContractSingleData(context, ...args)\n  const useSingleContractMultipleData = (...args: ParamsWithoutContext<typeof _useSingleContractMultipleData>) =>\n    _useSingleContractMultipleData(context, ...args)\n  const useSingleContractWithCallData = (...args: ParamsWithoutContext<typeof _useSingleContractWithCallData>) =>\n    _useSingleContractWithCallData(context, ...args)\n  const useSingleCallResult = (...args: ParamsWithoutContext<typeof _useSingleCallResult>) =>\n    _useSingleCallResult(context, ...args)\n  const useMultiChainMultiContractSingleData = (\n    ...args: ParamsWithoutContext<typeof _useMultiChainMultiContractSingleData>\n  ) => _useMultiChainMultiContractSingleData(context, ...args)\n  const useMultiChainSingleContractSingleData = (\n    ...args: ParamsWithoutContext<typeof _useMultiChainSingleContractSingleData>\n  ) => _useMultiChainSingleContractSingleData(context, ...args)\n  const hooks = {\n    useMultipleContractSingleData,\n    useSingleContractMultipleData,\n    useSingleContractWithCallData,\n    useSingleCallResult,\n    useMultiChainMultiContractSingleData,\n    useMultiChainSingleContractSingleData,\n  }\n\n  const Updater = createUpdater(context)\n\n  return {\n    reducerPath,\n    reducer,\n    actions,\n    hooks,\n    Updater,\n  }\n}\n"],"names":["DEFAULT_BLOCKS_PER_FETCH","DEFAULT_CALL_GAS_REQUIRED","DEFAULT_CHUNK_GAS_REQUIRED","CHUNK_GAS_LIMIT","CONSERVATIVE_BLOCK_GAS_LIMIT","INVALID_RESULT","valid","blockNumber","undefined","data","NEVER_RELOAD","blocksPerFetch","Infinity","INVALID_CALL_STATE","result","loading","syncing","error","LOADING_CALL_STATE","toCallKey","call","key","address","callData","gasRequired","Number","isSafeInteger","Error","parseCallKey","callKey","pcs","split","includes","length","parseInt","callsToCallKeys","calls","filter","c","Boolean","map","sort","callKeysToCalls","callKeys","toCallState","callResult","contractInterface","fragment","latestBlockNumber","success","decodeFunctionResult","console","debug","isMethodArg","x","BigNumber","isBigNumber","indexOf","isValidMethodArgs","Array","isArray","every","xi","useCallsDataSubscription","context","chainId","listenerOptions","reducerPath","actions","callResults","useSelector","state","defaultListenerOptions","dispatch","useDispatch","serializedCallKeys","useMemo","JSON","stringify","useEffect","parse","blocksPerFetchFromState","blocksPerFetchForChain","addMulticallListeners","options","removeMulticallListeners","stableResults","useRef","results","i","push","areCallResultsEqual","current","a","b","_","useMultichainCallsDataSubscription","chainToCalls","sortedChainIds","getChainIds","chainCallKeysTuple","chainCallKeysTuples","batch","reduce","useSingleContractMultipleData","contract","methodName","callInputs","getFunction","callDatas","callInput","encodeFunctionData","useMultipleContractSingleData","addresses","useCallData","useSingleCallResult","inputs","useSingleContractWithCallData","substring","useMultiChainMultiContractSingleData","chainToBlockNumber","chainToAddresses","chainIdToResults","combinedResults","useMultiChainSingleContractSingleData","chainToAddress","chainIdToAddresses","multiContractResults","chainIdMap","Object","keys","initialState","createMulticallSlice","createSlice","name","reducers","action","payload","listeners","callListeners","forEach","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","updateListenerOptions","chunkCalls","chunkGasLimit","defaultGasRequired","c1","c2","bins","gas","bin","cumulativeGasLimit","wait","ms","Promise","resolve","setTimeout","waitRandom","min","max","Math","round","random","CancelledError","RetryableError","retry","fn","n","minWait","maxWait","completed","rejectCancelled","promise","reject","isRetryableError","cancel","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","handler","clearTimeout","FETCH_RETRY_CONFIG","fetchChunk","multicall","chunk","isDebug","callStatic","obj","target","gasLimit","blockTag","returnData","gasUsed","gte","floor","warn","toString","code","message","half","all","slice","c0","concat","activeListeningKeys","allListeners","memo","keyListeners","previousMin","outdatedListeningKeys","listeningKeys","minDataBlockNumber","onFetchChunkSuccess","erroredCalls","ix","onFetchChunkFailure","isCancelledError","Updater","props","debouncedListeners","cancellations","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","fetchChunkContext","newCancellations","then","createUpdater","UpdaterContextBound","React","createMulticall","reducer","args","_useMultipleContractSingleData","_useSingleContractMultipleData","_useSingleContractWithCallData","_useSingleCallResult","_useMultiChainMultiContractSingleData","_useMultiChainSingleContractSingleData","hooks"],"mappings":";;;;;;;;;;;;IAEaA,wBAAwB,GAAG;IAC3BC,yBAAyB,GAAG;IAC5BC,0BAA0B,GAAG;IAC7BC,eAAe,GAAG;IAClBC,4BAA4B,GAAG;AAE5C;;IACaC,cAAc,GAAe;AAAEC,EAAAA,KAAK,EAAE,KAAT;AAAgBC,EAAAA,WAAW,EAAEC,SAA7B;AAAwCC,EAAAA,IAAI,EAAED;AAA9C;IAC7BE,YAAY,GAAoB;AAC3CC,EAAAA,cAAc,EAAEC;AAD2B;IAIhCC,kBAAkB,GAAc;AAC3CP,EAAAA,KAAK,EAAE,KADoC;AAE3CQ,EAAAA,MAAM,EAAEN,SAFmC;AAG3CO,EAAAA,OAAO,EAAE,KAHkC;AAI3CC,EAAAA,OAAO,EAAE,KAJkC;AAK3CC,EAAAA,KAAK,EAAE;AALoC;IAOhCC,kBAAkB,GAAc;AAC3CZ,EAAAA,KAAK,EAAE,IADoC;AAE3CQ,EAAAA,MAAM,EAAEN,SAFmC;AAG3CO,EAAAA,OAAO,EAAE,IAHkC;AAI3CC,EAAAA,OAAO,EAAE,IAJkC;AAK3CC,EAAAA,KAAK,EAAE;AALoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SCnB7BE,UAAUC;AACxB,MAAIC,GAAG,GAAMD,IAAI,CAACE,OAAX,SAAsBF,IAAI,CAACG,QAAlC;;AACA,MAAIH,IAAI,CAACI,WAAT,EAAsB;AACpB,QAAI,CAACC,MAAM,CAACC,aAAP,CAAqBN,IAAI,CAACI,WAA1B,CAAL,EAA6C;AAC3C,YAAM,IAAIG,KAAJ,sBAA6BP,IAAI,CAACI,WAAlC,CAAN;AACD;;AACDH,IAAAA,GAAG,UAAQD,IAAI,CAACI,WAAhB;AACD;;AACD,SAAOH,GAAP;AACD;AAED,SAAgBO,aAAaC;AAC3B,MAAMC,GAAG,GAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAZ;;AACA,MAAI,CAAC,CAAC,CAAD,EAAI,CAAJ,EAAOC,QAAP,CAAgBF,GAAG,CAACG,MAApB,CAAL,EAAkC;AAChC,UAAM,IAAIN,KAAJ,wBAA+BE,OAA/B,CAAN;AACD;;AACD;AACEP,IAAAA,OAAO,EAAEQ,GAAG,CAAC,CAAD,CADd;AAEEP,IAAAA,QAAQ,EAAEO,GAAG,CAAC,CAAD;AAFf,KAGMA,GAAG,CAAC,CAAD,CAAH,GAAS;AAAEN,IAAAA,WAAW,EAAEC,MAAM,CAACS,QAAP,CAAgBJ,GAAG,CAAC,CAAD,CAAnB;AAAf,GAAT,GAAoD,EAH1D;AAKD;AAED,SAAgBK,gBAAgBC;;;AAC9B,kCACEA,KADF,qCACEA,KAAK,CACDC,MADJ,CACW,UAACC,CAAD;AAAA,WAAkBC,OAAO,CAACD,CAAD,CAAzB;AAAA,GADX,CADF,0CACE,cAEIE,GAFJ,CAEQrB,SAFR,CADF,qBACE,kBAGIsB,IAHJ,EADF,oCAIgB,EAJhB;AAMD;AAED,SAAgBC,gBAAgBC;AAC9B,MAAI,EAACA,QAAD,YAACA,QAAQ,CAAEV,MAAX,CAAJ,EAAuB,OAAO,IAAP;AACvB,SAAOU,QAAQ,CAACH,GAAT,CAAa,UAACnB,GAAD;AAAA,WAASO,YAAY,CAACP,GAAD,CAArB;AAAA,GAAb,CAAP;AACD;;SCjCeuB,YACdC,YACAC,mBACAC,UACAC;AAEA,MAAI,CAACH,UAAL,EAAiB,OAAOhC,kBAAP;AACjB,MAAQP,KAAR,GAAqCuC,UAArC,CAAQvC,KAAR;AAAA,MAAeG,IAAf,GAAqCoC,UAArC,CAAepC,IAAf;AAAA,MAAqBF,WAArB,GAAqCsC,UAArC,CAAqBtC,WAArB;AACA,MAAI,CAACD,KAAL,EAAY,OAAOO,kBAAP;AACZ,MAAIP,KAAK,IAAI,CAACC,WAAd,EAA2B,OAAOW,kBAAP;AAC3B,MAAI,CAAC4B,iBAAD,IAAsB,CAACC,QAAvB,IAAmC,CAACC,iBAAxC,EAA2D,OAAO9B,kBAAP;AAC3D,MAAM+B,OAAO,GAAGxC,IAAI,IAAIA,IAAI,CAACwB,MAAL,GAAc,CAAtC;AACA,MAAMjB,OAAO,GAAG,CAACT,WAAD,WAACA,WAAD,GAAgB,CAAhB,IAAqByC,iBAArC;AACA,MAAIlC,MAAM,GAAgCN,SAA1C;;AACA,MAAIyC,OAAO,IAAIxC,IAAf,EAAqB;AACnB,QAAI;AACFK,MAAAA,MAAM,GAAGgC,iBAAiB,CAACI,oBAAlB,CAAuCH,QAAvC,EAAiDtC,IAAjD,CAAT;AACD,KAFD,CAEE,OAAOQ,KAAP,EAAc;AACdkC,MAAAA,OAAO,CAACC,KAAR,CAAc,4BAAd,EAA4CL,QAA5C,EAAsDtC,IAAtD;AACA,aAAO;AACLH,QAAAA,KAAK,EAAE,IADF;AAELS,QAAAA,OAAO,EAAE,KAFJ;AAGLE,QAAAA,KAAK,EAAE,IAHF;AAILD,QAAAA,OAAO,EAAPA,OAJK;AAKLF,QAAAA,MAAM,EAANA;AALK,OAAP;AAOD;AACF;;AACD,SAAO;AACLR,IAAAA,KAAK,EAAE,IADF;AAELS,IAAAA,OAAO,EAAE,KAFJ;AAGLC,IAAAA,OAAO,EAAPA,OAHK;AAILF,IAAAA,MAAM,EAANA,MAJK;AAKLG,IAAAA,KAAK,EAAE,CAACgC;AALH,GAAP;AAOD;;SClCeI,YAAYC;AAC1B,SAAOC,mBAAS,CAACC,WAAV,CAAsBF,CAAtB,KAA4B,CAAC,QAAD,EAAW,QAAX,EAAqBG,OAArB,CAA6B,OAAOH,CAApC,MAA2C,CAAC,CAA/E;AACD;AAED,SAAgBI,kBAAkBJ;AAChC,SACEA,CAAC,KAAK9C,SAAN,IACCmD,KAAK,CAACC,OAAN,CAAcN,CAAd,KAAoBA,CAAC,CAACO,KAAF,CAAQ,UAACC,EAAD;AAAA,WAAQT,WAAW,CAACS,EAAD,CAAX,IAAoBH,KAAK,CAACC,OAAN,CAAcE,EAAd,KAAqBA,EAAE,CAACD,KAAH,CAASR,WAAT,CAAjD;AAAA,GAAR,CAFvB;AAID;;SCAeU,yBACdC,SACAC,SACA7B,OACA8B;AAEA,MAAQC,WAAR,GAAiCH,OAAjC,CAAQG,WAAR;AAAA,MAAqBC,OAArB,GAAiCJ,OAAjC,CAAqBI,OAArB;AACA,MAAMC,WAAW,GAAGC,sBAAW,CAAC,UAACC,KAAD;AAAA,WAA+BA,KAAK,CAACJ,WAAD,CAAL,CAAmBE,WAAlD;AAAA,GAAD,CAA/B;AACA,MAAMG,sBAAsB,GAAGF,sBAAW,CAAC,UAACC,KAAD;AAAA,WAA+BA,KAAK,CAACJ,WAAD,CAAL,CAAmBD,eAAlD;AAAA,GAAD,CAA1C;AACA,MAAMO,QAAQ,GAAGC,sBAAW,EAA5B;AACA,MAAMC,kBAAkB,GAAWC,aAAO,CAAC;AAAA,WAAMC,IAAI,CAACC,SAAL,CAAe3C,eAAe,CAACC,KAAD,CAA9B,CAAN;AAAA,GAAD,EAA+C,CAACA,KAAD,CAA/C,CAA1C;;AAGA2C,EAAAA,eAAS,CAAC;;;AACR,QAAMpC,QAAQ,GAAakC,IAAI,CAACG,KAAL,CAAWL,kBAAX,CAA3B;AACA,QAAMvC,KAAK,GAAGM,eAAe,CAACC,QAAD,CAA7B;AACA,QAAI,CAACsB,OAAD,IAAY,CAAC7B,KAAjB,EAAwB;AACxB,QAAM6C,uBAAuB,eAAG,CAACT,sBAAD,WAACA,sBAAD,GAA2B,EAA3B,EAA+BP,OAA/B,CAAH,qBAAG,SAAyCtD,cAAzE;AACA,QAAMuE,sBAAsB,oCAC1BhB,eAD0B,oBAC1BA,eAAe,CAAEvD,cADS,oCACSsE,uBADT,mBACoCjF,wBADhE;AAGAyE,IAAAA,QAAQ,CACNL,OAAO,CAACe,qBAAR,CAA8B;AAC5BlB,MAAAA,OAAO,EAAPA,OAD4B;AAE5B7B,MAAAA,KAAK,EAALA,KAF4B;AAG5BgD,MAAAA,OAAO,EAAE;AAAEzE,QAAAA,cAAc,EAAEuE;AAAlB;AAHmB,KAA9B,CADM,CAAR;AAQA,WAAO;AACLT,MAAAA,QAAQ,CACNL,OAAO,CAACiB,wBAAR,CAAiC;AAC/BpB,QAAAA,OAAO,EAAPA,OAD+B;AAE/B7B,QAAAA,KAAK,EAALA,KAF+B;AAG/BgD,QAAAA,OAAO,EAAE;AAAEzE,UAAAA,cAAc,EAAEuE;AAAlB;AAHsB,OAAjC,CADM,CAAR;AAOD,KARD;AASD,GAzBQ,EAyBN,CAACd,OAAD,EAAUH,OAAV,EAAmBQ,QAAnB,EAA6BP,eAA7B,EAA8CS,kBAA9C,EAAkEH,sBAAlE,CAzBM,CAAT;AA4BA;;AACA,MAAMc,aAAa,GAAGC,YAAM,CAAe,EAAf,CAA5B;AACA,SAAOX,aAAO,CAAC;AACb;AACA;AACA,QAAIY,OAAO,GAAiB,EAA5B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGrD,KAAK,CAACH,MAA1B,EAAkC,EAAEwD,CAApC,EAAuC;AAAA;;AACrC,UAAMrE,IAAI,GAAGgB,KAAK,CAACqD,CAAD,CAAlB;;AACA,UAAI,CAACxB,OAAD,IAAY,CAAC7C,IAAjB,EAAuB;AACrBoE,QAAAA,OAAO,CAACE,IAAR,CAAarF,cAAb;AACA;AACD;;AACD,UAAMS,MAAM,2BAAGuD,WAAW,CAACJ,OAAD,CAAd,qBAAG,qBAAuB9C,SAAS,CAACC,IAAD,CAAhC,CAAf;AACA,UAAMX,IAAI,GAAGK,MAAM,QAAN,IAAAA,MAAM,CAAEL,IAAR,IAAgBK,MAAM,CAACL,IAAP,KAAgB,IAAhC,GAAuCK,MAAM,CAACL,IAA9C,GAAqDD,SAAlE;AACAgF,MAAAA,OAAO,CAACE,IAAR,CAAa;AAAEpF,QAAAA,KAAK,EAAE,IAAT;AAAeG,QAAAA,IAAI,EAAJA,IAAf;AAAqBF,QAAAA,WAAW,EAAEO,MAAF,oBAAEA,MAAM,CAAEP;AAA1C,OAAb;AACD;;AAED,QAAI,CAACoF,mBAAmB,CAACH,OAAD,EAAUF,aAAa,CAACM,OAAxB,CAAxB,EAA0D;AACxDN,MAAAA,aAAa,CAACM,OAAd,GAAwBJ,OAAxB;AACD;;AACD,WAAOF,aAAa,CAACM,OAArB;AACD,GAnBa,EAmBX,CAACvB,WAAD,EAAcjC,KAAd,EAAqB6B,OAArB,CAnBW,CAAd;AAoBD;;AAED,SAAS0B,mBAAT,CAA6BE,CAA7B,EAA8CC,CAA9C;AACE,MAAID,CAAC,CAAC5D,MAAF,KAAa6D,CAAC,CAAC7D,MAAnB,EAA2B,OAAO,KAAP;AAC3B,SAAO4D,CAAC,CAAChC,KAAF,CACL,UAACkC,CAAD,EAAIN,CAAJ;AAAA,WAAUI,CAAC,CAACJ,CAAD,CAAD,CAAKnF,KAAL,KAAewF,CAAC,CAACL,CAAD,CAAD,CAAKnF,KAApB,IAA6BuF,CAAC,CAACJ,CAAD,CAAD,CAAKhF,IAAL,KAAcqF,CAAC,CAACL,CAAD,CAAD,CAAKhF,IAAhD,IAAwDoF,CAAC,CAACJ,CAAD,CAAD,CAAKlF,WAAL,KAAqBuF,CAAC,CAACL,CAAD,CAAD,CAAKlF,WAA5F;AAAA,GADK,CAAP;AAGD;AAGD;;;AACA,SAASyF,kCAAT,CACEhC,OADF,EAEEiC,YAFF,EAGE/B,eAHF;AAKE,MAAQC,WAAR,GAAiCH,OAAjC,CAAQG,WAAR;AAAA,MAAqBC,OAArB,GAAiCJ,OAAjC,CAAqBI,OAArB;AACA,MAAMC,WAAW,GAAGC,sBAAW,CAAC,UAACC,KAAD;AAAA,WAA+BA,KAAK,CAACJ,WAAD,CAAL,CAAmBE,WAAlD;AAAA,GAAD,CAA/B;AACA,MAAMG,sBAAsB,GAAGF,sBAAW,CAAC,UAACC,KAAD;AAAA,WAA+BA,KAAK,CAACJ,WAAD,CAAL,CAAmBD,eAAlD;AAAA,GAAD,CAA1C;AACA,MAAMO,QAAQ,GAAGC,sBAAW,EAA5B;AAEA,MAAMC,kBAAkB,GAAWC,aAAO,CAAC;AACzC,QAAMsB,cAAc,GAAGC,WAAW,CAACF,YAAD,CAAX,CAA0BxD,IAA1B,EAAvB;AACA,QAAM2D,kBAAkB,GAAGF,cAAc,CAAC1D,GAAf,CAAmB,UAACyB,OAAD;AAC5C,UAAM7B,KAAK,GAAG6D,YAAY,CAAChC,OAAD,CAA1B;AACA,UAAMtB,QAAQ,GAAGR,eAAe,CAACC,KAAD,CAAhC;;AAEA,aAAO,CAAC6B,OAAD,EAAUtB,QAAV,CAAP;AACD,KAL0B,CAA3B;AAMA,WAAOkC,IAAI,CAACC,SAAL,CAAesB,kBAAf,CAAP;AACD,GATyC,EASvC,CAACH,YAAD,CATuC,CAA1C;AAWAlB,EAAAA,eAAS,CAAC;AACR,QAAMsB,mBAAmB,GAA8BxB,IAAI,CAACG,KAAL,CAAWL,kBAAX,CAAvD;AACA,QAAI,EAAC0B,mBAAD,YAACA,mBAAmB,CAAEpE,MAAtB,CAAJ,EAAkC;AAElCqE,IAAAA,gBAAK,CAAC;AACJ,2DAAkCD,mBAAlC,wCAAuD;AAAA;;AAAA;AAAA,YAA3CpC,OAA2C;AAAA,YAAlCtB,QAAkC;AACrD,YAAMP,KAAK,GAAGM,eAAe,CAACC,QAAD,CAA7B;AACA,YAAI,EAACP,KAAD,YAACA,KAAK,CAAEH,MAAR,CAAJ,EAAoB;AACpB,YAAMgD,uBAAuB,gBAAG,CAACT,sBAAD,WAACA,sBAAD,GAA2B,EAA3B,EAA+BP,OAA/B,CAAH,qBAAG,UAAyCtD,cAAzE;AACA,YAAMuE,sBAAsB,sCAC1BhB,eAD0B,oBAC1BA,eAAe,CAAEvD,cADS,qCACSsE,uBADT,oBACoCjF,wBADhE;AAGAyE,QAAAA,QAAQ,CACNL,OAAO,CAACe,qBAAR,CAA8B;AAC5BlB,UAAAA,OAAO,EAAPA,OAD4B;AAE5B7B,UAAAA,KAAK,EAALA,KAF4B;AAG5BgD,UAAAA,OAAO,EAAE;AAAEzE,YAAAA,cAAc,EAAEuE;AAAlB;AAHmB,SAA9B,CADM,CAAR;AAOD;AACF,KAhBI,CAAL;AAkBA,WAAO;AACLoB,MAAAA,gBAAK,CAAC;AACJ,8DAAkCD,mBAAlC,2CAAuD;AAAA;;AAAA;AAAA,cAA3CpC,OAA2C;AAAA,cAAlCtB,QAAkC;AACrD,cAAMP,KAAK,GAAGM,eAAe,CAACC,QAAD,CAA7B;AACA,cAAI,EAACP,KAAD,YAACA,KAAK,CAAEH,MAAR,CAAJ,EAAoB;AACpB,cAAMgD,uBAAuB,gBAAG,CAACT,sBAAD,WAACA,sBAAD,GAA2B,EAA3B,EAA+BP,OAA/B,CAAH,qBAAG,UAAyCtD,cAAzE;AACA,cAAMuE,sBAAsB,sCAC1BhB,eAD0B,oBAC1BA,eAAe,CAAEvD,cADS,qCACSsE,uBADT,oBACoCjF,wBADhE;AAEAyE,UAAAA,QAAQ,CACNL,OAAO,CAACiB,wBAAR,CAAiC;AAC/BpB,YAAAA,OAAO,EAAPA,OAD+B;AAE/B7B,YAAAA,KAAK,EAALA,KAF+B;AAG/BgD,YAAAA,OAAO,EAAE;AAAEzE,cAAAA,cAAc,EAAEuE;AAAlB;AAHsB,WAAjC,CADM,CAAR;AAOD;AACF,OAfI,CAAL;AAgBD,KAjBD;AAkBD,GAxCQ,EAwCN,CAACd,OAAD,EAAUK,QAAV,EAAoBP,eAApB,EAAqCS,kBAArC,EAAyDH,sBAAzD,CAxCM,CAAT;AA0CA,SAAOI,aAAO,CACZ;AAAA,WACEuB,WAAW,CAACF,YAAD,CAAX,CAA0BM,MAA1B,CAAiC,UAACzF,MAAD,EAASmD,OAAT;AAC/B,UAAM7B,KAAK,GAAG6D,YAAY,CAAChC,OAAD,CAA1B;AACAnD,MAAAA,MAAM,CAACmD,OAAD,CAAN,GAAkB7B,KAAK,CAACI,GAAN,CAAsB,UAACpB,IAAD;;;AACtC,YAAI,CAAC6C,OAAD,IAAY,CAAC7C,IAAjB,EAAuB,OAAOf,cAAP;AACvB,YAAMS,MAAM,4BAAGuD,WAAW,CAACJ,OAAD,CAAd,qBAAG,sBAAuB9C,SAAS,CAACC,IAAD,CAAhC,CAAf;AACA,YAAMX,IAAI,GAAGK,MAAM,QAAN,IAAAA,MAAM,CAAEL,IAAR,IAAgBK,MAAM,CAACL,IAAP,KAAgB,IAAhC,GAAuCK,MAAM,CAACL,IAA9C,GAAqDD,SAAlE;AACA,eAAO;AAAEF,UAAAA,KAAK,EAAE,IAAT;AAAeG,UAAAA,IAAI,EAAJA,IAAf;AAAqBF,UAAAA,WAAW,EAAEO,MAAF,oBAAEA,MAAM,CAAEP;AAA1C,SAAP;AACD,OALiB,CAAlB;AAMA,aAAOO,MAAP;AACD,KATD,EASG,EATH,CADF;AAAA,GADY,EAYZ,CAACuD,WAAD,EAAc4B,YAAd,CAZY,CAAd;AAcD;;;AAGD,SAAgBO,8BACdxC,SACAC,SACAjB,mBACAyD,UACAC,YACAC,YACAvB;AAEA,cAAwBA,OAAxB,WAAwBA,OAAxB,GAAmC,EAAnC;AAAA,MAAQ5D,WAAR,SAAQA,WAAR;;;AAGA,MAAMuB,QAAQ,GAAG6B,aAAO,CAAC;AAAA;;AAAA,WAAM6B,QAAN,2CAAMA,QAAQ,aAAd,qBAAM,oBAAqBG,WAArB,CAAiCF,UAAjC,CAAN;AAAA,GAAD,EAAqD,CAACD,QAAD,EAAWC,UAAX,CAArD,CAAxB;;AAGA,MAAMG,SAAS,GAAGjC,aAAO,CAAC;AACxB,QAAI,CAAC6B,QAAD,IAAa,CAAC1D,QAAlB,EAA4B,OAAO,EAAP;AAC5B,WAAO4D,UAAU,CAACnE,GAAX,CAAmC,UAACsE,SAAD;AAAA,aACxCpD,iBAAiB,CAACoD,SAAD,CAAjB,GAA+BL,QAAQ,aAAR,CAAmBM,kBAAnB,CAAsChE,QAAtC,EAAgD+D,SAAhD,CAA/B,GAA4FtG,SADpD;AAAA,KAAnC,CAAP;AAGD,GALwB,EAKtB,CAACmG,UAAD,EAAaF,QAAb,EAAuB1D,QAAvB,CALsB,CAAzB;;AAQA,MAAMX,KAAK,GAAGwC,aAAO,CAAC;AACpB,QAAI,CAAC6B,QAAL,EAAe,OAAO,EAAP;AACf,WAAOI,SAAS,CAACrE,GAAV,CAAgC,UAACjB,QAAD;AACrC,UAAI,CAACA,QAAL,EAAe,OAAOf,SAAP;AACf,aAAO;AACLc,QAAAA,OAAO,EAAEmF,QAAQ,CAACnF,OADb;AAELC,QAAAA,QAAQ,EAARA,QAFK;AAGLC,QAAAA,WAAW,EAAXA;AAHK,OAAP;AAKD,KAPM,CAAP;AAQD,GAVoB,EAUlB,CAACiF,QAAD,EAAWI,SAAX,EAAsBrF,WAAtB,CAVkB,CAArB;;AAaA,MAAMgE,OAAO,GAAGzB,wBAAwB,CAACC,OAAD,EAAUC,OAAV,EAAmB7B,KAAnB,EAA0BgD,OAA1B,CAAxC;AAEA,SAAOR,aAAO,CAAC;AACb,WAAOY,OAAO,CAAChD,GAAR,CAAY,UAAC1B,MAAD;AAAA,aAAY8B,WAAW,CAAC9B,MAAD,EAAS2F,QAAT,oBAASA,QAAQ,aAAjB,EAA8B1D,QAA9B,EAAwCC,iBAAxC,CAAvB;AAAA,KAAZ,CAAP;AACD,GAFa,EAEX,CAACwC,OAAD,EAAUiB,QAAV,EAAoB1D,QAApB,EAA8BC,iBAA9B,CAFW,CAAd;AAGD;AAED,SAAgBgE,8BACdhD,SACAC,SACAjB,mBACAiE,WACAnE,mBACA4D,YACAC,YACAvB;AAEA,cAAwBA,OAAxB,WAAwBA,OAAxB,GAAmC,EAAnC;AAAA,MAAQ5D,WAAR,SAAQA,WAAR;;AAEA,qBAA+B0F,WAAW,CAACR,UAAD,EAAa5D,iBAAb,EAAgC6D,UAAhC,CAA1C;AAAA,MAAQ5D,QAAR,gBAAQA,QAAR;AAAA,MAAkBxB,QAAlB,gBAAkBA,QAAlB;;;AAGA,MAAMa,KAAK,GAAGwC,aAAO,CAAC;AACpB,QAAI,CAACrD,QAAL,EAAe,OAAO,EAAP;AACf,WAAO0F,SAAS,CAACzE,GAAV,CAAgC,UAAClB,OAAD;AACrC,UAAI,CAACA,OAAL,EAAc,OAAOd,SAAP;AACd,aAAO;AAAEc,QAAAA,OAAO,EAAPA,OAAF;AAAWC,QAAAA,QAAQ,EAARA,QAAX;AAAqBC,QAAAA,WAAW,EAAXA;AAArB,OAAP;AACD,KAHM,CAAP;AAID,GANoB,EAMlB,CAACyF,SAAD,EAAY1F,QAAZ,EAAsBC,WAAtB,CANkB,CAArB;;AASA,MAAMgE,OAAO,GAAGzB,wBAAwB,CAACC,OAAD,EAAUC,OAAV,EAAmB7B,KAAnB,EAA0BgD,OAA1B,CAAxC;AAEA,SAAOR,aAAO,CAAC;AACb,WAAOY,OAAO,CAAChD,GAAR,CAAY,UAAC1B,MAAD;AAAA,aAAY8B,WAAW,CAAC9B,MAAD,EAASgC,iBAAT,EAA4BC,QAA5B,EAAsCC,iBAAtC,CAAvB;AAAA,KAAZ,CAAP;AACD,GAFa,EAEX,CAACD,QAAD,EAAWyC,OAAX,EAAoB1C,iBAApB,EAAuCE,iBAAvC,CAFW,CAAd;AAGD;AAED,SAAgBmE,oBACdnD,SACAC,SACAjB,mBACAyD,UACAC,YACAU,QACAhC;;;AAEA,kCACEoB,6BAA6B,CAACxC,OAAD,EAAUC,OAAV,EAAmBjB,iBAAnB,EAAsCyD,QAAtC,EAAgDC,UAAhD,EAA4D,CAACU,MAAD,CAA5D,EAAsEhC,OAAtE,CAA7B,CAA4G,CAA5G,CADF,oCAEEvE,kBAFF;AAID;;AAGD,SAAgBwG,8BACdrD,SACAC,SACAjB,mBACAyD,UACAI,WACAzB;AAEA,cAAwBA,OAAxB,WAAwBA,OAAxB,GAAmC,EAAnC;AAAA,MAAQ5D,WAAR,SAAQA,WAAR;;;AAGA,MAAMY,KAAK,GAAGwC,aAAO,CAAC;AACpB,QAAI,CAAC6B,QAAL,EAAe,OAAO,EAAP;AACf,WAAOI,SAAS,CAACrE,GAAV,CAAoB,UAACjB,QAAD;AAAA,aAAe;AACxCD,QAAAA,OAAO,EAAEmF,QAAQ,CAACnF,OADsB;AAExCC,QAAAA,QAAQ,EAARA,QAFwC;AAGxCC,QAAAA,WAAW,EAAXA;AAHwC,OAAf;AAAA,KAApB,CAAP;AAKD,GAPoB,EAOlB,CAACiF,QAAD,EAAWI,SAAX,EAAsBrF,WAAtB,CAPkB,CAArB;;AAUA,MAAMgE,OAAO,GAAGzB,wBAAwB,CAACC,OAAD,EAAUC,OAAV,EAAmB7B,KAAnB,EAA0BgD,OAA1B,CAAxC;AAEA,SAAOR,aAAO,CAAC;AACb,WAAOY,OAAO,CAAChD,GAAR,CAAY,UAAC1B,MAAD,EAAS2E,CAAT;AAAA;;AAAA,aACjB7C,WAAW,CACT9B,MADS,EAET2F,QAFS,oBAETA,QAAQ,aAFC,EAGTA,QAHS,4CAGTA,QAAQ,aAHC,qBAGT,qBAAqBG,WAArB,CAAiCC,SAAS,CAACpB,CAAD,CAAT,CAAa6B,SAAb,CAAuB,CAAvB,EAA0B,EAA1B,CAAjC,CAHS,EAITtE,iBAJS,CADM;AAAA,KAAZ,CAAP;AAQD,GATa,EASX,CAACwC,OAAD,EAAUiB,QAAV,EAAoBI,SAApB,EAA+B7D,iBAA/B,CATW,CAAd;AAUD;AAGD;;AACA,SAAgBuE,qCACdvD,SACAwD,oBACAC,kBACA3E,mBACA4D,YACAC,YACAvB;AAEA,cAAwBA,OAAxB,WAAwBA,OAAxB,GAAmC,EAAnC;AAAA,MAAQ5D,WAAR,SAAQA,WAAR;;AAEA,sBAA+B0F,WAAW,CAACR,UAAD,EAAa5D,iBAAb,EAAgC6D,UAAhC,CAA1C;AAAA,MAAQ5D,QAAR,iBAAQA,QAAR;AAAA,MAAkBxB,QAAlB,iBAAkBA,QAAlB;;;AAGA,MAAM0E,YAAY,GAAGrB,aAAO,CAAC;AAC3B,QAAI,CAACrD,QAAD,IAAa,CAACkG,gBAAlB,EAAoC,OAAO,EAAP;AACpC,WAAOtB,WAAW,CAACsB,gBAAD,CAAX,CAA8BlB,MAA9B,CAAqC,UAACzF,MAAD,EAASmD,OAAT;AAC1C,UAAMgD,SAAS,GAAGQ,gBAAgB,CAACxD,OAAD,CAAlC;AACA,UAAM7B,KAAK,GAAG6E,SAAS,CAACzE,GAAV,CAAgC,UAAClB,OAAD;AAC5C,YAAI,CAACA,OAAL,EAAc,OAAOd,SAAP;AACd,eAAO;AAAEc,UAAAA,OAAO,EAAPA,OAAF;AAAWC,UAAAA,QAAQ,EAARA,QAAX;AAAqBC,UAAAA,WAAW,EAAXA;AAArB,SAAP;AACD,OAHa,CAAd;AAIAV,MAAAA,MAAM,CAACmD,OAAD,CAAN,GAAkB7B,KAAlB;AACA,aAAOtB,MAAP;AACD,KARM,EAQJ,EARI,CAAP;AASD,GAX2B,EAWzB,CAAC2G,gBAAD,EAAmBlG,QAAnB,EAA6BC,WAA7B,CAXyB,CAA5B;;AAcA,MAAMkG,gBAAgB,GAAG1B,kCAAkC,CAAChC,OAAD,EAAUiC,YAAV,EAAwBb,OAAxB,CAA3D;AAEA,SAAOR,aAAO,CAAC;AACb,WAAOuB,WAAW,CAACuB,gBAAD,CAAX,CAA8BnB,MAA9B,CAAqC,UAACoB,eAAD,EAAkB1D,OAAlB;AAC1C,UAAMjB,iBAAiB,GAAGwE,kBAAH,oBAAGA,kBAAkB,CAAGvD,OAAH,CAA5C;AACA,UAAMuB,OAAO,GAAGkC,gBAAgB,CAACzD,OAAD,CAAhC;AACA0D,MAAAA,eAAe,CAAC1D,OAAD,CAAf,GAA2BuB,OAAO,CAAChD,GAAR,CAAY,UAAC1B,MAAD;AAAA,eACrC8B,WAAW,CAAC9B,MAAD,EAASgC,iBAAT,EAA4BC,QAA5B,EAAsCC,iBAAtC,CAD0B;AAAA,OAAZ,CAA3B;AAGA,aAAO2E,eAAP;AACD,KAPM,EAOJ,EAPI,CAAP;AAQD,GATa,EASX,CAAC5E,QAAD,EAAWD,iBAAX,EAA8B4E,gBAA9B,EAAgDF,kBAAhD,CATW,CAAd;AAUD;AAGD;;AACA,SAAgBI,sCACd5D,SACAwD,oBACAK,gBACA/E,mBACA4D,YACAC,YACAvB;AAEA;AACA;AACA,MAAM0C,kBAAkB,GAAGlD,aAAO,CAAC;AACjC,WAAOuB,WAAW,CAAC0B,cAAD,CAAX,CAA4BtB,MAA5B,CAAmC,UAACzF,MAAD,EAASmD,OAAT;AACxCnD,MAAAA,MAAM,CAACmD,OAAD,CAAN,GAAkB,CAAC4D,cAAc,CAAC5D,OAAD,CAAf,CAAlB;AACA,aAAOnD,MAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GALiC,EAK/B,CAAC+G,cAAD,CAL+B,CAAlC;AAOA,MAAME,oBAAoB,GAAGR,oCAAoC,CAC/DvD,OAD+D,EAE/DwD,kBAF+D,EAG/DM,kBAH+D,EAI/DhF,iBAJ+D,EAK/D4D,UAL+D,EAM/DC,UAN+D,EAO/DvB,OAP+D,CAAjE;AAUA,SAAOR,aAAO,CAAC;AACb,WAAOuB,WAAW,CAAC0B,cAAD,CAAX,CAA4BtB,MAA5B,CAAmC,UAACzF,MAAD,EAASmD,OAAT;;;AACxCnD,MAAAA,MAAM,CAACmD,OAAD,CAAN,sDAAkB8D,oBAAoB,CAAC9D,OAAD,CAAtC,qBAAkB,uBAAgC,CAAhC,CAAlB,oCAAwDpD,kBAAxD;AACA,aAAOC,MAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID,GALa,EAKX,CAAC+G,cAAD,EAAiBE,oBAAjB,CALW,CAAd;AAMD;;AAED,SAASb,WAAT,CACER,UADF,EAEE5D,iBAFF,EAGE6D,UAHF;AAKE;AACA,MAAM5D,QAAQ,GAAG6B,aAAO,CAAC;AAAA,WAAM9B,iBAAN,oBAAMA,iBAAiB,CAAE8D,WAAnB,CAA+BF,UAA/B,CAAN;AAAA,GAAD,EAAmD,CAAC5D,iBAAD,EAAoB4D,UAApB,CAAnD,CAAxB;;AAEA,MAAMnF,QAAQ,GAAuBqD,aAAO,CAC1C;AAAA,WACE7B,QAAQ,IAAIW,iBAAiB,CAACiD,UAAD,CAA7B,GACI7D,iBADJ,oBACIA,iBAAiB,CAAEiE,kBAAnB,CAAsChE,QAAtC,EAAgD4D,UAAhD,CADJ,GAEInG,SAHN;AAAA,GAD0C,EAK1C,CAACmG,UAAD,EAAa7D,iBAAb,EAAgCC,QAAhC,CAL0C,CAA5C;AAOA,SAAO;AAAEA,IAAAA,QAAQ,EAARA,QAAF;AAAYxB,IAAAA,QAAQ,EAARA;AAAZ,GAAP;AACD;;AAED,SAAS4E,WAAT,CAAqB6B,UAArB;AACE,SAAOC,MAAM,CAACC,IAAP,CAAYF,UAAZ,EAAwBxF,GAAxB,CAA4B,UAACF,CAAD;AAAA,WAAOJ,QAAQ,CAACI,CAAD,EAAI,EAAJ,CAAf;AAAA,GAA5B,CAAP;AACD;;ACjYD,IAAM6F,YAAY,GAAmB;AACnC9D,EAAAA,WAAW,EAAE;AADsB,CAArC;AAIA,SAAgB+D,qBAAqBjE;AACnC,SAAOkE,mBAAW,CAAC;AACjBC,IAAAA,IAAI,EAAEnE,WADW;AAEjBgE,IAAAA,YAAY,EAAZA,YAFiB;AAGjBI,IAAAA,QAAQ,EAAE;AACRpD,MAAAA,qBAAqB,EAAE,+BAACZ,KAAD,EAAQiE,MAAR;;;AACrB,8BAIIA,MAAM,CAACC,OAJX;AAAA,YACErG,KADF,mBACEA,KADF;AAAA,YAEE6B,OAFF,mBAEEA,OAFF;AAAA,YAGatD,cAHb,mBAGEyE,OAHF,CAGazE,cAHb;AAKA,YAAM+H,SAAS,GAAoCnE,KAAK,CAACoE,aAAN,GAC/CpE,KAAK,CAACoE,aADyC,GAE9CpE,KAAK,CAACoE,aAAN,GAAsB,EAF3B;AAGAD,QAAAA,SAAS,CAACzE,OAAD,CAAT,yBAAqByE,SAAS,CAACzE,OAAD,CAA9B,iCAA2C,EAA3C;AACA7B,QAAAA,KAAK,CAACwG,OAAN,CAAc,UAACxH,IAAD;;;AACZ,cAAMS,OAAO,GAAGV,SAAS,CAACC,IAAD,CAAzB;AACAsH,UAAAA,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,6BAA8B6G,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,CAA9B,oCAA6D,EAA7D;AACA6G,UAAAA,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,EAA4BlB,cAA5B,IAA8C,2BAAC+H,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,EAA4BlB,cAA5B,CAAD,qCAAgD,CAAhD,IAAqD,CAAnG;AACD,SAJD;AAKD,OAhBO;AAkBR0E,MAAAA,wBAAwB,EAAE,kCAACd,KAAD,EAAQiE,MAAR;AACxB,+BAIIA,MAAM,CAACC,OAJX;AAAA,YACErG,KADF,oBACEA,KADF;AAAA,YAEE6B,OAFF,oBAEEA,OAFF;AAAA,YAGatD,cAHb,oBAGEyE,OAHF,CAGazE,cAHb;AAKA,YAAM+H,SAAS,GAAoCnE,KAAK,CAACoE,aAAN,GAC/CpE,KAAK,CAACoE,aADyC,GAE9CpE,KAAK,CAACoE,aAAN,GAAsB,EAF3B;AAIA,YAAI,CAACD,SAAS,CAACzE,OAAD,CAAd,EAAyB;AACzB7B,QAAAA,KAAK,CAACwG,OAAN,CAAc,UAACxH,IAAD;AACZ,cAAMS,OAAO,GAAGV,SAAS,CAACC,IAAD,CAAzB;AACA,cAAI,CAACsH,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,CAAL,EAAkC;AAClC,cAAI,CAAC6G,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,EAA4BlB,cAA5B,CAAL,EAAkD;;AAElD,cAAI+H,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,EAA4BlB,cAA5B,MAAgD,CAApD,EAAuD;AACrD,mBAAO+H,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,EAA4BlB,cAA5B,CAAP;AACD,WAFD,MAEO;AACL+H,YAAAA,SAAS,CAACzE,OAAD,CAAT,CAAmBpC,OAAnB,EAA4BlB,cAA5B;AACD;AACF,SAVD;AAWD,OAxCO;AA0CRkI,MAAAA,wBAAwB,EAAE,kCAACtE,KAAD,EAAQiE,MAAR;;;AACxB,+BAAgDA,MAAM,CAACC,OAAvD;AAAA,YAAQxE,OAAR,oBAAQA,OAAR;AAAA,YAAiB6E,mBAAjB,oBAAiBA,mBAAjB;AAAA,YAAsC1G,KAAtC,oBAAsCA,KAAtC;AACAmC,QAAAA,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,6BAA6BM,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,CAA7B,oCAA2D,EAA3D;AACA7B,QAAAA,KAAK,CAACwG,OAAN,CAAc,UAACxH,IAAD;AACZ,cAAMS,OAAO,GAAGV,SAAS,CAACC,IAAD,CAAzB;AACA,cAAMwE,OAAO,GAAGrB,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,EAA2BpC,OAA3B,CAAhB;;AACA,cAAI,CAAC+D,OAAL,EAAc;AACZrB,YAAAA,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,EAA2BpC,OAA3B,IAAsC;AACpCiH,cAAAA,mBAAmB,EAAnBA;AADoC,aAAtC;AAGD,WAJD,MAIO;AAAA;;AACL,gBAAI,0BAAClD,OAAO,CAACkD,mBAAT,oCAAgC,CAAhC,KAAsCA,mBAA1C,EAA+D;AAC/DvE,YAAAA,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,EAA2BpC,OAA3B,EAAoCiH,mBAApC,GAA0DA,mBAA1D;AACD;AACF,SAXD;AAYD,OAzDO;AA2DRC,MAAAA,6BAA6B,EAAE,uCAACxE,KAAD,EAAQiE,MAAR;;;AAC7B,+BAAgDA,MAAM,CAACC,OAAvD;AAAA,YAAQxE,OAAR,oBAAQA,OAAR;AAAA,YAAiB6E,mBAAjB,oBAAiBA,mBAAjB;AAAA,YAAsC1G,KAAtC,oBAAsCA,KAAtC;AACAmC,QAAAA,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,8BAA6BM,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,CAA7B,qCAA2D,EAA3D;AACA7B,QAAAA,KAAK,CAACwG,OAAN,CAAc,UAACxH,IAAD;AACZ,cAAMS,OAAO,GAAGV,SAAS,CAACC,IAAD,CAAzB;AACA,cAAMwE,OAAO,GAAGrB,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,EAA2BpC,OAA3B,CAAhB;AACA,cAAI,CAAC+D,OAAD,IAAY,OAAOA,OAAO,CAACkD,mBAAf,KAAuC,QAAvD,EAAiE;;AACjE,cAAIlD,OAAO,CAACkD,mBAAR,IAA+BA,mBAAnC,EAAwD;AACtD,mBAAOlD,OAAO,CAACkD,mBAAf;AACAlD,YAAAA,OAAO,CAACnF,IAAR,GAAe,IAAf;AACAmF,YAAAA,OAAO,CAACrF,WAAR,GAAsBuI,mBAAtB;AACD;AACF,SATD;AAUD,OAxEO;AA0ERE,MAAAA,sBAAsB,EAAE,gCAACzE,KAAD,EAAQiE,MAAR;;;AACtB,+BAA0CA,MAAM,CAACC,OAAjD;AAAA,YAAQxE,OAAR,oBAAQA,OAAR;AAAA,YAAiBuB,OAAjB,oBAAiBA,OAAjB;AAAA,YAA0BjF,WAA1B,oBAA0BA,WAA1B;AACAgE,QAAAA,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,8BAA6BM,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,CAA7B,qCAA2D,EAA3D;AACAgE,QAAAA,MAAM,CAACC,IAAP,CAAY1C,OAAZ,EAAqBoD,OAArB,CAA6B,UAAC/G,OAAD;;;AAC3B,cAAM+D,OAAO,GAAGrB,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,EAA2BpC,OAA3B,CAAhB;AACA,cAAI,yBAAC+D,OAAD,oBAACA,OAAO,CAAErF,WAAV,mCAAyB,CAAzB,IAA8BA,WAAlC,EAA+C;AAC/C,cAAI,CAAAqF,OAAO,QAAP,YAAAA,OAAO,CAAEnF,IAAT,MAAkB+E,OAAO,CAAC3D,OAAD,CAAzB,IAAsC,CAAA+D,OAAO,QAAP,YAAAA,OAAO,CAAErF,WAAT,MAAyBA,WAAnE,EAAgF;AAChFgE,UAAAA,KAAK,CAACF,WAAN,CAAkBJ,OAAlB,EAA2BpC,OAA3B,IAAsC;AACpCpB,YAAAA,IAAI,EAAE+E,OAAO,CAAC3D,OAAD,CADuB;AAEpCtB,YAAAA,WAAW,EAAXA;AAFoC,WAAtC;AAID,SARD;AASD,OAtFO;AAwFR0I,MAAAA,qBAAqB,EAAE,+BAAC1E,KAAD,EAAQiE,MAAR;;;AACrB,+BAAqCA,MAAM,CAACC,OAA5C;AAAA,YAAQxE,OAAR,oBAAQA,OAAR;AAAA,YAAiBC,eAAjB,oBAAiBA,eAAjB;AACAK,QAAAA,KAAK,CAACL,eAAN,4BAAwBK,KAAK,CAACL,eAA9B,oCAAiD,EAAjD;AACAK,QAAAA,KAAK,CAACL,eAAN,CAAsBD,OAAtB,IAAiCC,eAAjC;AACD;AA5FO;AAHO,GAAD,CAAlB;AAkGD;;;;;;;ACjHD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,OAAO,IAAI,UAAU,OAAO,EAAE;AAClC,AACA;AACA,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,SAAS,CAAC;AAC5B,EAAE,IAAI,MAAM,GAAG,EAAE,CAAC,cAAc,CAAC;AACjC,EAAE,IAAI1D,WAAS,CAAC;AAChB,EAAE,IAAI,OAAO,GAAG,OAAO,MAAM,KAAK,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC;AAC3D,EAAE,IAAI,cAAc,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;AACxD,EAAE,IAAI,mBAAmB,GAAG,OAAO,CAAC,aAAa,IAAI,iBAAiB,CAAC;AACvE,EAAE,IAAI,iBAAiB,GAAG,OAAO,CAAC,WAAW,IAAI,eAAe,CAAC;AACjE;AACA,EAAE,SAAS,MAAM,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACnC,IAAI,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,GAAG,EAAE;AACpC,MAAM,KAAK,EAAE,KAAK;AAClB,MAAM,UAAU,EAAE,IAAI;AACtB,MAAM,YAAY,EAAE,IAAI;AACxB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC,CAAC;AACP,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AACpB,GAAG;AACH,EAAE,IAAI;AACN;AACA,IAAI,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AACnB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,MAAM,GAAG,SAAS,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,MAAM,OAAO,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;AAC9B,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,SAAS,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE;AACrD;AACA,IAAI,IAAI,cAAc,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,YAAY,SAAS,GAAG,OAAO,GAAG,SAAS,CAAC;AACjG,IAAI,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AAC5D,IAAI,IAAI,OAAO,GAAG,IAAI,OAAO,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;AACjD;AACA;AACA;AACA,IAAI,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACjE;AACA,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,EAAE,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,QAAQ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;AAClC,IAAI,IAAI;AACR,MAAM,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC;AACxD,KAAK,CAAC,OAAO,GAAG,EAAE;AAClB,MAAM,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AACzC,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,sBAAsB,GAAG,gBAAgB,CAAC;AAChD,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC,EAAE,IAAI,iBAAiB,GAAG,WAAW,CAAC;AACtC;AACA;AACA;AACA,EAAE,IAAI,gBAAgB,GAAG,EAAE,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,SAAS,GAAG,EAAE;AACzB,EAAE,SAAS,iBAAiB,GAAG,EAAE;AACjC,EAAE,SAAS,0BAA0B,GAAG,EAAE;AAC1C;AACA;AACA;AACA,EAAE,IAAI,iBAAiB,GAAG,EAAE,CAAC;AAC7B,EAAE,MAAM,CAAC,iBAAiB,EAAE,cAAc,EAAE,YAAY;AACxD,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,IAAI,QAAQ,GAAG,MAAM,CAAC,cAAc,CAAC;AACvC,EAAE,IAAI,uBAAuB,GAAG,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3E,EAAE,IAAI,uBAAuB;AAC7B,MAAM,uBAAuB,KAAK,EAAE;AACpC,MAAM,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE,cAAc,CAAC,EAAE;AAC5D;AACA;AACA,IAAI,iBAAiB,GAAG,uBAAuB,CAAC;AAChD,GAAG;AACH;AACA,EAAE,IAAI,EAAE,GAAG,0BAA0B,CAAC,SAAS;AAC/C,IAAI,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;AAC3D,EAAE,iBAAiB,CAAC,SAAS,GAAG,0BAA0B,CAAC;AAC3D,EAAE,MAAM,CAAC,EAAE,EAAE,aAAa,EAAE,0BAA0B,CAAC,CAAC;AACxD,EAAE,MAAM,CAAC,0BAA0B,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;AACvE,EAAE,iBAAiB,CAAC,WAAW,GAAG,MAAM;AACxC,IAAI,0BAA0B;AAC9B,IAAI,iBAAiB;AACrB,IAAI,mBAAmB;AACvB,GAAG,CAAC;AACJ;AACA;AACA;AACA,EAAE,SAAS,qBAAqB,CAAC,SAAS,EAAE;AAC5C,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE;AACzD,MAAM,MAAM,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,GAAG,EAAE;AAC9C,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACzC,OAAO,CAAC,CAAC;AACT,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,OAAO,CAAC,mBAAmB,GAAG,SAAS,MAAM,EAAE;AACjD,IAAI,IAAI,IAAI,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,WAAW,CAAC;AAClE,IAAI,OAAO,IAAI;AACf,QAAQ,IAAI,KAAK,iBAAiB;AAClC;AACA;AACA,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,IAAI,MAAM,mBAAmB;AAC/D,QAAQ,KAAK,CAAC;AACd,GAAG,CAAC;AACJ;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,MAAM,CAAC,cAAc,EAAE;AAC/B,MAAM,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,0BAA0B,CAAC,CAAC;AAChE,KAAK,MAAM;AACX,MAAM,MAAM,CAAC,SAAS,GAAG,0BAA0B,CAAC;AACpD,MAAM,MAAM,CAAC,MAAM,EAAE,iBAAiB,EAAE,mBAAmB,CAAC,CAAC;AAC7D,KAAK;AACL,IAAI,MAAM,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,GAAG,EAAE;AAChC,IAAI,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;AAC5B,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,aAAa,CAAC,SAAS,EAAE,WAAW,EAAE;AACjD,IAAI,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE;AAClD,MAAM,IAAI,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;AAC/D,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AAC3B,OAAO,MAAM;AACb,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AAChC,QAAQ,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AACjC,QAAQ,IAAI,KAAK;AACjB,YAAY,OAAO,KAAK,KAAK,QAAQ;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,EAAE;AAC3C,UAAU,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,EAAE;AACzE,YAAY,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACnD,WAAW,EAAE,SAAS,GAAG,EAAE;AAC3B,YAAY,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAClD,WAAW,CAAC,CAAC;AACb,SAAS;AACT;AACA,QAAQ,OAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,SAAS,EAAE;AACnE;AACA;AACA;AACA,UAAU,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;AACnC,UAAU,OAAO,CAAC,MAAM,CAAC,CAAC;AAC1B,SAAS,EAAE,SAAS,KAAK,EAAE;AAC3B;AACA;AACA,UAAU,OAAO,MAAM,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AACzD,SAAS,CAAC,CAAC;AACX,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,eAAe,CAAC;AACxB;AACA,IAAI,SAAS,OAAO,CAAC,MAAM,EAAE,GAAG,EAAE;AAClC,MAAM,SAAS,0BAA0B,GAAG;AAC5C,QAAQ,OAAO,IAAI,WAAW,CAAC,SAAS,OAAO,EAAE,MAAM,EAAE;AACzD,UAAU,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC/C,SAAS,CAAC,CAAC;AACX,OAAO;AACP;AACA,MAAM,OAAO,eAAe;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,eAAe,GAAG,eAAe,CAAC,IAAI;AAC9C,UAAU,0BAA0B;AACpC;AACA;AACA,UAAU,0BAA0B;AACpC,SAAS,GAAG,0BAA0B,EAAE,CAAC;AACzC,KAAK;AACL;AACA;AACA;AACA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,GAAG;AACH;AACA,EAAE,qBAAqB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACjD,EAAE,MAAM,CAAC,aAAa,CAAC,SAAS,EAAE,mBAAmB,EAAE,YAAY;AACnE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL,EAAE,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC;AACxC;AACA;AACA;AACA;AACA,EAAE,OAAO,CAAC,KAAK,GAAG,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,WAAW,EAAE;AAC7E,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC,EAAE,WAAW,GAAG,OAAO,CAAC;AACtD;AACA,IAAI,IAAI,IAAI,GAAG,IAAI,aAAa;AAChC,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,CAAC;AAC/C,MAAM,WAAW;AACjB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC;AAC/C,QAAQ,IAAI;AACZ,QAAQ,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,MAAM,EAAE;AAC1C,UAAU,OAAO,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AAC1D,SAAS,CAAC,CAAC;AACX,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,gBAAgB,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE;AACpD,IAAI,IAAI,KAAK,GAAG,sBAAsB,CAAC;AACvC;AACA,IAAI,OAAO,SAAS,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;AACxC,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,MAAM,IAAI,KAAK,CAAC,8BAA8B,CAAC,CAAC;AACxD,OAAO;AACP;AACA,MAAM,IAAI,KAAK,KAAK,iBAAiB,EAAE;AACvC,QAAQ,IAAI,MAAM,KAAK,OAAO,EAAE;AAChC,UAAU,MAAM,GAAG,CAAC;AACpB,SAAS;AACT;AACA;AACA;AACA,QAAQ,OAAO,UAAU,EAAE,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC9B,MAAM,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AACxB;AACA,MAAM,OAAO,IAAI,EAAE;AACnB,QAAQ,IAAI,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;AACxC,QAAQ,IAAI,QAAQ,EAAE;AACtB,UAAU,IAAI,cAAc,GAAG,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACtE,UAAU,IAAI,cAAc,EAAE;AAC9B,YAAY,IAAI,cAAc,KAAK,gBAAgB,EAAE,SAAS;AAC9D,YAAY,OAAO,cAAc,CAAC;AAClC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,MAAM,EAAE;AACvC;AACA;AACA,UAAU,OAAO,CAAC,IAAI,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC;AACrD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC/C,UAAU,IAAI,KAAK,KAAK,sBAAsB,EAAE;AAChD,YAAY,KAAK,GAAG,iBAAiB,CAAC;AACtC,YAAY,MAAM,OAAO,CAAC,GAAG,CAAC;AAC9B,WAAW;AACX;AACA,UAAU,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACjD;AACA,SAAS,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AAChD,UAAU,OAAO,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAChD,SAAS;AACT;AACA,QAAQ,KAAK,GAAG,iBAAiB,CAAC;AAClC;AACA,QAAQ,IAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;AACtD,QAAQ,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AACtC;AACA;AACA,UAAU,KAAK,GAAG,OAAO,CAAC,IAAI;AAC9B,cAAc,iBAAiB;AAC/B,cAAc,sBAAsB,CAAC;AACrC;AACA,UAAU,IAAI,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAE;AAC/C,YAAY,SAAS;AACrB,WAAW;AACX;AACA,UAAU,OAAO;AACjB,YAAY,KAAK,EAAE,MAAM,CAAC,GAAG;AAC7B,YAAY,IAAI,EAAE,OAAO,CAAC,IAAI;AAC9B,WAAW,CAAC;AACZ;AACA,SAAS,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AAC5C,UAAU,KAAK,GAAG,iBAAiB,CAAC;AACpC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACnC,UAAU,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AACnC,SAAS;AACT,OAAO;AACP,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,EAAE,SAAS,mBAAmB,CAAC,QAAQ,EAAE,OAAO,EAAE;AAClD,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACnD,IAAI,IAAI,MAAM,KAAKA,WAAS,EAAE;AAC9B;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AACtC;AACA,QAAQ,IAAI,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;AACzC;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,UAAU,mBAAmB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACjD;AACA,UAAU,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,EAAE;AAC1C;AACA;AACA,YAAY,OAAO,gBAAgB,CAAC;AACpC,WAAW;AACX,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AACjC,QAAQ,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS;AACnC,UAAU,gDAAgD,CAAC,CAAC;AAC5D,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,MAAM,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;AAClE;AACA,IAAI,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACjC,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1B;AACA,IAAI,IAAI,EAAE,IAAI,EAAE;AAChB,MAAM,OAAO,CAAC,MAAM,GAAG,OAAO,CAAC;AAC/B,MAAM,OAAO,CAAC,GAAG,GAAG,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAC;AACtE,MAAM,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC9B,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE;AACnB;AACA;AACA,MAAM,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;AAChD;AACA;AACA,MAAM,OAAO,CAAC,IAAI,GAAG,QAAQ,CAAC,OAAO,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,EAAE;AACvC,QAAQ,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAChC,QAAQ,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAChC,OAAO;AACP;AACA,KAAK,MAAM;AACX;AACA,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK;AACL;AACA;AACA;AACA,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC5B,IAAI,OAAO,gBAAgB,CAAC;AAC5B,GAAG;AACH;AACA;AACA;AACA,EAAE,qBAAqB,CAAC,EAAE,CAAC,CAAC;AAC5B;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,iBAAiB,EAAE,WAAW,CAAC,CAAC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,cAAc,EAAE,WAAW;AACxC,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,CAAC,CAAC;AACL;AACA,EAAE,MAAM,CAAC,EAAE,EAAE,UAAU,EAAE,WAAW;AACpC,IAAI,OAAO,oBAAoB,CAAC;AAChC,GAAG,CAAC,CAAC;AACL;AACA,EAAE,SAAS,YAAY,CAAC,IAAI,EAAE;AAC9B,IAAI,IAAI,KAAK,GAAG,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;AACpC;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE;AACnB,MAAM,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AACjC,MAAM,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/B,KAAK;AACL;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChC,GAAG;AACH;AACA,EAAE,SAAS,aAAa,CAAC,KAAK,EAAE;AAChC,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,IAAI,EAAE,CAAC;AACxC,IAAI,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC3B,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC;AACtB,IAAI,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC;AAC9B,GAAG;AACH;AACA,EAAE,SAAS,OAAO,CAAC,WAAW,EAAE;AAChC;AACA;AACA;AACA,IAAI,IAAI,CAAC,UAAU,GAAG,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;AAC3C,IAAI,WAAW,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;AAC5C,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACrB,GAAG;AACH;AACA,EAAE,OAAO,CAAC,IAAI,GAAG,SAAS,MAAM,EAAE;AAClC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AAC5B,MAAM,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrB,KAAK;AACL,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;AACnB;AACA;AACA;AACA,IAAI,OAAO,SAAS,IAAI,GAAG;AAC3B,MAAM,OAAO,IAAI,CAAC,MAAM,EAAE;AAC1B,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,QAAQ,IAAI,GAAG,IAAI,MAAM,EAAE;AAC3B,UAAU,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;AAC3B,UAAU,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC5B,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,MAAM,OAAO,IAAI,CAAC;AAClB,KAAK,CAAC;AACN,GAAG,CAAC;AACJ;AACA,EAAE,SAAS,MAAM,CAAC,QAAQ,EAAE;AAC5B,IAAI,IAAI,QAAQ,EAAE;AAClB,MAAM,IAAI,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAC;AACpD,MAAM,IAAI,cAAc,EAAE;AAC1B,QAAQ,OAAO,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7C,OAAO;AACP;AACA,MAAM,IAAI,OAAO,QAAQ,CAAC,IAAI,KAAK,UAAU,EAAE;AAC/C,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;AACnC,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,GAAG,SAAS,IAAI,GAAG;AAC3C,UAAU,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE;AACxC,YAAY,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,EAAE;AAC1C,cAAc,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;AACvC,cAAc,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAChC,cAAc,OAAO,IAAI,CAAC;AAC1B,aAAa;AACb,WAAW;AACX;AACA,UAAU,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACjC,UAAU,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B;AACA,UAAU,OAAO,IAAI,CAAC;AACtB,SAAS,CAAC;AACV;AACA,QAAQ,OAAO,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AAChC,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;AAChC,GAAG;AACH,EAAE,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAC1B;AACA,EAAE,SAAS,UAAU,GAAG;AACxB,IAAI,OAAO,EAAE,KAAK,EAAEA,WAAS,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,OAAO,CAAC,SAAS,GAAG;AACtB,IAAI,WAAW,EAAE,OAAO;AACxB;AACA,IAAI,KAAK,EAAE,SAAS,aAAa,EAAE;AACnC,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB,MAAM,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AACpB;AACA;AACA,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,GAAGA,WAAS,CAAC;AACzC,MAAM,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AACxB,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC3B,MAAM,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC3B;AACA,MAAM,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;AAC7C;AACA,MAAM,IAAI,CAAC,aAAa,EAAE;AAC1B,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/B;AACA,UAAU,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;AACpC,cAAc,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;AACrC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAY,IAAI,CAAC,IAAI,CAAC,GAAGA,WAAS,CAAC;AACnC,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,EAAE,WAAW;AACrB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB;AACA,MAAM,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACzC,MAAM,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,CAAC;AAC5C,MAAM,IAAI,UAAU,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,QAAQ,MAAM,UAAU,CAAC,GAAG,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC;AACvB,KAAK;AACL;AACA,IAAI,iBAAiB,EAAE,SAAS,SAAS,EAAE;AAC3C,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACrB,QAAQ,MAAM,SAAS,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,OAAO,GAAG,IAAI,CAAC;AACzB,MAAM,SAAS,MAAM,CAAC,GAAG,EAAE,MAAM,EAAE;AACnC,QAAQ,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC;AAC9B,QAAQ,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC;AAC/B,QAAQ,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC;AAC3B;AACA,QAAQ,IAAI,MAAM,EAAE;AACpB;AACA;AACA,UAAU,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;AAClC,UAAU,OAAO,CAAC,GAAG,GAAGA,WAAS,CAAC;AAClC,SAAS;AACT;AACA,QAAQ,OAAO,CAAC,EAAE,MAAM,CAAC;AACzB,OAAO;AACP;AACA,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC;AACA;AACA;AACA,UAAU,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;AAC/B,SAAS;AACT;AACA,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE;AACvC,UAAU,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;AACxD,UAAU,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,CAAC;AAC5D;AACA,UAAU,IAAI,QAAQ,IAAI,UAAU,EAAE;AACtC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa,MAAM,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AACrD,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM,IAAI,QAAQ,EAAE;AAC/B,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,EAAE;AAC5C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAClD,aAAa;AACb;AACA,WAAW,MAAM,IAAI,UAAU,EAAE;AACjC,YAAY,IAAI,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC9C,cAAc,OAAO,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,aAAa;AACb;AACA,WAAW,MAAM;AACjB,YAAY,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;AACtE,WAAW;AACX,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,IAAI,EAAE,GAAG,EAAE;AAChC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI;AACrC,YAAY,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC;AAC5C,YAAY,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,UAAU,EAAE;AAC1C,UAAU,IAAI,YAAY,GAAG,KAAK,CAAC;AACnC,UAAU,MAAM;AAChB,SAAS;AACT,OAAO;AACP;AACA,MAAM,IAAI,YAAY;AACtB,WAAW,IAAI,KAAK,OAAO;AAC3B,WAAW,IAAI,KAAK,UAAU,CAAC;AAC/B,UAAU,YAAY,CAAC,MAAM,IAAI,GAAG;AACpC,UAAU,GAAG,IAAI,YAAY,CAAC,UAAU,EAAE;AAC1C;AACA;AACA,QAAQ,YAAY,GAAG,IAAI,CAAC;AAC5B,OAAO;AACP;AACA,MAAM,IAAI,MAAM,GAAG,YAAY,GAAG,YAAY,CAAC,UAAU,GAAG,EAAE,CAAC;AAC/D,MAAM,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACzB,MAAM,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;AACvB;AACA,MAAM,IAAI,YAAY,EAAE;AACxB,QAAQ,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC,UAAU,CAAC;AAC5C,QAAQ,OAAO,gBAAgB,CAAC;AAChC,OAAO;AACP;AACA,MAAM,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACnC,KAAK;AACL;AACA,IAAI,QAAQ,EAAE,SAAS,MAAM,EAAE,QAAQ,EAAE;AACzC,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACnC,QAAQ,MAAM,MAAM,CAAC,GAAG,CAAC;AACzB,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO;AACjC,UAAU,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;AACtC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC;AAC/B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,EAAE;AAC3C,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;AAC1C,QAAQ,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO,MAAM,IAAI,MAAM,CAAC,IAAI,KAAK,QAAQ,IAAI,QAAQ,EAAE;AACvD,QAAQ,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,UAAU,EAAE;AACjC,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,UAAU,KAAK,UAAU,EAAE;AAC7C,UAAU,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC1D,UAAU,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/B,UAAU,OAAO,gBAAgB,CAAC;AAClC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,OAAO,EAAE,SAAS,MAAM,EAAE;AAC9B,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE;AAC5D,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACvC,QAAQ,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;AACrC,UAAU,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACxC,UAAU,IAAI,MAAM,CAAC,IAAI,KAAK,OAAO,EAAE;AACvC,YAAY,IAAI,MAAM,GAAG,MAAM,CAAC,GAAG,CAAC;AACpC,YAAY,aAAa,CAAC,KAAK,CAAC,CAAC;AACjC,WAAW;AACX,UAAU,OAAO,MAAM,CAAC;AACxB,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,MAAM,MAAM,IAAI,KAAK,CAAC,uBAAuB,CAAC,CAAC;AAC/C,KAAK;AACL;AACA,IAAI,aAAa,EAAE,SAAS,QAAQ,EAAE,UAAU,EAAE,OAAO,EAAE;AAC3D,MAAM,IAAI,CAAC,QAAQ,GAAG;AACtB,QAAQ,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC;AAClC,QAAQ,UAAU,EAAE,UAAU;AAC9B,QAAQ,OAAO,EAAE,OAAO;AACxB,OAAO,CAAC;AACR;AACA,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,MAAM,EAAE;AAClC;AACA;AACA,QAAQ,IAAI,CAAC,GAAG,GAAGA,WAAS,CAAC;AAC7B,OAAO;AACP;AACA,MAAM,OAAO,gBAAgB,CAAC;AAC9B,KAAK;AACL,GAAG,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA,EAAE,OAAO,OAAO,CAAC;AACjB;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,EAAE,CAA6B,MAAM,CAAC,OAAO,CAAK;AAClD,CAAC,CAAC,CAAC;AACH;AACA,IAAI;AACJ,EAAE,kBAAkB,GAAG,OAAO,CAAC;AAC/B,CAAC,CAAC,OAAO,oBAAoB,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;AACtC,IAAI,UAAU,CAAC,kBAAkB,GAAG,OAAO,CAAC;AAC5C,GAAG,MAAM;AACT,IAAI,QAAQ,CAAC,GAAG,EAAE,wBAAwB,CAAC,CAAC,OAAO,CAAC,CAAC;AACrD,GAAG;AACH;;;AC1uBA;;;;;;;AAMA,SAAwB0I,WACtB9G,OACA+G,eACAC;MAAAA;AAAAA,IAAAA,qBAA6BlJ;;;AAE7B,SACEkC,KAAK;AAAA,GAEFK,IAFH,CAEQ,UAAC4G,EAAD,EAAKC,EAAL;AAAA;;AAAA,WAAY,oBAACA,EAAE,CAAC9H,WAAJ,8BAAmB4H,kBAAnB,wBAA0CC,EAAE,CAAC7H,WAA7C,8BAA4D4H,kBAA5D,CAAZ;AAAA,GAFR;AAAA,GAIG7C,MAJH,CAIoB,UAACgD,IAAD,EAAOnI,IAAP;;;AAChB,QAAMoI,GAAG,wBAAGpI,IAAI,CAACI,WAAR,gCAAuB4H,kBAAhC;;AACA,yDAAkBG,IAAlB,wCAAwB;AAAA,UAAbE,GAAa;;AACtB,UAAIA,GAAG,CAACC,kBAAJ,GAAyBF,GAAzB,IAAgCL,aAApC,EAAmD;AACjDM,QAAAA,GAAG,CAACrH,KAAJ,CAAUsD,IAAV,CAAetE,IAAf;AACAqI,QAAAA,GAAG,CAACC,kBAAJ,IAA0BF,GAA1B;AACA,eAAOD,IAAP;AACD;AACF;;;AAEDA,IAAAA,IAAI,CAAC7D,IAAL,CAAU;AACRtD,MAAAA,KAAK,EAAE,CAAChB,IAAD,CADC;AAERsI,MAAAA,kBAAkB,EAAEF;AAFZ,KAAV;AAIA,WAAOD,IAAP;AACD,GAnBH,EAmBK,EAnBL;AAAA,GAqBG/G,GArBH,CAqBO,UAACsD,CAAD;AAAA,WAAOA,CAAC,CAAC1D,KAAT;AAAA,GArBP,CADF;AAwBD;;AC1CD;AACA;AAEA,SAASuH,IAAT,CAAcC,EAAd;AACE,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD;AAAA,WAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAvB;AAAA,GAAZ,CAAP;AACD;;AAED,SAASI,UAAT,CAAoBC,GAApB,EAAiCC,GAAjC;AACE,SAAOP,IAAI,CAACM,GAAG,GAAGE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACD,GAAL,CAAS,CAAT,EAAYA,GAAG,GAAGD,GAAlB,CAA3B,CAAP,CAAX;AACD;AAED;;;;;IAGMK;;;AAEJ;;;AACE,8BAAM,WAAN;AAFK,0BAAA,GAAyB,IAAzB;;AAGN;;;iCAJ0B3I;AAO7B;;;;;AAGA,IAAa4I,cAAb;AAAA;;AAAA;;;;AACS,2BAAA,GAAyB,IAAzB;;AACR;;AAFD;AAAA,iCAAoC5I,KAApC;AAUA;;;;;;;;AAOA,SAAgB6I,MACdC;MACEC,SAAAA;MAAGC,eAAAA;MAASC,eAAAA;AAEd,MAAIC,SAAS,GAAG,KAAhB;AACA,MAAIC,eAAJ;AACA,MAAMC,OAAO,GAAG,IAAIlB,OAAJ;AAAA,+DAAe,iBAAOC,OAAP,EAAgBkB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BF,cAAAA,eAAe,GAAGE,MAAlB;;AAD6B;AAAA;AAGvBlK,cAAAA,MAHuB;AAAA;AAAA;AAAA,qBAKV2J,EAAE,EALQ;;AAAA;AAKzB3J,cAAAA,MALyB;;AAMzB,kBAAI,CAAC+J,SAAL,EAAgB;AACdf,gBAAAA,OAAO,CAAChJ,MAAD,CAAP;AACA+J,gBAAAA,SAAS,GAAG,IAAZ;AACD;;AATwB;;AAAA;AAAA;AAAA;;AAAA,mBAYrBA,SAZqB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAerBH,CAAC,IAAI,CAAL,IAAU,CAAE,YAAcO,gBAfL;AAAA;AAAA;AAAA;;AAgBvBD,cAAAA,MAAM,aAAN;AACAH,cAAAA,SAAS,GAAG,IAAZ;AAjBuB;;AAAA;AAoBzBH,cAAAA,CAAC;;AApBwB;AAAA;AAAA,qBAsBrBV,UAAU,CAACW,OAAD,EAAUC,OAAV,CAtBW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAf;;AAAA;AAAA;AAAA;AAAA,MAAhB;AAyBA,SAAO;AACLG,IAAAA,OAAO,EAAPA,OADK;AAELG,IAAAA,MAAM,EAAE;AACN,UAAIL,SAAJ,EAAe;AACfA,MAAAA,SAAS,GAAG,IAAZ;AACAC,MAAAA,eAAe,CAAC,IAAIR,cAAJ,EAAD,CAAf;AACD;AANI,GAAP;AAQD;;AChFD;AACA;AAKA,SAAwBa,YAAeC,OAAUC;AAC/C,kBAA4CC,cAAQ,CAAIF,KAAJ,CAApD;AAAA,MAAOG,cAAP;AAAA,MAAuBC,iBAAvB;;AAEAzG,EAAAA,eAAS,CAAC;AACR;AACA,QAAM0G,OAAO,GAAG1B,UAAU,CAAC;AACzByB,MAAAA,iBAAiB,CAACJ,KAAD,CAAjB;AACD,KAFyB,EAEvBC,KAFuB,CAA1B;AAKA;AACA;;AACA,WAAO;AACLK,MAAAA,YAAY,CAACD,OAAD,CAAZ;AACD,KAFD;AAGD,GAZQ,EAYN,CAACL,KAAD,EAAQC,KAAR,CAZM,CAAT;AAcA,SAAOE,cAAP;AACD;;ACZD,IAAMI,kBAAkB,GAAG;AACzBjB,EAAAA,CAAC,EAAE9J,QADsB;AAEzB+J,EAAAA,OAAO,EAAE,IAFgB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAA3B;AAMA;;;;;;;SAMegB;;;AA0Df;;;;;;;;;+DA1DA,iBACEC,SADF,EAEEC,KAFF,EAGEvL,WAHF,EAIEwL,OAJF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAME5I,YAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd,EAAgC0I,KAAhC,EAAuCvL,WAAvC;AANF;AAAA;AAAA,mBAQiCsL,SAAS,CAACG,UAAV,CAAqBH,SAArB,CAC3BC,KAAK,CAACtJ,GAAN,CAAU,UAACyJ,GAAD;AAAA;;AAAA,qBAAU;AAClBC,gBAAAA,MAAM,EAAED,GAAG,CAAC3K,OADM;AAElBC,gBAAAA,QAAQ,EAAE0K,GAAG,CAAC1K,QAFI;AAGlB4K,gBAAAA,QAAQ,sBAAEF,GAAG,CAACzK,WAAN,+BAAqBvB;AAHX,eAAV;AAAA,aAAV,CAD2B;AAO3B;AAAEmM,cAAAA,QAAQ,EAAE7L;AAAZ,aAP2B,CARjC;;AAAA;AAAA;AAQY8L,YAAAA,UARZ,yBAQYA,UARZ;;AAkBI,gBAAIN,OAAJ,EAAa;AACXM,cAAAA,UAAU,CAACzD,OAAX,CAAmB,gBAAmCnD,CAAnC;;;oBAAG6G,eAAAA;oBAASD,kBAAAA;oBAAYpJ,eAAAA;;AACzC,oBACE,CAACA,OAAD,IACAoJ,UAAU,CAACpK,MAAX,KAAsB,CADtB,IAEAqK,OAAO,CAACC,GAAR,CAAYpC,IAAI,CAACqC,KAAL,CAAW,yBAACV,KAAK,CAACrG,CAAD,CAAL,CAASjE,WAAV,mCAAyBvB,yBAAzB,IAAsD,IAAjE,CAAZ,CAHF,EAIE;AAAA;;AACAkD,kBAAAA,OAAO,CAACsJ,IAAR,qCACoCH,OAAO,CAACI,QAAR,EADpC,+CAEIZ,KAAK,CAACrG,CAAD,CAAL,CAASjE,WAFb,oCAE4BvB,yBAF5B,GAIE6L,KAAK,CAACrG,CAAD,CAJP;AAMD;AACF,eAbD;AAcD;;AAjCL,6CAmCW4G,UAnCX;;AAAA;AAAA;AAAA;AAqCUpL,YAAAA,KArCV;;AAAA,kBAsCQA,KAAK,CAAC0L,IAAN,KAAe,CAAC,KAAhB,IAAyB,mBAAA1L,KAAK,CAAC2L,OAAN,oCAAenJ,OAAf,CAAuB,kBAAvB,OAA+C,CAAC,CAtCjF;AAAA;AAAA;AAAA;;AAAA,kBAuCY,IAAI8G,cAAJ,wCAAwDhK,WAAxD,CAvCZ;;AAAA;AAAA,kBAwCeU,KAAK,CAAC0L,IAAN,KAAe,CAAC,KAAhB,IAAyB,oBAAA1L,KAAK,CAAC2L,OAAN,qCAAenJ,OAAf,CAAuB,0BAAvB,OAAuD,CAAC,CAxChG;AAAA;AAAA;AAAA;;AAAA,kBAyCUqI,KAAK,CAAC7J,MAAN,GAAe,CAzCzB;AAAA;AAAA;AAAA;;AA0CQ,YAA4C;AAC1CkB,cAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwC0I,KAAxC;AACD;;AACKe,YAAAA,IA7Cd,GA6CqB1C,IAAI,CAACqC,KAAL,CAAWV,KAAK,CAAC7J,MAAN,GAAe,CAA1B,CA7CrB;AAAA;AAAA,mBA8C+B4H,OAAO,CAACiD,GAAR,CAAY,CACjClB,UAAU,CAACC,SAAD,EAAYC,KAAK,CAACiB,KAAN,CAAY,CAAZ,EAAeF,IAAf,CAAZ,EAAkCtM,WAAlC,CADuB,EAEjCqL,UAAU,CAACC,SAAD,EAAYC,KAAK,CAACiB,KAAN,CAAYF,IAAZ,EAAkBf,KAAK,CAAC7J,MAAxB,CAAZ,EAA6C1B,WAA7C,CAFuB,CAAZ,CA9C/B;;AAAA;AAAA;AA8CeyM,YAAAA,EA9Cf;AA8CmB3D,YAAAA,EA9CnB;AAAA,6CAkDe2D,EAAE,CAACC,MAAH,CAAU5D,EAAV,CAlDf;;AAAA;AAqDIlG,YAAAA,OAAO,CAAClC,KAAR,CAAc,uBAAd,EAAuCA,KAAvC;AArDJ,kBAsDUA,KAtDV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAgEA,SAAgBiM,oBACdC,cACAlJ;AAEA,MAAI,CAACkJ,YAAD,IAAiB,CAAClJ,OAAtB,EAA+B,OAAO,EAAP;AAC/B,MAAMyE,SAAS,GAAGyE,YAAY,CAAClJ,OAAD,CAA9B;AACA,MAAI,CAACyE,SAAL,EAAgB,OAAO,EAAP;AAEhB,SAAOT,MAAM,CAACC,IAAP,CAAYQ,SAAZ,EAAuBnC,MAAvB,CAA6D,UAAC6G,IAAD,EAAOvL,OAAP;AAClE,QAAMwL,YAAY,GAAG3E,SAAS,CAAC7G,OAAD,CAA9B;AAEAuL,IAAAA,IAAI,CAACvL,OAAD,CAAJ,GAAgBoG,MAAM,CAACC,IAAP,CAAYmF,YAAZ,EACbhL,MADa,CACN,UAAChB,GAAD;AACN,UAAMV,cAAc,GAAGuB,QAAQ,CAACb,GAAD,CAA/B;AACA,UAAIV,cAAc,IAAI,CAAtB,EAAyB,OAAO,KAAP;AACzB,aAAO0M,YAAY,CAAC1M,cAAD,CAAZ,GAA+B,CAAtC;AACD,KALa,EAMb4F,MANa,CAMN,UAAC+G,WAAD,EAAc1H,OAAd;AACN,aAAOuE,IAAI,CAACF,GAAL,CAASqD,WAAT,EAAsBpL,QAAQ,CAAC0D,OAAD,CAA9B,CAAP;AACD,KARa,EAQXhF,QARW,CAAhB;AASA,WAAOwM,IAAP;AACD,GAbM,EAaJ,EAbI,CAAP;AAcD;AAED;;;;;;;;AAOA,SAAgBG,sBACdlJ,aACAmJ,eACAvJ,SACAjB;AAEA,MAAI,CAACiB,OAAD,IAAY,CAACjB,iBAAjB,EAAoC,OAAO,EAAP;AACpC,MAAMwC,OAAO,GAAGnB,WAAW,CAACJ,OAAD,CAA3B;;AAEA,MAAI,CAACuB,OAAL,EAAc,OAAOyC,MAAM,CAACC,IAAP,CAAYsF,aAAZ,CAAP;AAEd,SAAOvF,MAAM,CAACC,IAAP,CAAYsF,aAAZ,EAA2BnL,MAA3B,CAAkC,UAACR,OAAD;AACvC,QAAMlB,cAAc,GAAG6M,aAAa,CAAC3L,OAAD,CAApC;AAEA,QAAMpB,IAAI,GAAG4D,WAAW,CAACJ,OAAD,CAAX,CAAqBpC,OAArB,CAAb;;AAEA,QAAI,CAACpB,IAAL,EAAW,OAAO,IAAP;AAEX,QAAMgN,kBAAkB,GAAGzK,iBAAiB,IAAIrC,cAAc,GAAG,CAArB,CAA5C;;AAGA,QAAIF,IAAI,CAACqI,mBAAL,IAA4BrI,IAAI,CAACqI,mBAAL,IAA4B2E,kBAA5D,EAAgF,OAAO,KAAP;;AAGhF,WAAO,CAAChN,IAAI,CAACF,WAAN,IAAqBE,IAAI,CAACF,WAAL,GAAmBkN,kBAA/C;AACD,GAdM,CAAP;AAeD;;AAUD,SAASC,mBAAT,CACE1J,OADF,EAEE8H,KAFF,EAGEhL,MAHF;AAKE,MAAQsD,OAAR,GAAmEJ,OAAnE,CAAQI,OAAR;AAAA,MAAiBK,QAAjB,GAAmET,OAAnE,CAAiBS,QAAjB;AAAA,MAA2BR,OAA3B,GAAmED,OAAnE,CAA2BC,OAA3B;AAAA,MAAoCjB,iBAApC,GAAmEgB,OAAnE,CAAoChB,iBAApC;AAAA,MAAuD+I,OAAvD,GAAmE/H,OAAnE,CAAuD+H,OAAvD;;AAGA,sBAAkCD,KAAK,CAACvF,MAAN,CAIhC,UAAC6G,IAAD,EAAOhM,IAAP,EAAaqE,CAAb;AACE,QAAI3E,MAAM,CAAC2E,CAAD,CAAN,CAAUxC,OAAd,EAAuB;AAAA;;AACrBmK,MAAAA,IAAI,CAAC5H,OAAL,CAAarE,SAAS,CAACC,IAAD,CAAtB,4BAAgCN,MAAM,CAAC2E,CAAD,CAAN,CAAU4G,UAA1C,mCAAwD,IAAxD;AACD,KAFD,MAEO;AACLe,MAAAA,IAAI,CAACO,YAAL,CAAkBjI,IAAlB,CAAuBtE,IAAvB;AACD;;AACD,WAAOgM,IAAP;AACD,GAX+B,EAYhC;AAAEO,IAAAA,YAAY,EAAE,EAAhB;AAAoBnI,IAAAA,OAAO,EAAE;AAA7B,GAZgC,CAAlC;AAAA,MAAQmI,YAAR,iBAAQA,YAAR;AAAA,MAAsBnI,OAAtB,iBAAsBA,OAAtB;;;AAgBA,MAAIyC,MAAM,CAACC,IAAP,CAAY1C,OAAZ,EAAqBvD,MAArB,GAA8B,CAAlC,EACEwC,QAAQ,CACNL,OAAO,CAAC4E,sBAAR,CAA+B;AAC7B/E,IAAAA,OAAO,EAAPA,OAD6B;AAE7BuB,IAAAA,OAAO,EAAPA,OAF6B;AAG7BjF,IAAAA,WAAW,EAAEyC;AAHgB,GAA/B,CADM,CAAR;;AASF,MAAI2K,YAAY,CAAC1L,MAAb,GAAsB,CAA1B,EAA6B;AAC3B,QAAI8J,OAAJ,EAAa;AACXjL,MAAAA,MAAM,CAAC8H,OAAP,CAAe,UAACyD,UAAD,EAAauB,EAAb;AACb,YAAI,CAACvB,UAAU,CAACpJ,OAAhB,EAAyB;AACvBE,UAAAA,OAAO,CAACC,KAAR,CAAc,aAAd,EAA6B0I,KAAK,CAAC8B,EAAD,CAAlC,EAAwCvB,UAAxC;AACD;AACF,OAJD;AAKD,KAND,MAMO;AACLlJ,MAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd,EAAwCuK,YAAxC;AACD;;AACDlJ,IAAAA,QAAQ,CACNL,OAAO,CAAC2E,6BAAR,CAAsC;AACpC3G,MAAAA,KAAK,EAAEuL,YAD6B;AAEpC1J,MAAAA,OAAO,EAAPA,OAFoC;AAGpC6E,MAAAA,mBAAmB,EAAE9F;AAHe,KAAtC,CADM,CAAR;AAOD;AACF;;AAED,SAAS6K,mBAAT,CAA6B7J,OAA7B,EAAyD8H,KAAzD,EAAwE7K,KAAxE;AACE,MAAQmD,OAAR,GAA0DJ,OAA1D,CAAQI,OAAR;AAAA,MAAiBK,QAAjB,GAA0DT,OAA1D,CAAiBS,QAAjB;AAAA,MAA2BR,OAA3B,GAA0DD,OAA1D,CAA2BC,OAA3B;AAAA,MAAoCjB,iBAApC,GAA0DgB,OAA1D,CAAoChB,iBAApC;;AAEA,MAAI/B,KAAK,CAAC6M,gBAAV,EAA4B;AAC1B3K,IAAAA,OAAO,CAACC,KAAR,CAAc,iCAAd,EAAiDJ,iBAAjD,EAAoE8I,KAApE,EAA2E7H,OAA3E;AACA;AACD;;AACDd,EAAAA,OAAO,CAAClC,KAAR,CAAc,iCAAd,EAAiD6K,KAAjD,EAAwD7H,OAAxD,EAAiEhD,KAAjE;AACAwD,EAAAA,QAAQ,CACNL,OAAO,CAAC2E,6BAAR,CAAsC;AACpC3G,IAAAA,KAAK,EAAE0J,KAD6B;AAEpC7H,IAAAA,OAAO,EAAPA,OAFoC;AAGpC6E,IAAAA,mBAAmB,EAAE9F;AAHe,GAAtC,CADM,CAAR;AAOD;;AAWD,SAAS+K,OAAT,CAAiBC,KAAjB;AACE,MAAQhK,OAAR,GAAoFgK,KAApF,CAAQhK,OAAR;AAAA,MAAiBC,OAAjB,GAAoF+J,KAApF,CAAiB/J,OAAjB;AAAA,MAA0BjB,iBAA1B,GAAoFgL,KAApF,CAA0BhL,iBAA1B;AAAA,MAA6CyD,QAA7C,GAAoFuH,KAApF,CAA6CvH,QAA7C;AAAA,MAAuDsF,OAAvD,GAAoFiC,KAApF,CAAuDjC,OAAvD;AAAA,MAAgE7H,eAAhE,GAAoF8J,KAApF,CAAgE9J,eAAhE;AACA,MAAQE,OAAR,GAAiCJ,OAAjC,CAAQI,OAAR;AAAA,MAAiBD,WAAjB,GAAiCH,OAAjC,CAAiBG,WAAjB;AACA,MAAMM,QAAQ,GAAGC,sBAAW,EAA5B;;AAGA,MAAIT,OAAO,IAAIC,eAAf,EAAgCO,QAAQ,CAACL,OAAO,CAAC6E,qBAAR,CAA8B;AAAEhF,IAAAA,OAAO,EAAPA,OAAF;AAAWC,IAAAA,eAAe,EAAfA;AAAX,GAA9B,CAAD,CAAR;AAChC,MAAMK,KAAK,GAAGD,sBAAW,CAAC,UAACC,KAAD;AAAA,WAA+BA,KAAK,CAACJ,WAAD,CAApC;AAAA,GAAD,CAAzB;;AAGA,MAAM8J,kBAAkB,GAAG9C,WAAW,CAAC5G,KAAK,CAACoE,aAAP,EAAsB,GAAtB,CAAtC;AACA,MAAMuF,aAAa,GAAG3I,YAAM,EAA5B;AAEA,MAAMiI,aAAa,GAAkC5I,aAAO,CAAC;AAC3D,WAAOsI,mBAAmB,CAACe,kBAAD,EAAqBhK,OAArB,CAA1B;AACD,GAF2D,EAEzD,CAACgK,kBAAD,EAAqBhK,OAArB,CAFyD,CAA5D;AAIA,MAAMkK,0BAA0B,GAAGvJ,aAAO,CAAC;AACzC,QAAMwJ,gBAAgB,GAAGb,qBAAqB,CAAChJ,KAAK,CAACF,WAAP,EAAoBmJ,aAApB,EAAmCvJ,OAAnC,EAA4CjB,iBAA5C,CAA9C;AACA,WAAO6B,IAAI,CAACC,SAAL,CAAesJ,gBAAgB,CAAC3L,IAAjB,EAAf,CAAP;AACD,GAHyC,EAGvC,CAACwB,OAAD,EAAUM,KAAK,CAACF,WAAhB,EAA6BmJ,aAA7B,EAA4CxK,iBAA5C,CAHuC,CAA1C;AAKA+B,EAAAA,eAAS,CAAC;AACR,QAAI,CAAC/B,iBAAD,IAAsB,CAACiB,OAAvB,IAAkC,CAACwC,QAAvC,EAAiD;AAEjD,QAAM2H,gBAAgB,GAAavJ,IAAI,CAACG,KAAL,CAAWmJ,0BAAX,CAAnC;AACA,QAAIC,gBAAgB,CAACnM,MAAjB,KAA4B,CAAhC,EAAmC;AACnC,QAAMG,KAAK,GAAGgM,gBAAgB,CAAC5L,GAAjB,CAAqB,UAACnB,GAAD;AAAA,aAASO,YAAY,CAACP,GAAD,CAArB;AAAA,KAArB,CAAd;AAEA,QAAMgN,YAAY,GAAGnF,UAAU,CAAC9G,KAAD,EAAQjC,eAAR,CAA/B;;AAEA,QAAI+N,aAAa,CAACtI,OAAd,IAAyBsI,aAAa,CAACtI,OAAd,CAAsBrF,WAAtB,KAAsCyC,iBAAnE,EAAsF;AACpFkL,MAAAA,aAAa,CAACtI,OAAd,CAAsBsI,aAAtB,CAAoCtF,OAApC,CAA4C,UAACtG,CAAD;AAAA,eAAOA,CAAC,EAAR;AAAA,OAA5C;AACD;;AAEDmC,IAAAA,QAAQ,CACNL,OAAO,CAACyE,wBAAR,CAAiC;AAC/BzG,MAAAA,KAAK,EAALA,KAD+B;AAE/B6B,MAAAA,OAAO,EAAPA,OAF+B;AAG/B6E,MAAAA,mBAAmB,EAAE9F;AAHU,KAAjC,CADM,CAAR;AAQA,QAAMsL,iBAAiB,GAAG;AACxBlK,MAAAA,OAAO,EAAPA,OADwB;AAExBK,MAAAA,QAAQ,EAARA,QAFwB;AAGxBR,MAAAA,OAAO,EAAPA,OAHwB;AAIxBjB,MAAAA,iBAAiB,EAAjBA,iBAJwB;AAKxB+I,MAAAA,OAAO,EAAPA;AALwB,KAA1B;;AAQA,QAAMwC,gBAAgB,GAAGF,YAAY,CAAC7L,GAAb,CAAiB,UAACsJ,KAAD;AACxC,mBAA4BtB,KAAK,CAC/B;AAAA,eAAMoB,UAAU,CAACnF,QAAD,EAAWqF,KAAX,EAAkB9I,iBAAlB,EAAqC+I,OAArC,CAAhB;AAAA,OAD+B,EAE/BJ,kBAF+B,CAAjC;AAAA,UAAQT,MAAR,UAAQA,MAAR;AAAA,UAAgBH,OAAhB,UAAgBA,OAAhB;;AAIAA,MAAAA,OAAO,CACJyD,IADH,CACQ,UAAC1N,MAAD;AAAA,eAAY4M,mBAAmB,CAACY,iBAAD,EAAoBxC,KAApB,EAA2BhL,MAA3B,CAA/B;AAAA,OADR,WAES,UAACG,KAAD;AAAA,eAAW4M,mBAAmB,CAACS,iBAAD,EAAoBxC,KAApB,EAA2B7K,KAA3B,CAA9B;AAAA,OAFT;AAGA,aAAOiK,MAAP;AACD,KATwB,CAAzB;AAWAgD,IAAAA,aAAa,CAACtI,OAAd,GAAwB;AACtBrF,MAAAA,WAAW,EAAEyC,iBADS;AAEtBkL,MAAAA,aAAa,EAAEK;AAFO,KAAxB;AAID,GA5CQ,EA4CN,CAACnK,OAAD,EAAUH,OAAV,EAAmBwC,QAAnB,EAA6BhC,QAA7B,EAAuC0J,0BAAvC,EAAmEnL,iBAAnE,EAAsF+I,OAAtF,CA5CM,CAAT;AA8CA,SAAO,IAAP;AACD;;AAED,SAAgB0C,cAAczK;AAC5B,MAAM0K,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACV,KAAD;AAC1B,WAAOW,4BAAA,CAACZ,OAAD;AAAS/J,MAAAA,OAAO,EAAEA;OAAagK,MAA/B,CAAP;AACD,GAFD;;AAGA,SAAOU,mBAAP;AACD;;SC9ReE,gBAAgBxJ;;;AAC9B,MAAMjB,WAAW,2BAAGiB,OAAH,oBAAGA,OAAO,CAAEjB,WAAZ,mCAA2B,WAA5C;AACA,MAAM4I,KAAK,GAAG3E,oBAAoB,CAACjE,WAAD,CAAlC;AACA,MAAQC,OAAR,GAA6B2I,KAA7B,CAAQ3I,OAAR;AAAA,MAAiByK,OAAjB,GAA6B9B,KAA7B,CAAiB8B,OAAjB;AACA,MAAM7K,OAAO,GAAqB;AAAEG,IAAAA,WAAW,EAAXA,WAAF;AAAeC,IAAAA,OAAO,EAAPA;AAAf,GAAlC;;AAEA,MAAM4C,+BAA6B,GAAG,SAAhCA,+BAAgC;AAAA,sCAAI8H,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,WACpCC,6BAA8B,MAA9B,UAA+B/K,OAA/B,SAA2C8K,IAA3C,EADoC;AAAA,GAAtC;;AAEA,MAAMtI,+BAA6B,GAAG,SAAhCA,+BAAgC;AAAA,uCAAIsI,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,WACpCE,6BAA8B,MAA9B,UAA+BhL,OAA/B,SAA2C8K,IAA3C,EADoC;AAAA,GAAtC;;AAEA,MAAMzH,+BAA6B,GAAG,SAAhCA,+BAAgC;AAAA,uCAAIyH,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,WACpCG,6BAA8B,MAA9B,UAA+BjL,OAA/B,SAA2C8K,IAA3C,EADoC;AAAA,GAAtC;;AAEA,MAAM3H,qBAAmB,GAAG,SAAtBA,qBAAsB;AAAA,uCAAI2H,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,WAC1BI,mBAAoB,MAApB,UAAqBlL,OAArB,SAAiC8K,IAAjC,EAD0B;AAAA,GAA5B;;AAEA,MAAMvH,sCAAoC,GAAG,SAAvCA,sCAAuC;AAAA,uCACxCuH,IADwC;AACxCA,MAAAA,IADwC;AAAA;;AAAA,WAExCK,oCAAqC,MAArC,UAAsCnL,OAAtC,SAAkD8K,IAAlD,EAFwC;AAAA,GAA7C;;AAGA,MAAMlH,uCAAqC,GAAG,SAAxCA,uCAAwC;AAAA,uCACzCkH,IADyC;AACzCA,MAAAA,IADyC;AAAA;;AAAA,WAEzCM,qCAAsC,MAAtC,UAAuCpL,OAAvC,SAAmD8K,IAAnD,EAFyC;AAAA,GAA9C;;AAGA,MAAMO,KAAK,GAAG;AACZrI,IAAAA,6BAA6B,EAA7BA,+BADY;AAEZR,IAAAA,6BAA6B,EAA7BA,+BAFY;AAGZa,IAAAA,6BAA6B,EAA7BA,+BAHY;AAIZF,IAAAA,mBAAmB,EAAnBA,qBAJY;AAKZI,IAAAA,oCAAoC,EAApCA,sCALY;AAMZK,IAAAA,qCAAqC,EAArCA;AANY,GAAd;AASA,MAAMmG,OAAO,GAAGU,aAAa,CAACzK,OAAD,CAA7B;AAEA,SAAO;AACLG,IAAAA,WAAW,EAAXA,WADK;AAEL0K,IAAAA,OAAO,EAAPA,OAFK;AAGLzK,IAAAA,OAAO,EAAPA,OAHK;AAILiL,IAAAA,KAAK,EAALA,KAJK;AAKLtB,IAAAA,OAAO,EAAPA;AALK,GAAP;AAOD;;;;;;;;;;;;;"}