{"version":3,"file":"index.spec.js","sourceRoot":"","sources":["../src/index.spec.ts"],"names":[],"mappings":";;AAAA,sBAA+B;AAE/B,oFAAoF;AAEpF,IAAM,UAAU,GAAuB;IACrC,CAAC,EAAE,EAAE,CAAC,CAAC;IACP,CAAC,MAAM,EAAE,CAAC,CAAC;IACX,CAAC,aAAa,EAAE,EAAE,CAAC;IACnB,CAAC,aAAa,EAAE,EAAE,CAAC;IACnB,CAAC,QAAQ,EAAE,CAAC,CAAC;IACb,CAAC,aAAa,EAAE,EAAE,CAAC;CACpB,CAAC;AAEF,QAAQ,CAAC,aAAa,EAAE;4BACV,KAAK,EAAE,MAAM;QACvB,EAAE,CAAI,KAAK,YAAO,MAAQ,EAAE;YAC1B,MAAM,CAAC,aAAU,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;;IAHL,KAA8B,UAAU,EAAV,yBAAU,EAAV,wBAAU,EAAV,IAAU;QAA7B,IAAA,qBAAe,EAAd,KAAK,QAAA,EAAE,MAAM,QAAA;gBAAb,KAAK,EAAE,MAAM;KAIxB;AACH,CAAC,CAAC,CAAC","sourcesContent":["import { spongeCase } from \".\";\n\n/* Since strings are non-deterministic, we test string length to ensure integrity */\n\nconst TEST_CASES: [string, number][] = [\n  [\"\", 0],\n  [\"test\", 4],\n  [\"test string\", 11],\n  [\"Test String\", 11],\n  [\"TestV2\", 6],\n  [\"rAnDoM cAsE\", 11],\n];\n\ndescribe(\"random case\", () => {\n  for (const [input, length] of TEST_CASES) {\n    it(`${input} -> ${length}`, () => {\n      expect(spongeCase(input)).toHaveLength(length);\n    });\n  }\n});\n"]}