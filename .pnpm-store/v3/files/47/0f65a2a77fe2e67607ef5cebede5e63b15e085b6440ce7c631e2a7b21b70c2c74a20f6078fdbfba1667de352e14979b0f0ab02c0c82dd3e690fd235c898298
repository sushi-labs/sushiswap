import S,{Fragment as w,createContext as I,useContext as L,useEffect as F,useMemo as g,useReducer as N,useRef as E}from"react";import{match as O}from'../../utils/match.js';import{forwardRefWithAs as k,render as M,Features as _}from'../../utils/render.js';import{optionalRef as G,useSyncRefs as x}from'../../hooks/use-sync-refs.js';import{useId as K}from'../../hooks/use-id.js';import{Keys as y}from'../keyboard.js';import{isDisabledReactIssue7711 as W}from'../../utils/bugs.js';import{OpenClosedProvider as $,State as v,useOpenClosed as q}from'../../internal/open-closed.js';import{useResolveButtonType as z}from'../../hooks/use-resolve-button-type.js';import{getOwnerDocument as J}from'../../utils/owner.js';import{useEvent as R}from'../../hooks/use-event.js';var Q=(o=>(o[o.Open=0]="Open",o[o.Closed=1]="Closed",o))(Q||{}),V=(n=>(n[n.ToggleDisclosure=0]="ToggleDisclosure",n[n.CloseDisclosure=1]="CloseDisclosure",n[n.SetButtonId=2]="SetButtonId",n[n.SetPanelId=3]="SetPanelId",n[n.LinkPanel=4]="LinkPanel",n[n.UnlinkPanel=5]="UnlinkPanel",n))(V||{});let X={[0]:e=>({...e,disclosureState:O(e.disclosureState,{[0]:1,[1]:0})}),[1]:e=>e.disclosureState===1?e:{...e,disclosureState:1},[4](e){return e.linkedPanel===!0?e:{...e,linkedPanel:!0}},[5](e){return e.linkedPanel===!1?e:{...e,linkedPanel:!1}},[2](e,t){return e.buttonId===t.buttonId?e:{...e,buttonId:t.buttonId}},[3](e,t){return e.panelId===t.panelId?e:{...e,panelId:t.panelId}}},B=I(null);B.displayName="DisclosureContext";function h(e){let t=L(B);if(t===null){let o=new Error(`<${e} /> is missing a parent <Disclosure /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(o,h),o}return t}let H=I(null);H.displayName="DisclosureAPIContext";function j(e){let t=L(H);if(t===null){let o=new Error(`<${e} /> is missing a parent <Disclosure /> component.`);throw Error.captureStackTrace&&Error.captureStackTrace(o,j),o}return t}let U=I(null);U.displayName="DisclosurePanelContext";function Y(){return L(U)}function Z(e,t){return O(t.type,X,e,t)}let ee=w,te=k(function(t,o){let{defaultOpen:l=!1,...i}=t,s=`headlessui-disclosure-button-${K()}`,n=`headlessui-disclosure-panel-${K()}`,u=E(null),D=x(o,G(f=>{u.current=f},t.as===void 0||t.as===w)),T=E(null),m=E(null),c=N(Z,{disclosureState:l?0:1,linkedPanel:!1,buttonRef:m,panelRef:T,buttonId:s,panelId:n}),[{disclosureState:p},a]=c;F(()=>a({type:2,buttonId:s}),[s,a]),F(()=>a({type:3,panelId:n}),[n,a]);let P=R(f=>{a({type:1});let C=J(u);if(!C)return;let A=(()=>f?f instanceof HTMLElement?f:f.current instanceof HTMLElement?f.current:C.getElementById(s):C.getElementById(s))();A==null||A.focus()}),b=g(()=>({close:P}),[P]),r=g(()=>({open:p===0,close:P}),[p,P]),d={ref:D};return S.createElement(B.Provider,{value:c},S.createElement(H.Provider,{value:b},S.createElement($,{value:O(p,{[0]:v.Open,[1]:v.Closed})},M({ourProps:d,theirProps:i,slot:r,defaultTag:ee,name:"Disclosure"}))))}),ne="button",le=k(function(t,o){let[l,i]=h("Disclosure.Button"),s=Y(),n=s===null?!1:s===l.panelId,u=E(null),D=x(u,o,n?null:l.buttonRef),T=R(r=>{var d;if(n){if(l.disclosureState===1)return;switch(r.key){case y.Space:case y.Enter:r.preventDefault(),r.stopPropagation(),i({type:0}),(d=l.buttonRef.current)==null||d.focus();break}}else switch(r.key){case y.Space:case y.Enter:r.preventDefault(),r.stopPropagation(),i({type:0});break}}),m=R(r=>{switch(r.key){case y.Space:r.preventDefault();break}}),c=R(r=>{var d;W(r.currentTarget)||t.disabled||(n?(i({type:0}),(d=l.buttonRef.current)==null||d.focus()):i({type:0}))}),p=g(()=>({open:l.disclosureState===0}),[l]),a=z(t,u),P=t,b=n?{ref:D,type:a,onKeyDown:T,onClick:c}:{ref:D,id:l.buttonId,type:a,"aria-expanded":t.disabled?void 0:l.disclosureState===0,"aria-controls":l.linkedPanel?l.panelId:void 0,onKeyDown:T,onKeyUp:m,onClick:c};return M({ourProps:b,theirProps:P,slot:p,defaultTag:ne,name:"Disclosure.Button"})}),oe="div",re=_.RenderStrategy|_.Static,se=k(function(t,o){let[l,i]=h("Disclosure.Panel"),{close:s}=j("Disclosure.Panel"),n=x(o,l.panelRef,p=>{i({type:p?4:5})}),u=q(),D=(()=>u!==null?u===v.Open:l.disclosureState===0)(),T=g(()=>({open:l.disclosureState===0,close:s}),[l,s]),m=t,c={ref:n,id:l.panelId};return S.createElement(U.Provider,{value:l.panelId},M({ourProps:c,theirProps:m,slot:T,defaultTag:oe,features:re,visible:D,name:"Disclosure.Panel"}))}),Oe=Object.assign(te,{Button:le,Panel:se});export{Oe as Disclosure};
