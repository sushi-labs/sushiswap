/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { RebasingMock, RebasingMockInterface } from "../RebasingMock";

const _abi = [
  {
    inputs: [],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elastic",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "elastic",
        type: "uint256",
      },
    ],
    name: "toBase",
    outputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "base",
        type: "uint256",
      },
    ],
    name: "toElastic",
    outputs: [
      {
        internalType: "uint256",
        name: "elastic",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint128",
        name: "elastic",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "base",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610421806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806395f552be1161005057806395f552be146100e3578063c072e81114610104578063d826f88f1461011757600080fd5b80631ab06ee51461006c5780632ddbd13a14610081575b600080fd5b61007f61007a366004610311565b610120565b005b6000546100b5906fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041682565b604080516fffffffffffffffffffffffffffffffff9384168152929091166020830152015b60405180910390f35b6100f66100f1366004610333565b6101aa565b6040519081526020016100da565b6100f6610112366004610333565b6101fa565b61007f60008055565b61012982610244565b600080547fffffffffffffffffffffffffffffffff00000000000000000000000000000000166fffffffffffffffffffffffffffffffff9290921691909117905561017381610244565b600080546fffffffffffffffffffffffffffffffff9283167001000000000000000000000000000000000292169190911790555050565b60408051808201909152600080546fffffffffffffffffffffffffffffffff8082168452700100000000000000000000000000000000909104166020830152906101f49083610268565b92915050565b60408051808201909152600080546fffffffffffffffffffffffffffffffff8082168452700100000000000000000000000000000000909104166020830152906101f490836102c8565b806fffffffffffffffffffffffffffffffff8116811461026357600080fd5b919050565b600082602001516fffffffffffffffffffffffffffffffff16600014156102905750806101f4565b602083015183516fffffffffffffffffffffffffffffffff918216916102b791168461034c565b6102c191906103b0565b9392505050565b81516000906fffffffffffffffffffffffffffffffff166102ea5750806101f4565b825160208401516fffffffffffffffffffffffffffffffff918216916102b791168461034c565b6000806040838503121561032457600080fd5b50508035926020909101359150565b60006020828403121561034557600080fd5b5035919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b6000826103e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b50049056fea26469706673582212200f9ab5e580b9b419b588e5230f7328ec1d20e0e00dc1b955e53529f642bf254764736f6c634300080a0033";

type RebasingMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RebasingMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RebasingMock__factory extends ContractFactory {
  constructor(...args: RebasingMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RebasingMock> {
    return super.deploy(overrides || {}) as Promise<RebasingMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): RebasingMock {
    return super.attach(address) as RebasingMock;
  }
  connect(signer: Signer): RebasingMock__factory {
    return super.connect(signer) as RebasingMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RebasingMockInterface {
    return new utils.Interface(_abi) as RebasingMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RebasingMock {
    return new Contract(address, _abi, signerOrProvider) as RebasingMock;
  }
}
