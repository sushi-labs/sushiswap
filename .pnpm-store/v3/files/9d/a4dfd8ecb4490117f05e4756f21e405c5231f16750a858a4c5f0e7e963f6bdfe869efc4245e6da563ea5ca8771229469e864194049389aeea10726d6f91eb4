{"version":3,"names":["isBinding","isBlockScoped","nodeIsBlockScoped","isExportDeclaration","isExpression","nodeIsExpression","isFlow","nodeIsFlow","isForStatement","isForXStatement","isIdentifier","isImportDeclaration","isImportSpecifier","isJSXIdentifier","isJSXMemberExpression","isMemberExpression","isRestElement","nodeIsRestElement","isReferenced","nodeIsReferenced","isScope","nodeIsScope","isStatement","nodeIsStatement","isVar","nodeIsVar","isVariableDeclaration","react","isForOfStatement","isCompatTag","isReferencedIdentifier","opts","node","parent","name","parentPath","isReferencedMemberExpression","isBindingIdentifier","grandparent","left","init","isUser","loc","isGenerated","isPure","constantsOnly","scope","importKind","exportKind","isRestProperty","isObjectPattern","isSpreadProperty","isObjectExpression","isForAwaitStatement","await","isExistentialTypeParam","Error","isNumericLiteralTypeAnnotation"],"sources":["../../../src/path/lib/virtual-types-validator.ts"],"sourcesContent":["import type NodePath from \"../index\";\nimport {\n  isBinding,\n  isBlockScoped as nodeIsBlockScoped,\n  isExportDeclaration,\n  isExpression as nodeIsExpression,\n  isFlow as nodeIsFlow,\n  isForStatement,\n  isForXStatement,\n  isIdentifier,\n  isImportDeclaration,\n  isImportSpecifier,\n  isJSXIdentifier,\n  isJSXMemberExpression,\n  isMemberExpression,\n  isRestElement as nodeIsRestElement,\n  isReferenced as nodeIsReferenced,\n  isScope as nodeIsScope,\n  isStatement as nodeIsStatement,\n  isVar as nodeIsVar,\n  isVariableDeclaration,\n  react,\n  isForOfStatement,\n} from \"@babel/types\";\nimport type * as t from \"@babel/types\";\nconst { isCompatTag } = react;\nimport type { VirtualTypeAliases } from \"./virtual-types\";\n\nexport interface VirtualTypeNodePathValidators {\n  isBindingIdentifier<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"BindingIdentifier\"]>;\n  isBlockScoped(opts?: object): boolean;\n  /**\n   * @deprecated\n   */\n  isExistentialTypeParam<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"ExistentialTypeParam\"]>;\n  isExpression<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & t.Expression>;\n  isFlow<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & t.Flow>;\n  isForAwaitStatement<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"ForAwaitStatement\"]>;\n  isGenerated(opts?: object): boolean;\n  /**\n   * @deprecated\n   */\n  isNumericLiteralTypeAnnotation(opts?: object): void;\n  isPure(opts?: object): boolean;\n  isReferenced(opts?: object): boolean;\n  isReferencedIdentifier<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"ReferencedIdentifier\"]>;\n  isReferencedMemberExpression<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"ReferencedMemberExpression\"]>;\n  isRestProperty<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & t.RestProperty>;\n  isScope<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"Scope\"]>;\n  isSpreadProperty<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & t.SpreadProperty>;\n  isStatement<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & t.Statement>;\n  isUser(opts?: object): boolean;\n  isVar<T extends t.Node>(\n    this: NodePath<T>,\n    opts?: object,\n  ): this is NodePath<T & VirtualTypeAliases[\"Var\"]>;\n}\n\nexport function isReferencedIdentifier(this: NodePath, opts?: any): boolean {\n  const { node, parent } = this;\n  if (!isIdentifier(node, opts) && !isJSXMemberExpression(parent, opts)) {\n    if (isJSXIdentifier(node, opts)) {\n      if (isCompatTag(node.name)) return false;\n    } else {\n      // not a JSXIdentifier or an Identifier\n      return false;\n    }\n  }\n\n  // check if node is referenced\n  return nodeIsReferenced(node, parent, this.parentPath.parent);\n}\n\nexport function isReferencedMemberExpression(this: NodePath): boolean {\n  const { node, parent } = this;\n  return isMemberExpression(node) && nodeIsReferenced(node, parent);\n}\n\nexport function isBindingIdentifier(this: NodePath): boolean {\n  const { node, parent } = this;\n  const grandparent = this.parentPath.parent;\n  return isIdentifier(node) && isBinding(node, parent, grandparent);\n}\n\nexport function isStatement(this: NodePath): boolean {\n  const { node, parent } = this;\n  if (nodeIsStatement(node)) {\n    if (isVariableDeclaration(node)) {\n      if (isForXStatement(parent, { left: node })) return false;\n      if (isForStatement(parent, { init: node })) return false;\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport function isExpression(this: NodePath): boolean {\n  if (this.isIdentifier()) {\n    return this.isReferencedIdentifier();\n  } else {\n    return nodeIsExpression(this.node);\n  }\n}\n\nexport function isScope(this: NodePath): boolean {\n  return nodeIsScope(this.node, this.parent);\n}\n\nexport function isReferenced(this: NodePath): boolean {\n  return nodeIsReferenced(this.node, this.parent);\n}\n\nexport function isBlockScoped(this: NodePath): boolean {\n  return nodeIsBlockScoped(this.node);\n}\n\nexport function isVar(this: NodePath): boolean {\n  return nodeIsVar(this.node);\n}\n\nexport function isUser(this: NodePath): boolean {\n  return this.node && !!this.node.loc;\n}\n\nexport function isGenerated(this: NodePath): boolean {\n  return !this.isUser();\n}\n\nexport function isPure(this: NodePath, constantsOnly?: boolean): boolean {\n  return this.scope.isPure(this.node, constantsOnly);\n}\n\nexport function isFlow(this: NodePath): boolean {\n  const { node } = this;\n  if (nodeIsFlow(node)) {\n    return true;\n  } else if (isImportDeclaration(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else if (isExportDeclaration(node)) {\n    return node.exportKind === \"type\";\n  } else if (isImportSpecifier(node)) {\n    return node.importKind === \"type\" || node.importKind === \"typeof\";\n  } else {\n    return false;\n  }\n}\n\n// TODO: 7.0 Backwards Compat\nexport function isRestProperty(this: NodePath): boolean {\n  return (\n    nodeIsRestElement(this.node) &&\n    this.parentPath &&\n    this.parentPath.isObjectPattern()\n  );\n}\n\nexport function isSpreadProperty(this: NodePath): boolean {\n  return (\n    nodeIsRestElement(this.node) &&\n    this.parentPath &&\n    this.parentPath.isObjectExpression()\n  );\n}\n\nexport function isForAwaitStatement(this: NodePath): boolean {\n  return isForOfStatement(this.node, { await: true });\n}\n\nexport function isExistentialTypeParam(this: NodePath): void {\n  throw new Error(\n    \"`path.isExistentialTypeParam` has been renamed to `path.isExistsTypeAnnotation()` in Babel 7.\",\n  );\n}\n\nexport function isNumericLiteralTypeAnnotation(this: NodePath): void {\n  throw new Error(\n    \"`path.isNumericLiteralTypeAnnotation()` has been renamed to `path.isNumberLiteralTypeAnnotation()` in Babel 7.\",\n  );\n}\n"],"mappings":"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"}