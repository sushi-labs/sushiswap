/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Compliant,
  ERC20CompliantInterface,
} from "../ERC20Compliant";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "success_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "shouldRevert_",
        type: "bool",
      },
    ],
    name: "setup",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shouldRevert",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "success",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061034c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c806323b872dd1161005057806323b872dd14610119578063a9059cbb14610077578063d3072d821461012c57600080fd5b8063095ea7b3146100775780630b93381b1461009e57806315d98b40146100ab575b600080fd5b61008a61008536600461026d565b61013e565b604051901515815260200160405180910390f35b60005461008a9060ff1681565b6101176100b93660046102a7565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000169215157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169290921761010091151591909102179055565b005b61008a6101273660046102da565b6101c3565b60005461008a90610100900460ff1681565b60008054610100900460ff16156101b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f524556455254000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b5060005460ff1692915050565b60008054610100900460ff1615610236576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600660248201527f524556455254000000000000000000000000000000000000000000000000000060448201526064016101ad565b5060005460ff169392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461026857600080fd5b919050565b6000806040838503121561028057600080fd5b61028983610244565b946020939093013593505050565b8035801515811461026857600080fd5b600080604083850312156102ba57600080fd5b6102c383610297565b91506102d160208401610297565b90509250929050565b6000806000606084860312156102ef57600080fd5b6102f884610244565b925061030660208501610244565b915060408401359050925092509256fea26469706673582212208436f59c72437493762b6236b1871a4cb3259efdcecbdfe248358704925b0adb64736f6c634300080a0033";

type ERC20CompliantConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20CompliantConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Compliant__factory extends ContractFactory {
  constructor(...args: ERC20CompliantConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20Compliant> {
    return super.deploy(overrides || {}) as Promise<ERC20Compliant>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20Compliant {
    return super.attach(address) as ERC20Compliant;
  }
  connect(signer: Signer): ERC20Compliant__factory {
    return super.connect(signer) as ERC20Compliant__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20CompliantInterface {
    return new utils.Interface(_abi) as ERC20CompliantInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Compliant {
    return new Contract(address, _abi, signerOrProvider) as ERC20Compliant;
  }
}
