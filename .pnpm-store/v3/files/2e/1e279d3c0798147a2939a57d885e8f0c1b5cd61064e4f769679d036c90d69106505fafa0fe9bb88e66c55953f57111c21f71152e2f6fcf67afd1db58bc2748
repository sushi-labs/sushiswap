/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MasterDeployer,
  MasterDeployerInterface,
} from "../MasterDeployer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_barFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_barFeeTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bento",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidBarFee",
    type: "error",
  },
  {
    inputs: [],
    name: "NotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "AddToWhitelist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "barFeeTo",
        type: "address",
      },
    ],
    name: "BarFeeToUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "barFee",
        type: "uint256",
      },
    ],
    name: "BarFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "deployData",
        type: "bytes",
      },
    ],
    name: "DeployPool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "factory",
        type: "address",
      },
    ],
    name: "RemoveFromWhitelist",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "barFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "barFeeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bento",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_deployData",
        type: "bytes",
      },
    ],
    name: "deployPool",
    outputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
    ],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_barFee",
        type: "uint256",
      },
    ],
    name: "setBarFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_barFeeTo",
        type: "address",
      },
    ],
    name: "setBarFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelistedFactories",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610ab4380380610ab483398101604081905261002f91610140565b610038336100d4565b61271083111561005b57604051637c2d2d2b60e01b815260040160405180910390fd5b6001600160a01b0382166100825760405163d92e233d60e01b815260040160405180910390fd5b6001600160a01b0381166100a95760405163d92e233d60e01b815260040160405180910390fd5b600192909255600280546001600160a01b0319166001600160a01b039283161790551660805261017c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461013b57600080fd5b919050565b60008060006060848603121561015557600080fd5b8351925061016560208501610124565b915061017360408501610124565b90509250925092565b60805161091d610197600039600061016e015261091d6000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063715018a61161008c578063a4063dbc11610066578063a4063dbc146101fc578063c14ad8021461021f578063e43252d714610236578063f2fde38b1461024957600080fd5b8063715018a6146101c35780638ab1d681146101cb5780638da5cb5b146101de57600080fd5b80633dad8acb116100bd5780633dad8acb146101565780634da31827146101695780636f50f2f41461019057600080fd5b806306e22d12146100e45780630c0a0cd2146100f9578063250558dc14610143575b600080fd5b6100f76100f2366004610799565b61025c565b005b6002546101199073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6101196101513660046107d4565b6102d3565b6100f7610164366004610859565b610461565b6101197f000000000000000000000000000000000000000000000000000000000000000081565b6101b361019e366004610859565b60046020526000908152604090205460ff1681565b604051901515815260200161013a565b6100f76104d8565b6100f76101d9366004610859565b6104ec565b60005473ffffffffffffffffffffffffffffffffffffffff16610119565b6101b361020a366004610859565b60036020526000908152604090205460ff1681565b61022860015481565b60405190815260200161013a565b6100f7610244366004610859565b610568565b6100f7610257366004610859565b6105e7565b6102646106a3565b6127108111156102a0576040517f7c2d2d2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600181905560405181907f880a5214911723edb25bb08410581af1de2e40c52eda03920990c4bc27011fb690600090a250565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604081205460ff16610332576040517f584a793800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f27c3cae100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516906327c3cae190610386908690869060040161087d565b6020604051808303816000875af11580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c991906108ca565b73ffffffffffffffffffffffffffffffffffffffff8082166000818152600360205260409081902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555192935091908616907fe469f9471ac1d98222517eb2cdff1ef4df5f7880269173bb782bb78e499d9de390610452908790879061087d565b60405180910390a39392505050565b6104696106a3565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040517ff774513cf7e21ae3f5ec0ea74c68c431204fb5c1656e7050da0d81ccf9d0831190600090a250565b6104e06106a3565b6104ea6000610724565b565b6104f46106a3565b73ffffffffffffffffffffffffffffffffffffffff811660008181526004602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055517f1f756c8b089af6b33ee121fee8badac2553a2fa89c0575ea91ff8792617746c29190a250565b6105706106a3565b73ffffffffffffffffffffffffffffffffffffffff811660008181526004602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055517f75b2135d1c8c3519f3c09c43fe6527089ef09f40c7981ebf0ed46e79e79032c79190a250565b6105ef6106a3565b73ffffffffffffffffffffffffffffffffffffffff8116610697576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6106a081610724565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104ea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161068e565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156107ab57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff811681146106a057600080fd5b6000806000604084860312156107e957600080fd5b83356107f4816107b2565b9250602084013567ffffffffffffffff8082111561081157600080fd5b818601915086601f83011261082557600080fd5b81358181111561083457600080fd5b87602082850101111561084657600080fd5b6020830194508093505050509250925092565b60006020828403121561086b57600080fd5b8135610876816107b2565b9392505050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6000602082840312156108dc57600080fd5b8151610876816107b256fea2646970667358221220bfcbfbaa5c8a7bd4ef7b98bf9114628f5f94a6f015c0e6770df4a4b51d46ba7064736f6c634300080a0033";

type MasterDeployerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterDeployerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterDeployer__factory extends ContractFactory {
  constructor(...args: MasterDeployerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _barFee: BigNumberish,
    _barFeeTo: string,
    _bento: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterDeployer> {
    return super.deploy(
      _barFee,
      _barFeeTo,
      _bento,
      overrides || {}
    ) as Promise<MasterDeployer>;
  }
  getDeployTransaction(
    _barFee: BigNumberish,
    _barFeeTo: string,
    _bento: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _barFee,
      _barFeeTo,
      _bento,
      overrides || {}
    );
  }
  attach(address: string): MasterDeployer {
    return super.attach(address) as MasterDeployer;
  }
  connect(signer: Signer): MasterDeployer__factory {
    return super.connect(signer) as MasterDeployer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterDeployerInterface {
    return new utils.Interface(_abi) as MasterDeployerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterDeployer {
    return new Contract(address, _abi, signerOrProvider) as MasterDeployer;
  }
}
