{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":"","sourcesContent":["/**\n * Just any type of object indexed by string or numbers where the value can\n * be anything or the provided generic.\n */\nexport interface Dictionary<T = any> {\n  [key: string | number]: T\n}\n\n/**\n * Extends the Dictionary type to allow having arbitrary keys that can hold\n * any type of data. This would represent an object where we can add extra\n * properties what would not be typed.\n */\nexport type ExtendedDictionary<T extends Dictionary> = T & {\n  [key: string | number]: any\n}\n"]}