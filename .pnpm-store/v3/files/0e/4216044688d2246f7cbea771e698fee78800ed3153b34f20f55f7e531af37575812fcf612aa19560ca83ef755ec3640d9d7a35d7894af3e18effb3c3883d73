{"version":3,"file":"use-throttle.js","sources":["../../src/index.tsx","../../node_modules/@react-hook/latest/src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport useLatest from '@react-hook/latest'\n\nconst perf = typeof performance !== 'undefined' ? performance : Date\nconst now = () => perf.now()\n\nexport function useThrottleCallback<CallbackArguments extends any[]>(\n  callback: (...args: CallbackArguments) => void,\n  fps = 30,\n  leading = false\n): (...args: CallbackArguments) => void {\n  const storedCallback = useLatest(callback)\n  const ms = 1000 / fps\n  const prev = React.useRef(0)\n  const trailingTimeout = React.useRef<ReturnType<typeof setTimeout>>()\n  const clearTrailing = () =>\n    trailingTimeout.current && clearTimeout(trailingTimeout.current)\n  const deps = [fps, leading, storedCallback]\n\n  // Reset any time the deps change\n  React.useEffect(\n    () => () => {\n      prev.current = 0\n      clearTrailing()\n    },\n    deps\n  )\n\n  return React.useCallback(function () {\n    // eslint-disable-next-line prefer-rest-params\n    const args = arguments\n    const rightNow = now()\n    const call = () => {\n      prev.current = rightNow\n      clearTrailing()\n      storedCallback.current.apply(null, args as any)\n    }\n    const current = prev.current\n    // leading\n    if (leading && current === 0) return call()\n    // body\n    if (rightNow - current > ms) {\n      if (current > 0) return call()\n      prev.current = rightNow\n    }\n    // trailing\n    clearTrailing()\n    trailingTimeout.current = setTimeout(() => {\n      call()\n      prev.current = 0\n    }, ms)\n  }, deps)\n}\n\nexport function useThrottle<State>(\n  initialState: State | (() => State),\n  fps?: number,\n  leading?: boolean\n): [State, React.Dispatch<React.SetStateAction<State>>] {\n  const state = React.useState<State>(initialState)\n  return [state[0], useThrottleCallback(state[1], fps, leading)]\n}\n","import * as React from 'react'\n\nconst useLatest = <T extends any>(current: T) => {\n  const storedValue = React.useRef(current)\n  storedValue.current = current\n  return storedValue\n}\n\nexport default useLatest\n"],"names":["useThrottleCallback","callback","fps","leading","prev","current","clearTrailing","storedValue","storedCallback","React","ms","trailingTimeout","clearTimeout","deps","args","arguments","rightNow","now","call","apply","setTimeout","perf","performance","Date","initialState","state"],"mappings":"4OAMO,SAASA,EACdC,EACAC,EACAC,gBAaIC,EAAKC,QAAU,EACfC,aAfJJ,IAAAA,EAAM,aACNC,IAAAA,EAAU,OCPsBE,EAC1BE,EDQAC,GCT0BH,EDSCJ,GCR3BM,EAAcE,SAAaJ,IACrBA,QAAUA,EACfE,GDODG,EAAK,IAAOR,EACZE,EAAOK,SAAa,GACpBE,EAAkBF,WAClBH,EAAgB,kBACpBK,EAAgBN,SAAWO,aAAaD,EAAgBN,UACpDQ,EAAO,CAACX,EAAKC,EAASK,UAG5BC,aACE,sBAIAI,GAGKJ,eAAkB,eAEjBK,EAAOC,UACPC,EAAWC,IACXC,EAAO,WACXd,EAAKC,QAAUW,EACfV,IACAE,EAAeH,QAAQc,MAAM,KAAML,IAE/BT,EAAUD,EAAKC,WAEjBF,GAAuB,IAAZE,EAAe,OAAOa,OAEjCF,EAAWX,EAAUK,EAAI,IACvBL,EAAU,EAAG,OAAOa,IACxBd,EAAKC,QAAUW,EAGjBV,IACAK,EAAgBN,QAAUe,YAAW,WACnCF,IACAd,EAAKC,QAAU,IACdK,KACFG,GCjDL,IDCMQ,EAA8B,oBAAhBC,YAA8BA,YAAcC,KAC1DN,EAAM,kBAAMI,EAAKJ,qBAkDhB,SACLO,EACAtB,EACAC,OAEMsB,EAAQhB,WAAsBe,SAC7B,CAACC,EAAM,GAAIzB,EAAoByB,EAAM,GAAIvB,EAAKC"}