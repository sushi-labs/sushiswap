{"version":3,"file":"vest.module.js","sources":["../src/vest.ts"],"sourcesContent":["import { toNestError, validateFieldsNatively } from '@hookform/resolvers';\nimport { FieldError } from 'react-hook-form';\nimport promisify from 'vest/promisify';\nimport type { VestErrors, Resolver } from './types';\n\nconst parseErrorSchema = (\n  vestError: VestErrors,\n  validateAllFieldCriteria: boolean,\n) => {\n  const errors: Record<string, FieldError> = {};\n  for (const path in vestError) {\n    if (!errors[path]) {\n      errors[path] = { message: vestError[path][0], type: '' };\n    }\n\n    if (validateAllFieldCriteria) {\n      errors[path].types = vestError[path].reduce<Record<number, string>>(\n        (acc, message, index) => (acc[index] = message) && acc,\n        {},\n      );\n    }\n  }\n  return errors;\n};\n\nexport const vestResolver: Resolver =\n  (schema, _, resolverOptions = {}) =>\n  async (values, _context, options) => {\n    const result =\n      resolverOptions.mode === 'sync'\n        ? schema(values)\n        : await promisify(schema)(values);\n\n    if (result.hasErrors()) {\n      return {\n        values: {},\n        errors: toNestError(\n          parseErrorSchema(\n            result.getErrors(),\n            !options.shouldUseNativeValidation &&\n              options.criteriaMode === 'all',\n          ),\n          options,\n        ),\n      };\n    }\n\n    options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n    return { values, errors: {} };\n  };\n"],"names":["parseErrorSchema","vestError","validateAllFieldCriteria","errors","path","message","type","types","reduce","acc","index","vestResolver","schema","_","resolverOptions","values","_context","options","result","hasErrors","toNestError","getErrors","shouldUseNativeValidation","criteriaMode","validateFieldsNatively","mode","promisify"],"mappings":"4GAKA,IAAMA,EAAmB,SACvBC,EACAC,GAEA,IAAMC,EAAqC,GAC3C,IAAK,IAAMC,KAAQH,EACZE,EAAOC,KACVD,EAAOC,GAAQ,CAAEC,QAASJ,EAAUG,GAAM,GAAIE,KAAM,KAGlDJ,IACFC,EAAOC,GAAMG,MAAQN,EAAUG,GAAMI,OACnC,SAACC,EAAKJ,EAASK,UAAWD,EAAIC,GAASL,IAAYI,GACnD,KAIN,OAAON,GAGIQ,EACX,SAACC,EAAQC,EAAGC,mBAAAA,IAAAA,EAAkB,aACvBC,EAAQC,EAAUC,sBACjBC,GAKN,OAAIA,EAAOC,YACF,CACLJ,OAAQ,GACRZ,OAAQiB,EACNpB,EACEkB,EAAOG,aACNJ,EAAQK,2BACkB,QAAzBL,EAAQM,cAEZN,KAKNA,EAAQK,2BAA6BE,EAAuB,GAAIP,GAEzD,CAAEF,OAAAA,EAAQZ,OAAQ,6BApBE,SAAzBW,EAAgBW,OACZb,EAAOG,oBACDW,EAAUd,EAAVc,CAAkBX,aALhC"}