{"version":3,"file":"useArrowContainer.js","sourceRoot":"","sources":["../src/useArrowContainer.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,+BAAgC;AAGzB,IAAM,iBAAiB,GAAG,UAAC,EAMT;QALvB,SAAS,eAAA,EACT,WAAW,iBAAA,EACX,QAAQ,cAAA,EACR,SAAS,eAAA,EACT,UAAU,gBAAA;IAEV,IAAM,mBAAmB,GAAG,eAAO,CACjC;QACE,OAAA,CAAC;YACC,OAAO,EAAE,SAAS;SACK,CAAA;IAFzB,CAEyB,EAC3B,CAAC,SAAS,CAAC,CACZ,CAAC;IAEF,IAAM,UAAU,GAAG,eAAO,CACxB;QACE,OAAA,CAAC,WACC,QAAQ,EAAE,UAAU,IACjB,CAAC;YACF,IAAM,UAAU,GAAG,SAAS,GAAG,CAAC,CAAC;YACjC,IAAI,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,WAAW,CAAC,GAAG,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;YAClF,IAAI,IAAI,GAAG,SAAS,CAAC,IAAI,GAAG,WAAW,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,GAAG,CAAC,GAAG,UAAU,GAAG,CAAC,CAAC;YAEpF,IAAM,UAAU,GAAG,SAAS,CAAC;YAC7B,IAAM,cAAc,GAAG,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC;YACrD,IAAM,aAAa,GAAG,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC;YAErD,IAAI,GAAG,IAAI,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;YAC7C,IAAI,GAAG,IAAI,GAAG,UAAU,GAAG,cAAc,CAAC,CAAC,CAAC,cAAc,GAAG,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC;YAC/E,GAAG,GAAG,GAAG,GAAG,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC;YAC1C,GAAG,GAAG,GAAG,GAAG,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,aAAa,GAAG,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC;YAE1E,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;YAClC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAErC,QAAQ,QAAQ,EAAE;gBAChB,KAAK,OAAO;oBACV,OAAO;wBACL,SAAS,EAAK,SAAS,yBAAsB;wBAC7C,YAAY,EAAK,SAAS,yBAAsB;wBAChD,WAAW,EAAK,SAAS,iBAAY,UAAY;wBACjD,IAAI,EAAE,CAAC;wBACP,GAAG,KAAA;qBACJ,CAAC;gBACJ,KAAK,MAAM;oBACT,OAAO;wBACL,SAAS,EAAK,SAAS,yBAAsB;wBAC7C,YAAY,EAAK,SAAS,yBAAsB;wBAChD,UAAU,EAAK,SAAS,iBAAY,UAAY;wBAChD,KAAK,EAAE,CAAC;wBACR,GAAG,KAAA;qBACJ,CAAC;gBACJ,KAAK,QAAQ;oBACX,OAAO;wBACL,UAAU,EAAK,SAAS,yBAAsB;wBAC9C,WAAW,EAAK,SAAS,yBAAsB;wBAC/C,YAAY,EAAK,SAAS,iBAAY,UAAY;wBAClD,GAAG,EAAE,CAAC;wBACN,IAAI,MAAA;qBACL,CAAC;gBACJ,KAAK,KAAK;oBACR,OAAO;wBACL,UAAU,EAAK,SAAS,yBAAsB;wBAC9C,WAAW,EAAK,SAAS,yBAAsB;wBAC/C,SAAS,EAAK,SAAS,iBAAY,UAAY;wBAC/C,MAAM,EAAE,CAAC;wBACT,IAAI,MAAA;qBACL,CAAC;gBACJ;oBACE,OAAO;wBACL,OAAO,EAAE,QAAQ;qBAClB,CAAC;aACL;QACH,CAAC,CAAC,EAAE,CACmB,CAAA;IA1DzB,CA0DyB,EAC3B;QACE,UAAU;QACV,SAAS;QACT,SAAS,CAAC,MAAM;QAChB,SAAS,CAAC,IAAI;QACd,SAAS,CAAC,GAAG;QACb,SAAS,CAAC,KAAK;QACf,WAAW,CAAC,MAAM;QAClB,WAAW,CAAC,IAAI;QAChB,WAAW,CAAC,GAAG;QACf,WAAW,CAAC,KAAK;QACjB,QAAQ;KACT,CACF,CAAC;IAEF,OAAO;QACL,mBAAmB,qBAAA;QACnB,UAAU,YAAA;KACX,CAAC;AACJ,CAAC,CAAC;AA/FW,QAAA,iBAAiB,qBA+F5B","sourcesContent":["import { useMemo } from 'react';\nimport { UseArrowContainerProps } from '.';\n\nexport const useArrowContainer = ({\n  childRect,\n  popoverRect,\n  position,\n  arrowSize,\n  arrowColor,\n}: UseArrowContainerProps) => {\n  const arrowContainerStyle = useMemo(\n    () =>\n      ({\n        padding: arrowSize,\n      } as React.CSSProperties),\n    [arrowSize],\n  );\n\n  const arrowStyle = useMemo(\n    () =>\n      ({\n        position: 'absolute',\n        ...((): React.CSSProperties => {\n          const arrowWidth = arrowSize * 2;\n          let top = childRect.top - popoverRect.top + childRect.height / 2 - arrowWidth / 2;\n          let left = childRect.left - popoverRect.left + childRect.width / 2 - arrowWidth / 2;\n\n          const lowerBound = arrowSize;\n          const leftUpperBound = popoverRect.width - arrowSize;\n          const topUpperBound = popoverRect.height - arrowSize;\n\n          left = left < lowerBound ? lowerBound : left;\n          left = left + arrowWidth > leftUpperBound ? leftUpperBound - arrowWidth : left;\n          top = top < lowerBound ? lowerBound : top;\n          top = top + arrowWidth > topUpperBound ? topUpperBound - arrowWidth : top;\n\n          top = Number.isNaN(top) ? 0 : top;\n          left = Number.isNaN(left) ? 0 : left;\n\n          switch (position) {\n            case 'right':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid ${arrowColor}`,\n                left: 0,\n                top,\n              };\n            case 'left':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderLeft: `${arrowSize}px solid ${arrowColor}`,\n                right: 0,\n                top,\n              };\n            case 'bottom':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid ${arrowColor}`,\n                top: 0,\n                left,\n              };\n            case 'top':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderTop: `${arrowSize}px solid ${arrowColor}`,\n                bottom: 0,\n                left,\n              };\n            default:\n              return {\n                display: 'hidden',\n              };\n          }\n        })(),\n      } as React.CSSProperties),\n    [\n      arrowColor,\n      arrowSize,\n      childRect.height,\n      childRect.left,\n      childRect.top,\n      childRect.width,\n      popoverRect.height,\n      popoverRect.left,\n      popoverRect.top,\n      popoverRect.width,\n      position,\n    ],\n  );\n\n  return {\n    arrowContainerStyle,\n    arrowStyle,\n  };\n};\n"]}