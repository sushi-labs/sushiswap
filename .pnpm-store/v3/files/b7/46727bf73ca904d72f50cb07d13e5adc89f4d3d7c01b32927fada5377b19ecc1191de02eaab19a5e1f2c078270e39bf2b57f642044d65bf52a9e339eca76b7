{"version":3,"file":"index.js","sources":["../dist-src/index.js"],"sourcesContent":["export function oauthAuthorizationUrl(options) {\n    const clientType = options.clientType || \"oauth-app\";\n    const baseUrl = options.baseUrl || \"https://github.com\";\n    const result = {\n        clientType,\n        allowSignup: options.allowSignup === false ? false : true,\n        clientId: options.clientId,\n        login: options.login || null,\n        redirectUrl: options.redirectUrl || null,\n        state: options.state || Math.random().toString(36).substr(2),\n        url: \"\",\n    };\n    if (clientType === \"oauth-app\") {\n        const scopes = \"scopes\" in options ? options.scopes : [];\n        result.scopes =\n            typeof scopes === \"string\"\n                ? scopes.split(/[,\\s]+/).filter(Boolean)\n                : scopes;\n    }\n    result.url = urlBuilderAuthorize(`${baseUrl}/login/oauth/authorize`, result);\n    return result;\n}\nfunction urlBuilderAuthorize(base, options) {\n    const map = {\n        allowSignup: \"allow_signup\",\n        clientId: \"client_id\",\n        login: \"login\",\n        redirectUrl: \"redirect_uri\",\n        scopes: \"scope\",\n        state: \"state\",\n    };\n    let url = base;\n    Object.keys(map)\n        // Filter out keys that are null and remove the url key\n        .filter((k) => options[k] !== null)\n        // Filter out empty scopes array\n        .filter((k) => {\n        if (k !== \"scopes\")\n            return true;\n        if (options.clientType === \"github-app\")\n            return false;\n        return !Array.isArray(options[k]) || options[k].length > 0;\n    })\n        // Map Array with the proper URL parameter names and change the value to a string using template strings\n        // @ts-ignore\n        .map((key) => [map[key], `${options[key]}`])\n        // Finally, build the URL\n        .forEach(([key, value], index) => {\n        url += index === 0 ? `?` : \"&\";\n        url += `${key}=${encodeURIComponent(value)}`;\n    });\n    return url;\n}\n"],"names":["oauthAuthorizationUrl","options","clientType","baseUrl","result","allowSignup","clientId","login","redirectUrl","state","Math","random","toString","substr","url","scopes","split","filter","Boolean","urlBuilderAuthorize","base","map","Object","keys","k","Array","isArray","length","key","forEach","value","index","encodeURIComponent"],"mappings":";;;;AAAO,SAASA,qBAAT,CAA+BC,OAA/B,EAAwC;AAC3C,QAAMC,UAAU,GAAGD,OAAO,CAACC,UAAR,IAAsB,WAAzC;AACA,QAAMC,OAAO,GAAGF,OAAO,CAACE,OAAR,IAAmB,oBAAnC;AACA,QAAMC,MAAM,GAAG;AACXF,IAAAA,UADW;AAEXG,IAAAA,WAAW,EAAEJ,OAAO,CAACI,WAAR,KAAwB,KAAxB,GAAgC,KAAhC,GAAwC,IAF1C;AAGXC,IAAAA,QAAQ,EAAEL,OAAO,CAACK,QAHP;AAIXC,IAAAA,KAAK,EAAEN,OAAO,CAACM,KAAR,IAAiB,IAJb;AAKXC,IAAAA,WAAW,EAAEP,OAAO,CAACO,WAAR,IAAuB,IALzB;AAMXC,IAAAA,KAAK,EAAER,OAAO,CAACQ,KAAR,IAAiBC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,CANb;AAOXC,IAAAA,GAAG,EAAE;AAPM,GAAf;;AASA,MAAIZ,UAAU,KAAK,WAAnB,EAAgC;AAC5B,UAAMa,MAAM,GAAG,YAAYd,OAAZ,GAAsBA,OAAO,CAACc,MAA9B,GAAuC,EAAtD;AACAX,IAAAA,MAAM,CAACW,MAAP,GACI,OAAOA,MAAP,KAAkB,QAAlB,GACMA,MAAM,CAACC,KAAP,CAAa,QAAb,EAAuBC,MAAvB,CAA8BC,OAA9B,CADN,GAEMH,MAHV;AAIH;;AACDX,EAAAA,MAAM,CAACU,GAAP,GAAaK,mBAAmB,CAAE,GAAEhB,OAAQ,wBAAZ,EAAqCC,MAArC,CAAhC;AACA,SAAOA,MAAP;AACH;;AACD,SAASe,mBAAT,CAA6BC,IAA7B,EAAmCnB,OAAnC,EAA4C;AACxC,QAAMoB,GAAG,GAAG;AACRhB,IAAAA,WAAW,EAAE,cADL;AAERC,IAAAA,QAAQ,EAAE,WAFF;AAGRC,IAAAA,KAAK,EAAE,OAHC;AAIRC,IAAAA,WAAW,EAAE,cAJL;AAKRO,IAAAA,MAAM,EAAE,OALA;AAMRN,IAAAA,KAAK,EAAE;AANC,GAAZ;AAQA,MAAIK,GAAG,GAAGM,IAAV;AACAE,EAAAA,MAAM,CAACC,IAAP,CAAYF,GAAZ;AAAA,GAEKJ,MAFL,CAEaO,CAAD,IAAOvB,OAAO,CAACuB,CAAD,CAAP,KAAe,IAFlC;AAAA,GAIKP,MAJL,CAIaO,CAAD,IAAO;AACf,QAAIA,CAAC,KAAK,QAAV,EACI,OAAO,IAAP;AACJ,QAAIvB,OAAO,CAACC,UAAR,KAAuB,YAA3B,EACI,OAAO,KAAP;AACJ,WAAO,CAACuB,KAAK,CAACC,OAAN,CAAczB,OAAO,CAACuB,CAAD,CAArB,CAAD,IAA8BvB,OAAO,CAACuB,CAAD,CAAP,CAAWG,MAAX,GAAoB,CAAzD;AACH,GAVD;AAYI;AAZJ,GAaKN,GAbL,CAaUO,GAAD,IAAS,CAACP,GAAG,CAACO,GAAD,CAAJ,EAAY,GAAE3B,OAAO,CAAC2B,GAAD,CAAM,EAA3B,CAblB;AAAA,GAeKC,OAfL,CAea,CAAC,CAACD,GAAD,EAAME,KAAN,CAAD,EAAeC,KAAf,KAAyB;AAClCjB,IAAAA,GAAG,IAAIiB,KAAK,KAAK,CAAV,GAAe,GAAf,GAAoB,GAA3B;AACAjB,IAAAA,GAAG,IAAK,GAAEc,GAAI,IAAGI,kBAAkB,CAACF,KAAD,CAAQ,EAA3C;AACH,GAlBD;AAmBA,SAAOhB,GAAP;AACH;;;;"}