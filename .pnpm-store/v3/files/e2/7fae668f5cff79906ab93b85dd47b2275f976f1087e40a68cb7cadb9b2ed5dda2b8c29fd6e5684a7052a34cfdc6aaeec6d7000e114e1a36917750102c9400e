{"version":3,"file":"index.js","sources":["../dist-src/get-oauth-access-token.js","../dist-src/auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import { createDeviceCode, exchangeDeviceCode } from \"@octokit/oauth-methods\";\nexport async function getOAuthAccessToken(state, options) {\n    const cachedAuthentication = getCachedAuthentication(state, options.auth);\n    if (cachedAuthentication)\n        return cachedAuthentication;\n    // Step 1: Request device and user codes\n    // https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-1-app-requests-the-device-and-user-verification-codes-from-github\n    const { data: verification } = await createDeviceCode({\n        clientType: state.clientType,\n        clientId: state.clientId,\n        request: options.request || state.request,\n        // @ts-expect-error the extra code to make TS happy is not worth it\n        scopes: options.auth.scopes || state.scopes,\n    });\n    // Step 2: User must enter the user code on https://github.com/login/device\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-2-prompt-the-user-to-enter-the-user-code-in-a-browser\n    await state.onVerification(verification);\n    // Step 3: Exchange device code for access token\n    // See https://docs.github.com/en/developers/apps/authorizing-oauth-apps#step-3-app-polls-github-to-check-if-the-user-authorized-the-device\n    const authentication = await waitForAccessToken(options.request || state.request, state.clientId, state.clientType, verification);\n    state.authentication = authentication;\n    return authentication;\n}\nfunction getCachedAuthentication(state, auth) {\n    if (auth.refresh === true)\n        return false;\n    if (!state.authentication)\n        return false;\n    if (state.clientType === \"github-app\") {\n        return state.authentication;\n    }\n    const authentication = state.authentication;\n    const newScope = ((\"scopes\" in auth && auth.scopes) || state.scopes).join(\" \");\n    const currentScope = authentication.scopes.join(\" \");\n    return newScope === currentScope ? authentication : false;\n}\nasync function wait(seconds) {\n    await new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n}\nasync function waitForAccessToken(request, clientId, clientType, verification) {\n    try {\n        const options = {\n            clientId,\n            request,\n            code: verification.device_code,\n        };\n        // WHY TYPESCRIPT WHY ARE YOU DOING THIS TO ME\n        const { authentication } = clientType === \"oauth-app\"\n            ? await exchangeDeviceCode({\n                ...options,\n                clientType: \"oauth-app\",\n            })\n            : await exchangeDeviceCode({\n                ...options,\n                clientType: \"github-app\",\n            });\n        return {\n            type: \"token\",\n            tokenType: \"oauth\",\n            ...authentication,\n        };\n    }\n    catch (error) {\n        // istanbul ignore if\n        if (!error.response)\n            throw error;\n        const errorType = error.response.data.error;\n        if (errorType === \"authorization_pending\") {\n            await wait(verification.interval);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        if (errorType === \"slow_down\") {\n            await wait(verification.interval + 5);\n            return waitForAccessToken(request, clientId, clientType, verification);\n        }\n        throw error;\n    }\n}\n","import { getOAuthAccessToken } from \"./get-oauth-access-token\";\nexport async function auth(state, authOptions) {\n    return getOAuthAccessToken(state, {\n        auth: authOptions,\n    });\n}\n","import { getOAuthAccessToken } from \"./get-oauth-access-token\";\nexport async function hook(state, request, route, parameters) {\n    let endpoint = request.endpoint.merge(route, parameters);\n    // Do not intercept request to retrieve codes or token\n    if (/\\/login\\/(oauth\\/access_token|device\\/code)$/.test(endpoint.url)) {\n        return request(endpoint);\n    }\n    const { token } = await getOAuthAccessToken(state, {\n        request,\n        auth: { type: \"oauth\" },\n    });\n    endpoint.headers.authorization = `token ${token}`;\n    return request(endpoint);\n}\n","export const VERSION = \"4.0.0\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as octokitRequest } from \"@octokit/request\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { VERSION } from \"./version\";\nexport function createOAuthDeviceAuth(options) {\n    const requestWithDefaults = options.request ||\n        octokitRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-oauth-device.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const { request = requestWithDefaults, ...otherOptions } = options;\n    const state = options.clientType === \"github-app\"\n        ? {\n            ...otherOptions,\n            clientType: \"github-app\",\n            request,\n        }\n        : {\n            ...otherOptions,\n            clientType: \"oauth-app\",\n            request,\n            scopes: options.scopes || [],\n        };\n    if (!options.clientId) {\n        throw new Error('[@octokit/auth-oauth-device] \"clientId\" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    if (!options.onVerification) {\n        throw new Error('[@octokit/auth-oauth-device] \"onVerification\" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');\n    }\n    // @ts-ignore too much for tsc / ts-jest ¯\\_(ツ)_/¯\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n"],"names":["getOAuthAccessToken","state","options","cachedAuthentication","getCachedAuthentication","auth","data","verification","createDeviceCode","clientType","clientId","request","scopes","onVerification","authentication","waitForAccessToken","refresh","newScope","join","currentScope","wait","seconds","Promise","resolve","setTimeout","code","device_code","exchangeDeviceCode","type","tokenType","error","response","errorType","interval","authOptions","hook","route","parameters","endpoint","merge","test","url","token","headers","authorization","VERSION","createOAuthDeviceAuth","requestWithDefaults","octokitRequest","defaults","getUserAgent","otherOptions","Error","Object","assign","bind"],"mappings":"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"}