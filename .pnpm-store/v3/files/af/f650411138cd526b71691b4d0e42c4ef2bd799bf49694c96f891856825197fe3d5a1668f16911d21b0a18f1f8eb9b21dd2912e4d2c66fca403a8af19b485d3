{"version":3,"file":"superstruct.modern.js","sources":["../src/superstruct.ts"],"sourcesContent":["import { FieldError } from 'react-hook-form';\nimport { toNestError, validateFieldsNatively } from '@hookform/resolvers';\n\nimport { StructError, validate } from 'superstruct';\nimport { Resolver } from './types';\n\nconst parseErrorSchema = (error: StructError) =>\n  error.failures().reduce<Record<string, FieldError>>(\n    (previous, error) =>\n      (previous[error.path.join('.')] = {\n        message: error.message,\n        type: error.type,\n      }) && previous,\n    {},\n  );\n\nexport const superstructResolver: Resolver =\n  (schema, resolverOptions) => (values, _, options) => {\n    const result = validate(values, schema, resolverOptions);\n\n    if (result[0]) {\n      return {\n        values: {},\n        errors: toNestError(parseErrorSchema(result[0]), options),\n      };\n    }\n\n    options.shouldUseNativeValidation && validateFieldsNatively({}, options);\n\n    return {\n      values: result[1],\n      errors: {},\n    };\n  };\n"],"names":["superstructResolver","schema","resolverOptions","values","_","options","result","validate","errors","toNestError","error","failures","reduce","previous","path","join","message","type","shouldUseNativeValidation","validateFieldsNatively"],"mappings":"qHAMA,MAUaA,EACX,CAACC,EAAQC,IAAoB,CAACC,EAAQC,EAAGC,KACvC,MAAMC,EAASC,EAASJ,EAAQF,EAAQC,GAExC,OAAII,EAAO,GACF,CACLH,OAAQ,GACRK,OAAQC,GAjBUC,EAiBmBJ,EAAO,GAhBlDI,EAAMC,WAAWC,OACf,CAACC,EAAUH,KACRG,EAASH,EAAMI,KAAKC,KAAK,MAAQ,CAChCC,QAASN,EAAMM,QACfC,KAAMP,EAAMO,QACRJ,EACR,KAUqDR,KAIrDA,EAAQa,2BAA6BC,EAAuB,GAAId,GAEzD,CACLF,OAAQG,EAAO,GACfE,OAAQ,KAzBYE,IAAAA"}