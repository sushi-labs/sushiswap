{"version":3,"file":"index.js","sources":["../dist-src/get-app-authentication.js","../dist-src/cache.js","../dist-src/to-token-authentication.js","../dist-src/get-installation-authentication.js","../dist-src/auth.js","../dist-src/requires-app-auth.js","../dist-src/hook.js","../dist-src/version.js","../dist-src/index.js"],"sourcesContent":["import { githubAppJwt } from \"universal-github-app-jwt\";\nexport async function getAppAuthentication({ appId, privateKey, timeDifference, }) {\n    try {\n        const appAuthentication = await githubAppJwt({\n            id: +appId,\n            privateKey,\n            now: timeDifference && Math.floor(Date.now() / 1000) + timeDifference,\n        });\n        return {\n            type: \"app\",\n            token: appAuthentication.token,\n            appId: appAuthentication.appId,\n            expiresAt: new Date(appAuthentication.expiration * 1000).toISOString(),\n        };\n    }\n    catch (error) {\n        if (privateKey === \"-----BEGIN RSA PRIVATE KEY-----\") {\n            throw new Error(\"The 'privateKey` option contains only the first line '-----BEGIN RSA PRIVATE KEY-----'. If you are setting it using a `.env` file, make sure it is set on a single line with newlines replaced by '\\n'\");\n        }\n        else {\n            throw error;\n        }\n    }\n}\n","// https://github.com/isaacs/node-lru-cache#readme\nimport LRU from \"lru-cache\";\nexport function getCache() {\n    return new LRU({\n        // cache max. 15000 tokens, that will use less than 10mb memory\n        max: 15000,\n        // Cache for 1 minute less than GitHub expiry\n        maxAge: 1000 * 60 * 59,\n    });\n}\nexport async function get(cache, options) {\n    const cacheKey = optionsToCacheKey(options);\n    const result = await cache.get(cacheKey);\n    if (!result) {\n        return;\n    }\n    const [token, createdAt, expiresAt, repositorySelection, permissionsString, singleFileName,] = result.split(\"|\");\n    const permissions = options.permissions ||\n        permissionsString.split(/,/).reduce((permissions, string) => {\n            if (/!$/.test(string)) {\n                permissions[string.slice(0, -1)] = \"write\";\n            }\n            else {\n                permissions[string] = \"read\";\n            }\n            return permissions;\n        }, {});\n    return {\n        token,\n        createdAt,\n        expiresAt,\n        permissions,\n        repositoryIds: options.repositoryIds,\n        repositoryNames: options.repositoryNames,\n        singleFileName,\n        repositorySelection: repositorySelection,\n    };\n}\nexport async function set(cache, options, data) {\n    const key = optionsToCacheKey(options);\n    const permissionsString = options.permissions\n        ? \"\"\n        : Object.keys(data.permissions)\n            .map((name) => `${name}${data.permissions[name] === \"write\" ? \"!\" : \"\"}`)\n            .join(\",\");\n    const value = [\n        data.token,\n        data.createdAt,\n        data.expiresAt,\n        data.repositorySelection,\n        permissionsString,\n        data.singleFileName,\n    ].join(\"|\");\n    await cache.set(key, value);\n}\nfunction optionsToCacheKey({ installationId, permissions = {}, repositoryIds = [], repositoryNames = [], }) {\n    const permissionsString = Object.keys(permissions)\n        .sort()\n        .map((name) => (permissions[name] === \"read\" ? name : `${name}!`))\n        .join(\",\");\n    const repositoryIdsString = repositoryIds.sort().join(\",\");\n    const repositoryNamesString = repositoryNames.join(\",\");\n    return [\n        installationId,\n        repositoryIdsString,\n        repositoryNamesString,\n        permissionsString,\n    ]\n        .filter(Boolean)\n        .join(\"|\");\n}\n","export function toTokenAuthentication({ installationId, token, createdAt, expiresAt, repositorySelection, permissions, repositoryIds, repositoryNames, singleFileName, }) {\n    return Object.assign({\n        type: \"token\",\n        tokenType: \"installation\",\n        token,\n        installationId,\n        permissions,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n    }, repositoryIds ? { repositoryIds } : null, repositoryNames ? { repositoryNames } : null, singleFileName ? { singleFileName } : null);\n}\n","import { get, set } from \"./cache\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { toTokenAuthentication } from \"./to-token-authentication\";\nexport async function getInstallationAuthentication(state, options, customRequest) {\n    const installationId = Number(options.installationId || state.installationId);\n    if (!installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId option is required for installation authentication.\");\n    }\n    if (options.factory) {\n        const { type, factory, oauthApp, ...factoryAuthOptions } = {\n            ...state,\n            ...options,\n        };\n        // @ts-expect-error if `options.factory` is set, the return type for `auth()` should be `Promise<ReturnType<options.factory>>`\n        return factory(factoryAuthOptions);\n    }\n    const optionsWithInstallationTokenFromState = Object.assign({ installationId }, options);\n    if (!options.refresh) {\n        const result = await get(state.cache, optionsWithInstallationTokenFromState);\n        if (result) {\n            const { token, createdAt, expiresAt, permissions, repositoryIds, repositoryNames, singleFileName, repositorySelection, } = result;\n            return toTokenAuthentication({\n                installationId,\n                token,\n                createdAt,\n                expiresAt,\n                permissions,\n                repositorySelection,\n                repositoryIds,\n                repositoryNames,\n                singleFileName,\n            });\n        }\n    }\n    const appAuthentication = await getAppAuthentication(state);\n    const request = customRequest || state.request;\n    const { data: { token, expires_at: expiresAt, repositories, permissions: permissionsOptional, repository_selection: repositorySelectionOptional, single_file: singleFileName, }, } = await request(\"POST /app/installations/{installation_id}/access_tokens\", {\n        installation_id: installationId,\n        repository_ids: options.repositoryIds,\n        repositories: options.repositoryNames,\n        permissions: options.permissions,\n        mediaType: {\n            previews: [\"machine-man\"],\n        },\n        headers: {\n            authorization: `bearer ${appAuthentication.token}`,\n        },\n    });\n    /* istanbul ignore next - permissions are optional per OpenAPI spec, but we think that is incorrect */\n    const permissions = permissionsOptional || {};\n    /* istanbul ignore next - repositorySelection are optional per OpenAPI spec, but we think that is incorrect */\n    const repositorySelection = repositorySelectionOptional || \"all\";\n    const repositoryIds = repositories\n        ? repositories.map((r) => r.id)\n        : void 0;\n    const repositoryNames = repositories\n        ? repositories.map((repo) => repo.name)\n        : void 0;\n    const createdAt = new Date().toISOString();\n    await set(state.cache, optionsWithInstallationTokenFromState, {\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n    return toTokenAuthentication({\n        installationId,\n        token,\n        createdAt,\n        expiresAt,\n        repositorySelection,\n        permissions,\n        repositoryIds,\n        repositoryNames,\n        singleFileName,\n    });\n}\n","import { Deprecation } from \"deprecation\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nexport async function auth(state, authOptions) {\n    switch (authOptions.type) {\n        case \"app\":\n            return getAppAuthentication(state);\n        // @ts-expect-error \"oauth\" is not supperted in types\n        case \"oauth\":\n            state.log.warn(\n            // @ts-expect-error `log.warn()` expects string\n            new Deprecation(`[@octokit/auth-app] {type: \"oauth\"} is deprecated. Use {type: \"oauth-app\"} instead`));\n        case \"oauth-app\":\n            return state.oauthApp({ type: \"oauth-app\" });\n        case \"installation\":\n            authOptions;\n            return getInstallationAuthentication(state, {\n                ...authOptions,\n                type: \"installation\",\n            });\n        case \"oauth-user\":\n            // @ts-expect-error TODO: infer correct auth options type based on type. authOptions should be typed as \"WebFlowAuthOptions | OAuthAppDeviceFlowAuthOptions | GitHubAppDeviceFlowAuthOptions\"\n            return state.oauthApp(authOptions);\n        default:\n            // @ts-expect-error type is \"never\" at this point\n            throw new Error(`Invalid auth type: ${authOptions.type}`);\n    }\n}\n","const PATHS = [\n    \"/app\",\n    \"/app/hook/config\",\n    \"/app/hook/deliveries\",\n    \"/app/hook/deliveries/{delivery_id}\",\n    \"/app/hook/deliveries/{delivery_id}/attempts\",\n    \"/app/installations\",\n    \"/app/installations/{installation_id}\",\n    \"/app/installations/{installation_id}/access_tokens\",\n    \"/app/installations/{installation_id}/suspended\",\n    \"/marketplace_listing/accounts/{account_id}\",\n    \"/marketplace_listing/plan\",\n    \"/marketplace_listing/plans\",\n    \"/marketplace_listing/plans/{plan_id}/accounts\",\n    \"/marketplace_listing/stubbed/accounts/{account_id}\",\n    \"/marketplace_listing/stubbed/plan\",\n    \"/marketplace_listing/stubbed/plans\",\n    \"/marketplace_listing/stubbed/plans/{plan_id}/accounts\",\n    \"/orgs/{org}/installation\",\n    \"/repos/{owner}/{repo}/installation\",\n    \"/users/{username}/installation\",\n];\n// CREDIT: Simon Grondin (https://github.com/SGrondin)\n// https://github.com/octokit/plugin-throttling.js/blob/45c5d7f13b8af448a9dbca468d9c9150a73b3948/lib/route-matcher.js\nfunction routeMatcher(paths) {\n    // EXAMPLE. For the following paths:\n    /* [\n        \"/orgs/{org}/invitations\",\n        \"/repos/{owner}/{repo}/collaborators/{username}\"\n    ] */\n    const regexes = paths.map((p) => p\n        .split(\"/\")\n        .map((c) => (c.startsWith(\"{\") ? \"(?:.+?)\" : c))\n        .join(\"/\"));\n    // 'regexes' would contain:\n    /* [\n        '/orgs/(?:.+?)/invitations',\n        '/repos/(?:.+?)/(?:.+?)/collaborators/(?:.+?)'\n    ] */\n    const regex = `^(?:${regexes.map((r) => `(?:${r})`).join(\"|\")})[^/]*$`;\n    // 'regex' would contain:\n    /*\n      ^(?:(?:\\/orgs\\/(?:.+?)\\/invitations)|(?:\\/repos\\/(?:.+?)\\/(?:.+?)\\/collaborators\\/(?:.+?)))[^\\/]*$\n  \n      It may look scary, but paste it into https://www.debuggex.com/\n      and it will make a lot more sense!\n    */\n    return new RegExp(regex, \"i\");\n}\nconst REGEX = routeMatcher(PATHS);\nexport function requiresAppAuth(url) {\n    return !!url && REGEX.test(url);\n}\n","import { requiresBasicAuth } from \"@octokit/auth-oauth-user\";\nimport { getAppAuthentication } from \"./get-app-authentication\";\nimport { getInstallationAuthentication } from \"./get-installation-authentication\";\nimport { requiresAppAuth } from \"./requires-app-auth\";\nconst FIVE_SECONDS_IN_MS = 5 * 1000;\nfunction isNotTimeSkewError(error) {\n    return !(error.message.match(/'Expiration time' claim \\('exp'\\) must be a numeric value representing the future time at which the assertion expires/) ||\n        error.message.match(/'Issued at' claim \\('iat'\\) must be an Integer representing the time that the assertion was issued/));\n}\nexport async function hook(state, request, route, parameters) {\n    const endpoint = request.endpoint.merge(route, parameters);\n    const url = endpoint.url;\n    // Do not intercept request to retrieve a new token\n    if (/\\/login\\/oauth\\/access_token$/.test(url)) {\n        return request(endpoint);\n    }\n    if (requiresAppAuth(url.replace(request.endpoint.DEFAULTS.baseUrl, \"\"))) {\n        const { token } = await getAppAuthentication(state);\n        endpoint.headers.authorization = `bearer ${token}`;\n        let response;\n        try {\n            response = await request(endpoint);\n        }\n        catch (error) {\n            // If there's an issue with the expiration, regenerate the token and try again.\n            // Otherwise rethrow the error for upstream handling.\n            if (isNotTimeSkewError(error)) {\n                throw error;\n            }\n            // If the date header is missing, we can't correct the system time skew.\n            // Throw the error to be handled upstream.\n            if (typeof error.response.headers.date === \"undefined\") {\n                throw error;\n            }\n            const diff = Math.floor((Date.parse(error.response.headers.date) -\n                Date.parse(new Date().toString())) /\n                1000);\n            state.log.warn(error.message);\n            state.log.warn(`[@octokit/auth-app] GitHub API time and system time are different by ${diff} seconds. Retrying request with the difference accounted for.`);\n            const { token } = await getAppAuthentication({\n                ...state,\n                timeDifference: diff,\n            });\n            endpoint.headers.authorization = `bearer ${token}`;\n            return request(endpoint);\n        }\n        return response;\n    }\n    if (requiresBasicAuth(url)) {\n        const authentication = await state.oauthApp({ type: \"oauth-app\" });\n        endpoint.headers.authorization = authentication.headers.authorization;\n        return request(endpoint);\n    }\n    const { token, createdAt } = await getInstallationAuthentication(state, \n    // @ts-expect-error TBD\n    {}, request);\n    endpoint.headers.authorization = `token ${token}`;\n    return sendRequestWithRetries(state, request, endpoint, createdAt);\n}\n/**\n * Newly created tokens might not be accessible immediately after creation.\n * In case of a 401 response, we retry with an exponential delay until more\n * than five seconds pass since the creation of the token.\n *\n * @see https://github.com/octokit/auth-app.js/issues/65\n */\nasync function sendRequestWithRetries(state, request, options, createdAt, retries = 0) {\n    const timeSinceTokenCreationInMs = +new Date() - +new Date(createdAt);\n    try {\n        return await request(options);\n    }\n    catch (error) {\n        if (error.status !== 401) {\n            throw error;\n        }\n        if (timeSinceTokenCreationInMs >= FIVE_SECONDS_IN_MS) {\n            if (retries > 0) {\n                error.message = `After ${retries} retries within ${timeSinceTokenCreationInMs / 1000}s of creating the installation access token, the response remains 401. At this point, the cause may be an authentication problem or a system outage. Please check https://www.githubstatus.com for status information`;\n            }\n            throw error;\n        }\n        ++retries;\n        const awaitTime = retries * 1000;\n        state.log.warn(`[@octokit/auth-app] Retrying after 401 response to account for token replication delay (retry: ${retries}, wait: ${awaitTime / 1000}s)`);\n        await new Promise((resolve) => setTimeout(resolve, awaitTime));\n        return sendRequestWithRetries(state, request, options, createdAt, retries);\n    }\n}\n","export const VERSION = \"4.0.4\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { request as defaultRequest } from \"@octokit/request\";\nimport { createOAuthAppAuth } from \"@octokit/auth-oauth-app\";\nimport { auth } from \"./auth\";\nimport { hook } from \"./hook\";\nimport { getCache } from \"./cache\";\nimport { VERSION } from \"./version\";\nexport { createOAuthUserAuth } from \"@octokit/auth-oauth-user\";\nexport function createAppAuth(options) {\n    if (!options.appId) {\n        throw new Error(\"[@octokit/auth-app] appId option is required\");\n    }\n    if (!options.privateKey) {\n        throw new Error(\"[@octokit/auth-app] privateKey option is required\");\n    }\n    if (\"installationId\" in options && !options.installationId) {\n        throw new Error(\"[@octokit/auth-app] installationId is set to a falsy value\");\n    }\n    const log = Object.assign({\n        warn: console.warn.bind(console),\n    }, options.log);\n    const request = options.request ||\n        defaultRequest.defaults({\n            headers: {\n                \"user-agent\": `octokit-auth-app.js/${VERSION} ${getUserAgent()}`,\n            },\n        });\n    const state = Object.assign({\n        request,\n        cache: getCache(),\n    }, options, options.installationId\n        ? { installationId: Number(options.installationId) }\n        : {}, {\n        log,\n        oauthApp: createOAuthAppAuth({\n            clientType: \"github-app\",\n            clientId: options.clientId || \"\",\n            clientSecret: options.clientSecret || \"\",\n            request,\n        }),\n    });\n    // @ts-expect-error not worth the extra code to appease TS\n    return Object.assign(auth.bind(null, state), {\n        hook: hook.bind(null, state),\n    });\n}\n"],"names":["getAppAuthentication","appId","privateKey","timeDifference","appAuthentication","githubAppJwt","id","now","Math","floor","Date","type","token","expiresAt","expiration","toISOString","error","Error","getCache","LRU","max","maxAge","get","cache","options","cacheKey","optionsToCacheKey","result","createdAt","repositorySelection","permissionsString","singleFileName","split","permissions","reduce","string","test","slice","repositoryIds","repositoryNames","set","data","key","Object","keys","map","name","join","value","installationId","sort","repositoryIdsString","repositoryNamesString","filter","Boolean","toTokenAuthentication","assign","tokenType","getInstallationAuthentication","state","customRequest","Number","factory","oauthApp","factoryAuthOptions","optionsWithInstallationTokenFromState","refresh","request","expires_at","repositories","permissionsOptional","repository_selection","repositorySelectionOptional","single_file","installation_id","repository_ids","mediaType","previews","headers","authorization","r","repo","auth","authOptions","log","warn","Deprecation","PATHS","routeMatcher","paths","regexes","p","c","startsWith","regex","RegExp","REGEX","requiresAppAuth","url","FIVE_SECONDS_IN_MS","isNotTimeSkewError","message","match","hook","route","parameters","endpoint","merge","replace","DEFAULTS","baseUrl","response","date","diff","parse","toString","requiresBasicAuth","authentication","sendRequestWithRetries","retries","timeSinceTokenCreationInMs","status","awaitTime","Promise","resolve","setTimeout","VERSION","createAppAuth","console","bind","defaultRequest","defaults","getUserAgent","createOAuthAppAuth","clientType","clientId","clientSecret"],"mappings":"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"}