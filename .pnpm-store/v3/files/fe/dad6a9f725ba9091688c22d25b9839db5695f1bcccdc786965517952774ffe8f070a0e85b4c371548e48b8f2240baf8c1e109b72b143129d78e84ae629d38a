{"version":3,"file":"getPaginationRowModel.js","sources":["../../../src/utils/getPaginationRowModel.ts"],"sourcesContent":["import { TableInstance, RowModel, TableGenerics } from '../types'\nimport { memo } from '../utils'\nimport { expandRows } from './getExpandedRowModel'\n\nexport function getPaginationRowModel<TGenerics extends TableGenerics>(opts?: {\n  initialSync: boolean\n}): (instance: TableInstance<TGenerics>) => () => RowModel<TGenerics> {\n  return instance =>\n    memo(\n      () => [\n        instance.getState().pagination,\n        instance.getPrePaginationRowModel(),\n      ],\n      (pagination, rowModel) => {\n        if (!rowModel.rows.length) {\n          return rowModel\n        }\n\n        const { pageSize, pageIndex } = pagination\n        let { rows, flatRows, rowsById } = rowModel\n        const pageStart = pageSize * pageIndex\n        const pageEnd = pageStart + pageSize\n\n        rows = rows.slice(pageStart, pageEnd)\n\n        if (!instance.options.paginateExpandedRows) {\n          return expandRows(\n            {\n              rows,\n              flatRows,\n              rowsById,\n            },\n            instance\n          )\n        }\n\n        return {\n          rows,\n          flatRows,\n          rowsById,\n        }\n      },\n      {\n        key: process.env.NODE_ENV === 'development' && 'getPaginationRowModel',\n        debug: () => instance.options.debugAll ?? instance.options.debugTable,\n      }\n    )\n}\n"],"names":["getPaginationRowModel","opts","instance","memo","getState","pagination","getPrePaginationRowModel","rowModel","rows","length","pageSize","pageIndex","flatRows","rowsById","pageStart","pageEnd","slice","options","paginateExpandedRows","expandRows","key","process","env","NODE_ENV","debug","debugAll","debugTable"],"mappings":";;;;;;;;;;;;;;;;;AAIO,SAASA,qBAAT,CAAgEC,IAAhE,EAE+D;AACpE,EAAOC,OAAAA,QAAQ,IACbC,UAAI,CACF,MAAM,CACJD,QAAQ,CAACE,QAAT,EAAoBC,CAAAA,UADhB,EAEJH,QAAQ,CAACI,wBAAT,EAFI,CADJ,EAKF,CAACD,UAAD,EAAaE,QAAb,KAA0B;AACxB,IAAA,IAAI,CAACA,QAAQ,CAACC,IAAT,CAAcC,MAAnB,EAA2B;AACzB,MAAA,OAAOF,QAAP,CAAA;AACD,KAAA;;AAED,IAAM,MAAA;AAAEG,MAAAA,QAAF;AAAYC,MAAAA,SAAAA;AAAZ,KAAA,GAA0BN,UAAhC,CAAA;AACA,IAAI,IAAA;AAAEG,MAAAA,IAAF;AAAQI,MAAAA,QAAR;AAAkBC,MAAAA,QAAAA;AAAlB,KAAA,GAA+BN,QAAnC,CAAA;AACA,IAAA,MAAMO,SAAS,GAAGJ,QAAQ,GAAGC,SAA7B,CAAA;AACA,IAAA,MAAMI,OAAO,GAAGD,SAAS,GAAGJ,QAA5B,CAAA;AAEAF,IAAAA,IAAI,GAAGA,IAAI,CAACQ,KAAL,CAAWF,SAAX,EAAsBC,OAAtB,CAAP,CAAA;;AAEA,IAAA,IAAI,CAACb,QAAQ,CAACe,OAAT,CAAiBC,oBAAtB,EAA4C;AAC1C,MAAA,OAAOC,8BAAU,CACf;AACEX,QAAAA,IADF;AAEEI,QAAAA,QAFF;AAGEC,QAAAA,QAAAA;AAHF,OADe,CAAjB,CAAA;AAQD,KAAA;;AAED,IAAO,OAAA;AACLL,MAAAA,IADK;AAELI,MAAAA,QAFK;AAGLC,MAAAA,QAAAA;AAHK,KAAP,CAAA;AAKD,GAjCC,EAkCF;AACEO,IAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0C,uBADjD;AAEEC,IAAAA,KAAK,EAAE,MAAA;AAAA,MAAA,IAAA,qBAAA,CAAA;;AAAA,MAAMtB,OAAAA,CAAAA,qBAAAA,GAAAA,QAAQ,CAACe,OAAT,CAAiBQ,QAAvB,oCAAmCvB,QAAQ,CAACe,OAAT,CAAiBS,UAApD,CAAA;AAAA,KAAA;AAFT,GAlCE,CADN,CAAA;AAwCD;;;;"}