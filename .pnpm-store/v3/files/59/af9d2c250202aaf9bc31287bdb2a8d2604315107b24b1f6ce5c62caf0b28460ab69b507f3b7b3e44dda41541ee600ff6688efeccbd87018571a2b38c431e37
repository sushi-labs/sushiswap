import PropTypes from 'prop-types';
declare const _default: {
    all: {
        orientation: PropTypes.Requireable<string>;
        scan: PropTypes.Requireable<string>;
        aspectRatio: PropTypes.Requireable<string>;
        deviceAspectRatio: PropTypes.Requireable<string>;
        height: PropTypes.Requireable<string | number>;
        deviceHeight: PropTypes.Requireable<string | number>;
        width: PropTypes.Requireable<string | number>;
        deviceWidth: PropTypes.Requireable<string | number>;
        color: PropTypes.Requireable<boolean>;
        colorIndex: PropTypes.Requireable<boolean>;
        monochrome: PropTypes.Requireable<boolean>;
        resolution: PropTypes.Requireable<string | number>;
        minAspectRatio: PropTypes.Requireable<string>;
        maxAspectRatio: PropTypes.Requireable<string>;
        minDeviceAspectRatio: PropTypes.Requireable<string>;
        maxDeviceAspectRatio: PropTypes.Requireable<string>;
        minHeight: PropTypes.Requireable<string | number>;
        maxHeight: PropTypes.Requireable<string | number>;
        minDeviceHeight: PropTypes.Requireable<string | number>;
        maxDeviceHeight: PropTypes.Requireable<string | number>;
        minWidth: PropTypes.Requireable<string | number>;
        maxWidth: PropTypes.Requireable<string | number>;
        minDeviceWidth: PropTypes.Requireable<string | number>;
        maxDeviceWidth: PropTypes.Requireable<string | number>;
        minColor: PropTypes.Requireable<number>;
        maxColor: PropTypes.Requireable<number>;
        minColorIndex: PropTypes.Requireable<number>;
        maxColorIndex: PropTypes.Requireable<number>;
        minMonochrome: PropTypes.Requireable<number>;
        maxMonochrome: PropTypes.Requireable<number>;
        minResolution: PropTypes.Requireable<string | number>;
        maxResolution: PropTypes.Requireable<string | number>;
        all: PropTypes.Requireable<boolean>;
        grid: PropTypes.Requireable<boolean>;
        aural: PropTypes.Requireable<boolean>;
        braille: PropTypes.Requireable<boolean>;
        handheld: PropTypes.Requireable<boolean>;
        print: PropTypes.Requireable<boolean>;
        projection: PropTypes.Requireable<boolean>;
        screen: PropTypes.Requireable<boolean>;
        tty: PropTypes.Requireable<boolean>;
        tv: PropTypes.Requireable<boolean>;
        embossed: PropTypes.Requireable<boolean>;
    };
    types: {
        all: PropTypes.Requireable<boolean>;
        grid: PropTypes.Requireable<boolean>;
        aural: PropTypes.Requireable<boolean>;
        braille: PropTypes.Requireable<boolean>;
        handheld: PropTypes.Requireable<boolean>;
        print: PropTypes.Requireable<boolean>;
        projection: PropTypes.Requireable<boolean>;
        screen: PropTypes.Requireable<boolean>;
        tty: PropTypes.Requireable<boolean>;
        tv: PropTypes.Requireable<boolean>;
        embossed: PropTypes.Requireable<boolean>;
    };
    matchers: {
        orientation: PropTypes.Requireable<string>;
        scan: PropTypes.Requireable<string>;
        aspectRatio: PropTypes.Requireable<string>;
        deviceAspectRatio: PropTypes.Requireable<string>;
        height: PropTypes.Requireable<string | number>;
        deviceHeight: PropTypes.Requireable<string | number>;
        width: PropTypes.Requireable<string | number>;
        deviceWidth: PropTypes.Requireable<string | number>;
        color: PropTypes.Requireable<boolean>;
        colorIndex: PropTypes.Requireable<boolean>;
        monochrome: PropTypes.Requireable<boolean>;
        resolution: PropTypes.Requireable<string | number>;
        type: string[];
    };
    features: {
        orientation: PropTypes.Requireable<string>;
        scan: PropTypes.Requireable<string>;
        aspectRatio: PropTypes.Requireable<string>;
        deviceAspectRatio: PropTypes.Requireable<string>;
        height: PropTypes.Requireable<string | number>;
        deviceHeight: PropTypes.Requireable<string | number>;
        width: PropTypes.Requireable<string | number>;
        deviceWidth: PropTypes.Requireable<string | number>;
        color: PropTypes.Requireable<boolean>;
        colorIndex: PropTypes.Requireable<boolean>;
        monochrome: PropTypes.Requireable<boolean>;
        resolution: PropTypes.Requireable<string | number>;
        minAspectRatio: PropTypes.Requireable<string>;
        maxAspectRatio: PropTypes.Requireable<string>;
        minDeviceAspectRatio: PropTypes.Requireable<string>;
        maxDeviceAspectRatio: PropTypes.Requireable<string>;
        minHeight: PropTypes.Requireable<string | number>;
        maxHeight: PropTypes.Requireable<string | number>;
        minDeviceHeight: PropTypes.Requireable<string | number>;
        maxDeviceHeight: PropTypes.Requireable<string | number>;
        minWidth: PropTypes.Requireable<string | number>;
        maxWidth: PropTypes.Requireable<string | number>;
        minDeviceWidth: PropTypes.Requireable<string | number>;
        maxDeviceWidth: PropTypes.Requireable<string | number>;
        minColor: PropTypes.Requireable<number>;
        maxColor: PropTypes.Requireable<number>;
        minColorIndex: PropTypes.Requireable<number>;
        maxColorIndex: PropTypes.Requireable<number>;
        minMonochrome: PropTypes.Requireable<number>;
        maxMonochrome: PropTypes.Requireable<number>;
        minResolution: PropTypes.Requireable<string | number>;
        maxResolution: PropTypes.Requireable<string | number>;
    };
};
export default _default;
