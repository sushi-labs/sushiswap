/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TridentMathMock,
  TridentMathMockInterface,
} from "../TridentMathMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "x",
        type: "uint256",
      },
    ],
    name: "sqrt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063677342ce14610030575b600080fd5b61004361003e36600461011f565b610055565b60405190815260200160405180910390f35b600061006082610066565b92915050565b60b58171010000000000000000000000000000000000811061008d5760409190911b9060801c5b690100000000000000000081106100a95760209190911b9060401c5b6501000000000081106100c15760109190911b9060201c5b630100000081106100d75760089190911b9060101c5b62010000010260121c80820401600190811c80830401811c80830401811c80830401811c80830401811c80830401811c80830401901c80820481111561011a5781045b919050565b60006020828403121561013157600080fd5b503591905056fea26469706673582212207dadcd05c774c6ce59537eee7de5f21edb24caf3b301ce7c2b3a9de4b4d4525d64736f6c634300080a0033";

type TridentMathMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TridentMathMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TridentMathMock__factory extends ContractFactory {
  constructor(...args: TridentMathMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TridentMathMock> {
    return super.deploy(overrides || {}) as Promise<TridentMathMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TridentMathMock {
    return super.attach(address) as TridentMathMock;
  }
  connect(signer: Signer): TridentMathMock__factory {
    return super.connect(signer) as TridentMathMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TridentMathMockInterface {
    return new utils.Interface(_abi) as TridentMathMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TridentMathMock {
    return new Contract(address, _abi, signerOrProvider) as TridentMathMock;
  }
}
