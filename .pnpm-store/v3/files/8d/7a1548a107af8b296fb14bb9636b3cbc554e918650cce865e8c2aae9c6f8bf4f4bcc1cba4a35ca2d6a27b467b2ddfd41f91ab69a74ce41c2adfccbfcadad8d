import{appendErrors as e}from"react-hook-form";import{toNestError as r,validateFieldsNatively as t}from"@hookform/resolvers";const a=(a,o={abortEarly:!1},s={})=>async(i,l,c)=>{const n=Object.assign({},o,{context:l});let d={};if("sync"===s.mode)d=a.validate(i,n);else try{d.value=await a.validateAsync(i,n)}catch(e){d.error=e}return d.error?{values:{},errors:r((m=d.error,v=!c.shouldUseNativeValidation&&"all"===c.criteriaMode,m.details.length?m.details.reduce((r,t)=>{const a=t.path.join(".");if(r[a]||(r[a]={message:t.message,type:t.type}),v){const o=r[a].types,s=o&&o[t.type];r[a]=e(a,v,r,t.type,s?[].concat(s,t.message):t.message)}return r},{}):{}),c)}:(c.shouldUseNativeValidation&&t({},c),{errors:{},values:d.value});var m,v};export{a as joiResolver};
//# sourceMappingURL=joi.modern.js.map
