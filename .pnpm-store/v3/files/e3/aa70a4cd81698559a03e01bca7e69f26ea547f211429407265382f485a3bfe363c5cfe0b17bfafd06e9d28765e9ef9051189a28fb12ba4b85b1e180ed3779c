export type ConstantCodeMap = {
    IDENTITY: import("./generated-types").CodecCode;
    CIDV1: import("./generated-types").CodecCode;
    CIDV2: import("./generated-types").CodecCode;
    CIDV3: import("./generated-types").CodecCode;
    IP4: import("./generated-types").CodecCode;
    TCP: import("./generated-types").CodecCode;
    SHA1: import("./generated-types").CodecCode;
    SHA2_256: import("./generated-types").CodecCode;
    SHA2_512: import("./generated-types").CodecCode;
    SHA3_512: import("./generated-types").CodecCode;
    SHA3_384: import("./generated-types").CodecCode;
    SHA3_256: import("./generated-types").CodecCode;
    SHA3_224: import("./generated-types").CodecCode;
    SHAKE_128: import("./generated-types").CodecCode;
    SHAKE_256: import("./generated-types").CodecCode;
    KECCAK_224: import("./generated-types").CodecCode;
    KECCAK_256: import("./generated-types").CodecCode;
    KECCAK_384: import("./generated-types").CodecCode;
    KECCAK_512: import("./generated-types").CodecCode;
    BLAKE3: import("./generated-types").CodecCode;
    DCCP: import("./generated-types").CodecCode;
    MURMUR3_128: import("./generated-types").CodecCode;
    MURMUR3_32: import("./generated-types").CodecCode;
    IP6: import("./generated-types").CodecCode;
    IP6ZONE: import("./generated-types").CodecCode;
    PATH: import("./generated-types").CodecCode;
    MULTICODEC: import("./generated-types").CodecCode;
    MULTIHASH: import("./generated-types").CodecCode;
    MULTIADDR: import("./generated-types").CodecCode;
    MULTIBASE: import("./generated-types").CodecCode;
    DNS: import("./generated-types").CodecCode;
    DNS4: import("./generated-types").CodecCode;
    DNS6: import("./generated-types").CodecCode;
    DNSADDR: import("./generated-types").CodecCode;
    PROTOBUF: import("./generated-types").CodecCode;
    CBOR: import("./generated-types").CodecCode;
    RAW: import("./generated-types").CodecCode;
    DBL_SHA2_256: import("./generated-types").CodecCode;
    RLP: import("./generated-types").CodecCode;
    BENCODE: import("./generated-types").CodecCode;
    DAG_PB: import("./generated-types").CodecCode;
    DAG_CBOR: import("./generated-types").CodecCode;
    LIBP2P_KEY: import("./generated-types").CodecCode;
    GIT_RAW: import("./generated-types").CodecCode;
    TORRENT_INFO: import("./generated-types").CodecCode;
    TORRENT_FILE: import("./generated-types").CodecCode;
    LEOFCOIN_BLOCK: import("./generated-types").CodecCode;
    LEOFCOIN_TX: import("./generated-types").CodecCode;
    LEOFCOIN_PR: import("./generated-types").CodecCode;
    SCTP: import("./generated-types").CodecCode;
    DAG_JOSE: import("./generated-types").CodecCode;
    DAG_COSE: import("./generated-types").CodecCode;
    ETH_BLOCK: import("./generated-types").CodecCode;
    ETH_BLOCK_LIST: import("./generated-types").CodecCode;
    ETH_TX_TRIE: import("./generated-types").CodecCode;
    ETH_TX: import("./generated-types").CodecCode;
    ETH_TX_RECEIPT_TRIE: import("./generated-types").CodecCode;
    ETH_TX_RECEIPT: import("./generated-types").CodecCode;
    ETH_STATE_TRIE: import("./generated-types").CodecCode;
    ETH_ACCOUNT_SNAPSHOT: import("./generated-types").CodecCode;
    ETH_STORAGE_TRIE: import("./generated-types").CodecCode;
    ETH_RECEIPT_LOG_TRIE: import("./generated-types").CodecCode;
    ETH_RECIEPT_LOG: import("./generated-types").CodecCode;
    BITCOIN_BLOCK: import("./generated-types").CodecCode;
    BITCOIN_TX: import("./generated-types").CodecCode;
    BITCOIN_WITNESS_COMMITMENT: import("./generated-types").CodecCode;
    ZCASH_BLOCK: import("./generated-types").CodecCode;
    ZCASH_TX: import("./generated-types").CodecCode;
    CAIP_50: import("./generated-types").CodecCode;
    STREAMID: import("./generated-types").CodecCode;
    STELLAR_BLOCK: import("./generated-types").CodecCode;
    STELLAR_TX: import("./generated-types").CodecCode;
    MD4: import("./generated-types").CodecCode;
    MD5: import("./generated-types").CodecCode;
    BMT: import("./generated-types").CodecCode;
    DECRED_BLOCK: import("./generated-types").CodecCode;
    DECRED_TX: import("./generated-types").CodecCode;
    IPLD_NS: import("./generated-types").CodecCode;
    IPFS_NS: import("./generated-types").CodecCode;
    SWARM_NS: import("./generated-types").CodecCode;
    IPNS_NS: import("./generated-types").CodecCode;
    ZERONET: import("./generated-types").CodecCode;
    SECP256K1_PUB: import("./generated-types").CodecCode;
    BLS12_381_G1_PUB: import("./generated-types").CodecCode;
    BLS12_381_G2_PUB: import("./generated-types").CodecCode;
    X25519_PUB: import("./generated-types").CodecCode;
    ED25519_PUB: import("./generated-types").CodecCode;
    BLS12_381_G1G2_PUB: import("./generated-types").CodecCode;
    DASH_BLOCK: import("./generated-types").CodecCode;
    DASH_TX: import("./generated-types").CodecCode;
    SWARM_MANIFEST: import("./generated-types").CodecCode;
    SWARM_FEED: import("./generated-types").CodecCode;
    UDP: import("./generated-types").CodecCode;
    P2P_WEBRTC_STAR: import("./generated-types").CodecCode;
    P2P_WEBRTC_DIRECT: import("./generated-types").CodecCode;
    P2P_STARDUST: import("./generated-types").CodecCode;
    P2P_CIRCUIT: import("./generated-types").CodecCode;
    DAG_JSON: import("./generated-types").CodecCode;
    UDT: import("./generated-types").CodecCode;
    UTP: import("./generated-types").CodecCode;
    UNIX: import("./generated-types").CodecCode;
    THREAD: import("./generated-types").CodecCode;
    P2P: import("./generated-types").CodecCode;
    IPFS: import("./generated-types").CodecCode;
    HTTPS: import("./generated-types").CodecCode;
    ONION: import("./generated-types").CodecCode;
    ONION3: import("./generated-types").CodecCode;
    GARLIC64: import("./generated-types").CodecCode;
    GARLIC32: import("./generated-types").CodecCode;
    TLS: import("./generated-types").CodecCode;
    NOISE: import("./generated-types").CodecCode;
    QUIC: import("./generated-types").CodecCode;
    WS: import("./generated-types").CodecCode;
    WSS: import("./generated-types").CodecCode;
    P2P_WEBSOCKET_STAR: import("./generated-types").CodecCode;
    HTTP: import("./generated-types").CodecCode;
    SWHID_1_SNP: import("./generated-types").CodecCode;
    JSON: import("./generated-types").CodecCode;
    MESSAGEPACK: import("./generated-types").CodecCode;
    LIBP2P_PEER_RECORD: import("./generated-types").CodecCode;
    LIBP2P_RELAY_RSVP: import("./generated-types").CodecCode;
    CAR_INDEX_SORTED: import("./generated-types").CodecCode;
    SHA2_256_TRUNC254_PADDED: import("./generated-types").CodecCode;
    RIPEMD_128: import("./generated-types").CodecCode;
    RIPEMD_160: import("./generated-types").CodecCode;
    RIPEMD_256: import("./generated-types").CodecCode;
    RIPEMD_320: import("./generated-types").CodecCode;
    X11: import("./generated-types").CodecCode;
    P256_PUB: import("./generated-types").CodecCode;
    P384_PUB: import("./generated-types").CodecCode;
    P521_PUB: import("./generated-types").CodecCode;
    ED448_PUB: import("./generated-types").CodecCode;
    X448_PUB: import("./generated-types").CodecCode;
    ED25519_PRIV: import("./generated-types").CodecCode;
    SECP256K1_PRIV: import("./generated-types").CodecCode;
    X25519_PRIV: import("./generated-types").CodecCode;
    KANGAROOTWELVE: import("./generated-types").CodecCode;
    SM3_256: import("./generated-types").CodecCode;
    BLAKE2B_8: import("./generated-types").CodecCode;
    BLAKE2B_16: import("./generated-types").CodecCode;
    BLAKE2B_24: import("./generated-types").CodecCode;
    BLAKE2B_32: import("./generated-types").CodecCode;
    BLAKE2B_40: import("./generated-types").CodecCode;
    BLAKE2B_48: import("./generated-types").CodecCode;
    BLAKE2B_56: import("./generated-types").CodecCode;
    BLAKE2B_64: import("./generated-types").CodecCode;
    BLAKE2B_72: import("./generated-types").CodecCode;
    BLAKE2B_80: import("./generated-types").CodecCode;
    BLAKE2B_88: import("./generated-types").CodecCode;
    BLAKE2B_96: import("./generated-types").CodecCode;
    BLAKE2B_104: import("./generated-types").CodecCode;
    BLAKE2B_112: import("./generated-types").CodecCode;
    BLAKE2B_120: import("./generated-types").CodecCode;
    BLAKE2B_128: import("./generated-types").CodecCode;
    BLAKE2B_136: import("./generated-types").CodecCode;
    BLAKE2B_144: import("./generated-types").CodecCode;
    BLAKE2B_152: import("./generated-types").CodecCode;
    BLAKE2B_160: import("./generated-types").CodecCode;
    BLAKE2B_168: import("./generated-types").CodecCode;
    BLAKE2B_176: import("./generated-types").CodecCode;
    BLAKE2B_184: import("./generated-types").CodecCode;
    BLAKE2B_192: import("./generated-types").CodecCode;
    BLAKE2B_200: import("./generated-types").CodecCode;
    BLAKE2B_208: import("./generated-types").CodecCode;
    BLAKE2B_216: import("./generated-types").CodecCode;
    BLAKE2B_224: import("./generated-types").CodecCode;
    BLAKE2B_232: import("./generated-types").CodecCode;
    BLAKE2B_240: import("./generated-types").CodecCode;
    BLAKE2B_248: import("./generated-types").CodecCode;
    BLAKE2B_256: import("./generated-types").CodecCode;
    BLAKE2B_264: import("./generated-types").CodecCode;
    BLAKE2B_272: import("./generated-types").CodecCode;
    BLAKE2B_280: import("./generated-types").CodecCode;
    BLAKE2B_288: import("./generated-types").CodecCode;
    BLAKE2B_296: import("./generated-types").CodecCode;
    BLAKE2B_304: import("./generated-types").CodecCode;
    BLAKE2B_312: import("./generated-types").CodecCode;
    BLAKE2B_320: import("./generated-types").CodecCode;
    BLAKE2B_328: import("./generated-types").CodecCode;
    BLAKE2B_336: import("./generated-types").CodecCode;
    BLAKE2B_344: import("./generated-types").CodecCode;
    BLAKE2B_352: import("./generated-types").CodecCode;
    BLAKE2B_360: import("./generated-types").CodecCode;
    BLAKE2B_368: import("./generated-types").CodecCode;
    BLAKE2B_376: import("./generated-types").CodecCode;
    BLAKE2B_384: import("./generated-types").CodecCode;
    BLAKE2B_392: import("./generated-types").CodecCode;
    BLAKE2B_400: import("./generated-types").CodecCode;
    BLAKE2B_408: import("./generated-types").CodecCode;
    BLAKE2B_416: import("./generated-types").CodecCode;
    BLAKE2B_424: import("./generated-types").CodecCode;
    BLAKE2B_432: import("./generated-types").CodecCode;
    BLAKE2B_440: import("./generated-types").CodecCode;
    BLAKE2B_448: import("./generated-types").CodecCode;
    BLAKE2B_456: import("./generated-types").CodecCode;
    BLAKE2B_464: import("./generated-types").CodecCode;
    BLAKE2B_472: import("./generated-types").CodecCode;
    BLAKE2B_480: import("./generated-types").CodecCode;
    BLAKE2B_488: import("./generated-types").CodecCode;
    BLAKE2B_496: import("./generated-types").CodecCode;
    BLAKE2B_504: import("./generated-types").CodecCode;
    BLAKE2B_512: import("./generated-types").CodecCode;
    BLAKE2S_8: import("./generated-types").CodecCode;
    BLAKE2S_16: import("./generated-types").CodecCode;
    BLAKE2S_24: import("./generated-types").CodecCode;
    BLAKE2S_32: import("./generated-types").CodecCode;
    BLAKE2S_40: import("./generated-types").CodecCode;
    BLAKE2S_48: import("./generated-types").CodecCode;
    BLAKE2S_56: import("./generated-types").CodecCode;
    BLAKE2S_64: import("./generated-types").CodecCode;
    BLAKE2S_72: import("./generated-types").CodecCode;
    BLAKE2S_80: import("./generated-types").CodecCode;
    BLAKE2S_88: import("./generated-types").CodecCode;
    BLAKE2S_96: import("./generated-types").CodecCode;
    BLAKE2S_104: import("./generated-types").CodecCode;
    BLAKE2S_112: import("./generated-types").CodecCode;
    BLAKE2S_120: import("./generated-types").CodecCode;
    BLAKE2S_128: import("./generated-types").CodecCode;
    BLAKE2S_136: import("./generated-types").CodecCode;
    BLAKE2S_144: import("./generated-types").CodecCode;
    BLAKE2S_152: import("./generated-types").CodecCode;
    BLAKE2S_160: import("./generated-types").CodecCode;
    BLAKE2S_168: import("./generated-types").CodecCode;
    BLAKE2S_176: import("./generated-types").CodecCode;
    BLAKE2S_184: import("./generated-types").CodecCode;
    BLAKE2S_192: import("./generated-types").CodecCode;
    BLAKE2S_200: import("./generated-types").CodecCode;
    BLAKE2S_208: import("./generated-types").CodecCode;
    BLAKE2S_216: import("./generated-types").CodecCode;
    BLAKE2S_224: import("./generated-types").CodecCode;
    BLAKE2S_232: import("./generated-types").CodecCode;
    BLAKE2S_240: import("./generated-types").CodecCode;
    BLAKE2S_248: import("./generated-types").CodecCode;
    BLAKE2S_256: import("./generated-types").CodecCode;
    SKEIN256_8: import("./generated-types").CodecCode;
    SKEIN256_16: import("./generated-types").CodecCode;
    SKEIN256_24: import("./generated-types").CodecCode;
    SKEIN256_32: import("./generated-types").CodecCode;
    SKEIN256_40: import("./generated-types").CodecCode;
    SKEIN256_48: import("./generated-types").CodecCode;
    SKEIN256_56: import("./generated-types").CodecCode;
    SKEIN256_64: import("./generated-types").CodecCode;
    SKEIN256_72: import("./generated-types").CodecCode;
    SKEIN256_80: import("./generated-types").CodecCode;
    SKEIN256_88: import("./generated-types").CodecCode;
    SKEIN256_96: import("./generated-types").CodecCode;
    SKEIN256_104: import("./generated-types").CodecCode;
    SKEIN256_112: import("./generated-types").CodecCode;
    SKEIN256_120: import("./generated-types").CodecCode;
    SKEIN256_128: import("./generated-types").CodecCode;
    SKEIN256_136: import("./generated-types").CodecCode;
    SKEIN256_144: import("./generated-types").CodecCode;
    SKEIN256_152: import("./generated-types").CodecCode;
    SKEIN256_160: import("./generated-types").CodecCode;
    SKEIN256_168: import("./generated-types").CodecCode;
    SKEIN256_176: import("./generated-types").CodecCode;
    SKEIN256_184: import("./generated-types").CodecCode;
    SKEIN256_192: import("./generated-types").CodecCode;
    SKEIN256_200: import("./generated-types").CodecCode;
    SKEIN256_208: import("./generated-types").CodecCode;
    SKEIN256_216: import("./generated-types").CodecCode;
    SKEIN256_224: import("./generated-types").CodecCode;
    SKEIN256_232: import("./generated-types").CodecCode;
    SKEIN256_240: import("./generated-types").CodecCode;
    SKEIN256_248: import("./generated-types").CodecCode;
    SKEIN256_256: import("./generated-types").CodecCode;
    SKEIN512_8: import("./generated-types").CodecCode;
    SKEIN512_16: import("./generated-types").CodecCode;
    SKEIN512_24: import("./generated-types").CodecCode;
    SKEIN512_32: import("./generated-types").CodecCode;
    SKEIN512_40: import("./generated-types").CodecCode;
    SKEIN512_48: import("./generated-types").CodecCode;
    SKEIN512_56: import("./generated-types").CodecCode;
    SKEIN512_64: import("./generated-types").CodecCode;
    SKEIN512_72: import("./generated-types").CodecCode;
    SKEIN512_80: import("./generated-types").CodecCode;
    SKEIN512_88: import("./generated-types").CodecCode;
    SKEIN512_96: import("./generated-types").CodecCode;
    SKEIN512_104: import("./generated-types").CodecCode;
    SKEIN512_112: import("./generated-types").CodecCode;
    SKEIN512_120: import("./generated-types").CodecCode;
    SKEIN512_128: import("./generated-types").CodecCode;
    SKEIN512_136: import("./generated-types").CodecCode;
    SKEIN512_144: import("./generated-types").CodecCode;
    SKEIN512_152: import("./generated-types").CodecCode;
    SKEIN512_160: import("./generated-types").CodecCode;
    SKEIN512_168: import("./generated-types").CodecCode;
    SKEIN512_176: import("./generated-types").CodecCode;
    SKEIN512_184: import("./generated-types").CodecCode;
    SKEIN512_192: import("./generated-types").CodecCode;
    SKEIN512_200: import("./generated-types").CodecCode;
    SKEIN512_208: import("./generated-types").CodecCode;
    SKEIN512_216: import("./generated-types").CodecCode;
    SKEIN512_224: import("./generated-types").CodecCode;
    SKEIN512_232: import("./generated-types").CodecCode;
    SKEIN512_240: import("./generated-types").CodecCode;
    SKEIN512_248: import("./generated-types").CodecCode;
    SKEIN512_256: import("./generated-types").CodecCode;
    SKEIN512_264: import("./generated-types").CodecCode;
    SKEIN512_272: import("./generated-types").CodecCode;
    SKEIN512_280: import("./generated-types").CodecCode;
    SKEIN512_288: import("./generated-types").CodecCode;
    SKEIN512_296: import("./generated-types").CodecCode;
    SKEIN512_304: import("./generated-types").CodecCode;
    SKEIN512_312: import("./generated-types").CodecCode;
    SKEIN512_320: import("./generated-types").CodecCode;
    SKEIN512_328: import("./generated-types").CodecCode;
    SKEIN512_336: import("./generated-types").CodecCode;
    SKEIN512_344: import("./generated-types").CodecCode;
    SKEIN512_352: import("./generated-types").CodecCode;
    SKEIN512_360: import("./generated-types").CodecCode;
    SKEIN512_368: import("./generated-types").CodecCode;
    SKEIN512_376: import("./generated-types").CodecCode;
    SKEIN512_384: import("./generated-types").CodecCode;
    SKEIN512_392: import("./generated-types").CodecCode;
    SKEIN512_400: import("./generated-types").CodecCode;
    SKEIN512_408: import("./generated-types").CodecCode;
    SKEIN512_416: import("./generated-types").CodecCode;
    SKEIN512_424: import("./generated-types").CodecCode;
    SKEIN512_432: import("./generated-types").CodecCode;
    SKEIN512_440: import("./generated-types").CodecCode;
    SKEIN512_448: import("./generated-types").CodecCode;
    SKEIN512_456: import("./generated-types").CodecCode;
    SKEIN512_464: import("./generated-types").CodecCode;
    SKEIN512_472: import("./generated-types").CodecCode;
    SKEIN512_480: import("./generated-types").CodecCode;
    SKEIN512_488: import("./generated-types").CodecCode;
    SKEIN512_496: import("./generated-types").CodecCode;
    SKEIN512_504: import("./generated-types").CodecCode;
    SKEIN512_512: import("./generated-types").CodecCode;
    SKEIN1024_8: import("./generated-types").CodecCode;
    SKEIN1024_16: import("./generated-types").CodecCode;
    SKEIN1024_24: import("./generated-types").CodecCode;
    SKEIN1024_32: import("./generated-types").CodecCode;
    SKEIN1024_40: import("./generated-types").CodecCode;
    SKEIN1024_48: import("./generated-types").CodecCode;
    SKEIN1024_56: import("./generated-types").CodecCode;
    SKEIN1024_64: import("./generated-types").CodecCode;
    SKEIN1024_72: import("./generated-types").CodecCode;
    SKEIN1024_80: import("./generated-types").CodecCode;
    SKEIN1024_88: import("./generated-types").CodecCode;
    SKEIN1024_96: import("./generated-types").CodecCode;
    SKEIN1024_104: import("./generated-types").CodecCode;
    SKEIN1024_112: import("./generated-types").CodecCode;
    SKEIN1024_120: import("./generated-types").CodecCode;
    SKEIN1024_128: import("./generated-types").CodecCode;
    SKEIN1024_136: import("./generated-types").CodecCode;
    SKEIN1024_144: import("./generated-types").CodecCode;
    SKEIN1024_152: import("./generated-types").CodecCode;
    SKEIN1024_160: import("./generated-types").CodecCode;
    SKEIN1024_168: import("./generated-types").CodecCode;
    SKEIN1024_176: import("./generated-types").CodecCode;
    SKEIN1024_184: import("./generated-types").CodecCode;
    SKEIN1024_192: import("./generated-types").CodecCode;
    SKEIN1024_200: import("./generated-types").CodecCode;
    SKEIN1024_208: import("./generated-types").CodecCode;
    SKEIN1024_216: import("./generated-types").CodecCode;
    SKEIN1024_224: import("./generated-types").CodecCode;
    SKEIN1024_232: import("./generated-types").CodecCode;
    SKEIN1024_240: import("./generated-types").CodecCode;
    SKEIN1024_248: import("./generated-types").CodecCode;
    SKEIN1024_256: import("./generated-types").CodecCode;
    SKEIN1024_264: import("./generated-types").CodecCode;
    SKEIN1024_272: import("./generated-types").CodecCode;
    SKEIN1024_280: import("./generated-types").CodecCode;
    SKEIN1024_288: import("./generated-types").CodecCode;
    SKEIN1024_296: import("./generated-types").CodecCode;
    SKEIN1024_304: import("./generated-types").CodecCode;
    SKEIN1024_312: import("./generated-types").CodecCode;
    SKEIN1024_320: import("./generated-types").CodecCode;
    SKEIN1024_328: import("./generated-types").CodecCode;
    SKEIN1024_336: import("./generated-types").CodecCode;
    SKEIN1024_344: import("./generated-types").CodecCode;
    SKEIN1024_352: import("./generated-types").CodecCode;
    SKEIN1024_360: import("./generated-types").CodecCode;
    SKEIN1024_368: import("./generated-types").CodecCode;
    SKEIN1024_376: import("./generated-types").CodecCode;
    SKEIN1024_384: import("./generated-types").CodecCode;
    SKEIN1024_392: import("./generated-types").CodecCode;
    SKEIN1024_400: import("./generated-types").CodecCode;
    SKEIN1024_408: import("./generated-types").CodecCode;
    SKEIN1024_416: import("./generated-types").CodecCode;
    SKEIN1024_424: import("./generated-types").CodecCode;
    SKEIN1024_432: import("./generated-types").CodecCode;
    SKEIN1024_440: import("./generated-types").CodecCode;
    SKEIN1024_448: import("./generated-types").CodecCode;
    SKEIN1024_456: import("./generated-types").CodecCode;
    SKEIN1024_464: import("./generated-types").CodecCode;
    SKEIN1024_472: import("./generated-types").CodecCode;
    SKEIN1024_480: import("./generated-types").CodecCode;
    SKEIN1024_488: import("./generated-types").CodecCode;
    SKEIN1024_496: import("./generated-types").CodecCode;
    SKEIN1024_504: import("./generated-types").CodecCode;
    SKEIN1024_512: import("./generated-types").CodecCode;
    SKEIN1024_520: import("./generated-types").CodecCode;
    SKEIN1024_528: import("./generated-types").CodecCode;
    SKEIN1024_536: import("./generated-types").CodecCode;
    SKEIN1024_544: import("./generated-types").CodecCode;
    SKEIN1024_552: import("./generated-types").CodecCode;
    SKEIN1024_560: import("./generated-types").CodecCode;
    SKEIN1024_568: import("./generated-types").CodecCode;
    SKEIN1024_576: import("./generated-types").CodecCode;
    SKEIN1024_584: import("./generated-types").CodecCode;
    SKEIN1024_592: import("./generated-types").CodecCode;
    SKEIN1024_600: import("./generated-types").CodecCode;
    SKEIN1024_608: import("./generated-types").CodecCode;
    SKEIN1024_616: import("./generated-types").CodecCode;
    SKEIN1024_624: import("./generated-types").CodecCode;
    SKEIN1024_632: import("./generated-types").CodecCode;
    SKEIN1024_640: import("./generated-types").CodecCode;
    SKEIN1024_648: import("./generated-types").CodecCode;
    SKEIN1024_656: import("./generated-types").CodecCode;
    SKEIN1024_664: import("./generated-types").CodecCode;
    SKEIN1024_672: import("./generated-types").CodecCode;
    SKEIN1024_680: import("./generated-types").CodecCode;
    SKEIN1024_688: import("./generated-types").CodecCode;
    SKEIN1024_696: import("./generated-types").CodecCode;
    SKEIN1024_704: import("./generated-types").CodecCode;
    SKEIN1024_712: import("./generated-types").CodecCode;
    SKEIN1024_720: import("./generated-types").CodecCode;
    SKEIN1024_728: import("./generated-types").CodecCode;
    SKEIN1024_736: import("./generated-types").CodecCode;
    SKEIN1024_744: import("./generated-types").CodecCode;
    SKEIN1024_752: import("./generated-types").CodecCode;
    SKEIN1024_760: import("./generated-types").CodecCode;
    SKEIN1024_768: import("./generated-types").CodecCode;
    SKEIN1024_776: import("./generated-types").CodecCode;
    SKEIN1024_784: import("./generated-types").CodecCode;
    SKEIN1024_792: import("./generated-types").CodecCode;
    SKEIN1024_800: import("./generated-types").CodecCode;
    SKEIN1024_808: import("./generated-types").CodecCode;
    SKEIN1024_816: import("./generated-types").CodecCode;
    SKEIN1024_824: import("./generated-types").CodecCode;
    SKEIN1024_832: import("./generated-types").CodecCode;
    SKEIN1024_840: import("./generated-types").CodecCode;
    SKEIN1024_848: import("./generated-types").CodecCode;
    SKEIN1024_856: import("./generated-types").CodecCode;
    SKEIN1024_864: import("./generated-types").CodecCode;
    SKEIN1024_872: import("./generated-types").CodecCode;
    SKEIN1024_880: import("./generated-types").CodecCode;
    SKEIN1024_888: import("./generated-types").CodecCode;
    SKEIN1024_896: import("./generated-types").CodecCode;
    SKEIN1024_904: import("./generated-types").CodecCode;
    SKEIN1024_912: import("./generated-types").CodecCode;
    SKEIN1024_920: import("./generated-types").CodecCode;
    SKEIN1024_928: import("./generated-types").CodecCode;
    SKEIN1024_936: import("./generated-types").CodecCode;
    SKEIN1024_944: import("./generated-types").CodecCode;
    SKEIN1024_952: import("./generated-types").CodecCode;
    SKEIN1024_960: import("./generated-types").CodecCode;
    SKEIN1024_968: import("./generated-types").CodecCode;
    SKEIN1024_976: import("./generated-types").CodecCode;
    SKEIN1024_984: import("./generated-types").CodecCode;
    SKEIN1024_992: import("./generated-types").CodecCode;
    SKEIN1024_1000: import("./generated-types").CodecCode;
    SKEIN1024_1008: import("./generated-types").CodecCode;
    SKEIN1024_1016: import("./generated-types").CodecCode;
    SKEIN1024_1024: import("./generated-types").CodecCode;
    POSEIDON_BLS12_381_A2_FC1: import("./generated-types").CodecCode;
    POSEIDON_BLS12_381_A2_FC1_SC: import("./generated-types").CodecCode;
    ZEROXCERT_IMPRINT_256: import("./generated-types").CodecCode;
    FIL_COMMITMENT_UNSEALED: import("./generated-types").CodecCode;
    FIL_COMMITMENT_SEALED: import("./generated-types").CodecCode;
    HOLOCHAIN_ADR_V0: import("./generated-types").CodecCode;
    HOLOCHAIN_ADR_V1: import("./generated-types").CodecCode;
    HOLOCHAIN_KEY_V0: import("./generated-types").CodecCode;
    HOLOCHAIN_KEY_V1: import("./generated-types").CodecCode;
    HOLOCHAIN_SIG_V0: import("./generated-types").CodecCode;
    HOLOCHAIN_SIG_V1: import("./generated-types").CodecCode;
    SKYNET_NS: import("./generated-types").CodecCode;
    ARWEAVE_NS: import("./generated-types").CodecCode;
};
export type NameUint8ArrayMap = {
    identity: Uint8Array;
    cidv1: Uint8Array;
    cidv2: Uint8Array;
    cidv3: Uint8Array;
    ip4: Uint8Array;
    tcp: Uint8Array;
    sha1: Uint8Array;
    "sha2-256": Uint8Array;
    "sha2-512": Uint8Array;
    "sha3-512": Uint8Array;
    "sha3-384": Uint8Array;
    "sha3-256": Uint8Array;
    "sha3-224": Uint8Array;
    "shake-128": Uint8Array;
    "shake-256": Uint8Array;
    "keccak-224": Uint8Array;
    "keccak-256": Uint8Array;
    "keccak-384": Uint8Array;
    "keccak-512": Uint8Array;
    blake3: Uint8Array;
    dccp: Uint8Array;
    "murmur3-128": Uint8Array;
    "murmur3-32": Uint8Array;
    ip6: Uint8Array;
    ip6zone: Uint8Array;
    path: Uint8Array;
    multicodec: Uint8Array;
    multihash: Uint8Array;
    multiaddr: Uint8Array;
    multibase: Uint8Array;
    dns: Uint8Array;
    dns4: Uint8Array;
    dns6: Uint8Array;
    dnsaddr: Uint8Array;
    protobuf: Uint8Array;
    cbor: Uint8Array;
    raw: Uint8Array;
    "dbl-sha2-256": Uint8Array;
    rlp: Uint8Array;
    bencode: Uint8Array;
    "dag-pb": Uint8Array;
    "dag-cbor": Uint8Array;
    "libp2p-key": Uint8Array;
    "git-raw": Uint8Array;
    "torrent-info": Uint8Array;
    "torrent-file": Uint8Array;
    "leofcoin-block": Uint8Array;
    "leofcoin-tx": Uint8Array;
    "leofcoin-pr": Uint8Array;
    sctp: Uint8Array;
    "dag-jose": Uint8Array;
    "dag-cose": Uint8Array;
    "eth-block": Uint8Array;
    "eth-block-list": Uint8Array;
    "eth-tx-trie": Uint8Array;
    "eth-tx": Uint8Array;
    "eth-tx-receipt-trie": Uint8Array;
    "eth-tx-receipt": Uint8Array;
    "eth-state-trie": Uint8Array;
    "eth-account-snapshot": Uint8Array;
    "eth-storage-trie": Uint8Array;
    "eth-receipt-log-trie": Uint8Array;
    "eth-reciept-log": Uint8Array;
    "bitcoin-block": Uint8Array;
    "bitcoin-tx": Uint8Array;
    "bitcoin-witness-commitment": Uint8Array;
    "zcash-block": Uint8Array;
    "zcash-tx": Uint8Array;
    "caip-50": Uint8Array;
    streamid: Uint8Array;
    "stellar-block": Uint8Array;
    "stellar-tx": Uint8Array;
    md4: Uint8Array;
    md5: Uint8Array;
    bmt: Uint8Array;
    "decred-block": Uint8Array;
    "decred-tx": Uint8Array;
    "ipld-ns": Uint8Array;
    "ipfs-ns": Uint8Array;
    "swarm-ns": Uint8Array;
    "ipns-ns": Uint8Array;
    zeronet: Uint8Array;
    "secp256k1-pub": Uint8Array;
    "bls12_381-g1-pub": Uint8Array;
    "bls12_381-g2-pub": Uint8Array;
    "x25519-pub": Uint8Array;
    "ed25519-pub": Uint8Array;
    "bls12_381-g1g2-pub": Uint8Array;
    "dash-block": Uint8Array;
    "dash-tx": Uint8Array;
    "swarm-manifest": Uint8Array;
    "swarm-feed": Uint8Array;
    udp: Uint8Array;
    "p2p-webrtc-star": Uint8Array;
    "p2p-webrtc-direct": Uint8Array;
    "p2p-stardust": Uint8Array;
    "p2p-circuit": Uint8Array;
    "dag-json": Uint8Array;
    udt: Uint8Array;
    utp: Uint8Array;
    unix: Uint8Array;
    thread: Uint8Array;
    p2p: Uint8Array;
    ipfs: Uint8Array;
    https: Uint8Array;
    onion: Uint8Array;
    onion3: Uint8Array;
    garlic64: Uint8Array;
    garlic32: Uint8Array;
    tls: Uint8Array;
    noise: Uint8Array;
    quic: Uint8Array;
    ws: Uint8Array;
    wss: Uint8Array;
    "p2p-websocket-star": Uint8Array;
    http: Uint8Array;
    "swhid-1-snp": Uint8Array;
    json: Uint8Array;
    messagepack: Uint8Array;
    "libp2p-peer-record": Uint8Array;
    "libp2p-relay-rsvp": Uint8Array;
    "car-index-sorted": Uint8Array;
    "sha2-256-trunc254-padded": Uint8Array;
    "ripemd-128": Uint8Array;
    "ripemd-160": Uint8Array;
    "ripemd-256": Uint8Array;
    "ripemd-320": Uint8Array;
    x11: Uint8Array;
    "p256-pub": Uint8Array;
    "p384-pub": Uint8Array;
    "p521-pub": Uint8Array;
    "ed448-pub": Uint8Array;
    "x448-pub": Uint8Array;
    "ed25519-priv": Uint8Array;
    "secp256k1-priv": Uint8Array;
    "x25519-priv": Uint8Array;
    kangarootwelve: Uint8Array;
    "sm3-256": Uint8Array;
    "blake2b-8": Uint8Array;
    "blake2b-16": Uint8Array;
    "blake2b-24": Uint8Array;
    "blake2b-32": Uint8Array;
    "blake2b-40": Uint8Array;
    "blake2b-48": Uint8Array;
    "blake2b-56": Uint8Array;
    "blake2b-64": Uint8Array;
    "blake2b-72": Uint8Array;
    "blake2b-80": Uint8Array;
    "blake2b-88": Uint8Array;
    "blake2b-96": Uint8Array;
    "blake2b-104": Uint8Array;
    "blake2b-112": Uint8Array;
    "blake2b-120": Uint8Array;
    "blake2b-128": Uint8Array;
    "blake2b-136": Uint8Array;
    "blake2b-144": Uint8Array;
    "blake2b-152": Uint8Array;
    "blake2b-160": Uint8Array;
    "blake2b-168": Uint8Array;
    "blake2b-176": Uint8Array;
    "blake2b-184": Uint8Array;
    "blake2b-192": Uint8Array;
    "blake2b-200": Uint8Array;
    "blake2b-208": Uint8Array;
    "blake2b-216": Uint8Array;
    "blake2b-224": Uint8Array;
    "blake2b-232": Uint8Array;
    "blake2b-240": Uint8Array;
    "blake2b-248": Uint8Array;
    "blake2b-256": Uint8Array;
    "blake2b-264": Uint8Array;
    "blake2b-272": Uint8Array;
    "blake2b-280": Uint8Array;
    "blake2b-288": Uint8Array;
    "blake2b-296": Uint8Array;
    "blake2b-304": Uint8Array;
    "blake2b-312": Uint8Array;
    "blake2b-320": Uint8Array;
    "blake2b-328": Uint8Array;
    "blake2b-336": Uint8Array;
    "blake2b-344": Uint8Array;
    "blake2b-352": Uint8Array;
    "blake2b-360": Uint8Array;
    "blake2b-368": Uint8Array;
    "blake2b-376": Uint8Array;
    "blake2b-384": Uint8Array;
    "blake2b-392": Uint8Array;
    "blake2b-400": Uint8Array;
    "blake2b-408": Uint8Array;
    "blake2b-416": Uint8Array;
    "blake2b-424": Uint8Array;
    "blake2b-432": Uint8Array;
    "blake2b-440": Uint8Array;
    "blake2b-448": Uint8Array;
    "blake2b-456": Uint8Array;
    "blake2b-464": Uint8Array;
    "blake2b-472": Uint8Array;
    "blake2b-480": Uint8Array;
    "blake2b-488": Uint8Array;
    "blake2b-496": Uint8Array;
    "blake2b-504": Uint8Array;
    "blake2b-512": Uint8Array;
    "blake2s-8": Uint8Array;
    "blake2s-16": Uint8Array;
    "blake2s-24": Uint8Array;
    "blake2s-32": Uint8Array;
    "blake2s-40": Uint8Array;
    "blake2s-48": Uint8Array;
    "blake2s-56": Uint8Array;
    "blake2s-64": Uint8Array;
    "blake2s-72": Uint8Array;
    "blake2s-80": Uint8Array;
    "blake2s-88": Uint8Array;
    "blake2s-96": Uint8Array;
    "blake2s-104": Uint8Array;
    "blake2s-112": Uint8Array;
    "blake2s-120": Uint8Array;
    "blake2s-128": Uint8Array;
    "blake2s-136": Uint8Array;
    "blake2s-144": Uint8Array;
    "blake2s-152": Uint8Array;
    "blake2s-160": Uint8Array;
    "blake2s-168": Uint8Array;
    "blake2s-176": Uint8Array;
    "blake2s-184": Uint8Array;
    "blake2s-192": Uint8Array;
    "blake2s-200": Uint8Array;
    "blake2s-208": Uint8Array;
    "blake2s-216": Uint8Array;
    "blake2s-224": Uint8Array;
    "blake2s-232": Uint8Array;
    "blake2s-240": Uint8Array;
    "blake2s-248": Uint8Array;
    "blake2s-256": Uint8Array;
    "skein256-8": Uint8Array;
    "skein256-16": Uint8Array;
    "skein256-24": Uint8Array;
    "skein256-32": Uint8Array;
    "skein256-40": Uint8Array;
    "skein256-48": Uint8Array;
    "skein256-56": Uint8Array;
    "skein256-64": Uint8Array;
    "skein256-72": Uint8Array;
    "skein256-80": Uint8Array;
    "skein256-88": Uint8Array;
    "skein256-96": Uint8Array;
    "skein256-104": Uint8Array;
    "skein256-112": Uint8Array;
    "skein256-120": Uint8Array;
    "skein256-128": Uint8Array;
    "skein256-136": Uint8Array;
    "skein256-144": Uint8Array;
    "skein256-152": Uint8Array;
    "skein256-160": Uint8Array;
    "skein256-168": Uint8Array;
    "skein256-176": Uint8Array;
    "skein256-184": Uint8Array;
    "skein256-192": Uint8Array;
    "skein256-200": Uint8Array;
    "skein256-208": Uint8Array;
    "skein256-216": Uint8Array;
    "skein256-224": Uint8Array;
    "skein256-232": Uint8Array;
    "skein256-240": Uint8Array;
    "skein256-248": Uint8Array;
    "skein256-256": Uint8Array;
    "skein512-8": Uint8Array;
    "skein512-16": Uint8Array;
    "skein512-24": Uint8Array;
    "skein512-32": Uint8Array;
    "skein512-40": Uint8Array;
    "skein512-48": Uint8Array;
    "skein512-56": Uint8Array;
    "skein512-64": Uint8Array;
    "skein512-72": Uint8Array;
    "skein512-80": Uint8Array;
    "skein512-88": Uint8Array;
    "skein512-96": Uint8Array;
    "skein512-104": Uint8Array;
    "skein512-112": Uint8Array;
    "skein512-120": Uint8Array;
    "skein512-128": Uint8Array;
    "skein512-136": Uint8Array;
    "skein512-144": Uint8Array;
    "skein512-152": Uint8Array;
    "skein512-160": Uint8Array;
    "skein512-168": Uint8Array;
    "skein512-176": Uint8Array;
    "skein512-184": Uint8Array;
    "skein512-192": Uint8Array;
    "skein512-200": Uint8Array;
    "skein512-208": Uint8Array;
    "skein512-216": Uint8Array;
    "skein512-224": Uint8Array;
    "skein512-232": Uint8Array;
    "skein512-240": Uint8Array;
    "skein512-248": Uint8Array;
    "skein512-256": Uint8Array;
    "skein512-264": Uint8Array;
    "skein512-272": Uint8Array;
    "skein512-280": Uint8Array;
    "skein512-288": Uint8Array;
    "skein512-296": Uint8Array;
    "skein512-304": Uint8Array;
    "skein512-312": Uint8Array;
    "skein512-320": Uint8Array;
    "skein512-328": Uint8Array;
    "skein512-336": Uint8Array;
    "skein512-344": Uint8Array;
    "skein512-352": Uint8Array;
    "skein512-360": Uint8Array;
    "skein512-368": Uint8Array;
    "skein512-376": Uint8Array;
    "skein512-384": Uint8Array;
    "skein512-392": Uint8Array;
    "skein512-400": Uint8Array;
    "skein512-408": Uint8Array;
    "skein512-416": Uint8Array;
    "skein512-424": Uint8Array;
    "skein512-432": Uint8Array;
    "skein512-440": Uint8Array;
    "skein512-448": Uint8Array;
    "skein512-456": Uint8Array;
    "skein512-464": Uint8Array;
    "skein512-472": Uint8Array;
    "skein512-480": Uint8Array;
    "skein512-488": Uint8Array;
    "skein512-496": Uint8Array;
    "skein512-504": Uint8Array;
    "skein512-512": Uint8Array;
    "skein1024-8": Uint8Array;
    "skein1024-16": Uint8Array;
    "skein1024-24": Uint8Array;
    "skein1024-32": Uint8Array;
    "skein1024-40": Uint8Array;
    "skein1024-48": Uint8Array;
    "skein1024-56": Uint8Array;
    "skein1024-64": Uint8Array;
    "skein1024-72": Uint8Array;
    "skein1024-80": Uint8Array;
    "skein1024-88": Uint8Array;
    "skein1024-96": Uint8Array;
    "skein1024-104": Uint8Array;
    "skein1024-112": Uint8Array;
    "skein1024-120": Uint8Array;
    "skein1024-128": Uint8Array;
    "skein1024-136": Uint8Array;
    "skein1024-144": Uint8Array;
    "skein1024-152": Uint8Array;
    "skein1024-160": Uint8Array;
    "skein1024-168": Uint8Array;
    "skein1024-176": Uint8Array;
    "skein1024-184": Uint8Array;
    "skein1024-192": Uint8Array;
    "skein1024-200": Uint8Array;
    "skein1024-208": Uint8Array;
    "skein1024-216": Uint8Array;
    "skein1024-224": Uint8Array;
    "skein1024-232": Uint8Array;
    "skein1024-240": Uint8Array;
    "skein1024-248": Uint8Array;
    "skein1024-256": Uint8Array;
    "skein1024-264": Uint8Array;
    "skein1024-272": Uint8Array;
    "skein1024-280": Uint8Array;
    "skein1024-288": Uint8Array;
    "skein1024-296": Uint8Array;
    "skein1024-304": Uint8Array;
    "skein1024-312": Uint8Array;
    "skein1024-320": Uint8Array;
    "skein1024-328": Uint8Array;
    "skein1024-336": Uint8Array;
    "skein1024-344": Uint8Array;
    "skein1024-352": Uint8Array;
    "skein1024-360": Uint8Array;
    "skein1024-368": Uint8Array;
    "skein1024-376": Uint8Array;
    "skein1024-384": Uint8Array;
    "skein1024-392": Uint8Array;
    "skein1024-400": Uint8Array;
    "skein1024-408": Uint8Array;
    "skein1024-416": Uint8Array;
    "skein1024-424": Uint8Array;
    "skein1024-432": Uint8Array;
    "skein1024-440": Uint8Array;
    "skein1024-448": Uint8Array;
    "skein1024-456": Uint8Array;
    "skein1024-464": Uint8Array;
    "skein1024-472": Uint8Array;
    "skein1024-480": Uint8Array;
    "skein1024-488": Uint8Array;
    "skein1024-496": Uint8Array;
    "skein1024-504": Uint8Array;
    "skein1024-512": Uint8Array;
    "skein1024-520": Uint8Array;
    "skein1024-528": Uint8Array;
    "skein1024-536": Uint8Array;
    "skein1024-544": Uint8Array;
    "skein1024-552": Uint8Array;
    "skein1024-560": Uint8Array;
    "skein1024-568": Uint8Array;
    "skein1024-576": Uint8Array;
    "skein1024-584": Uint8Array;
    "skein1024-592": Uint8Array;
    "skein1024-600": Uint8Array;
    "skein1024-608": Uint8Array;
    "skein1024-616": Uint8Array;
    "skein1024-624": Uint8Array;
    "skein1024-632": Uint8Array;
    "skein1024-640": Uint8Array;
    "skein1024-648": Uint8Array;
    "skein1024-656": Uint8Array;
    "skein1024-664": Uint8Array;
    "skein1024-672": Uint8Array;
    "skein1024-680": Uint8Array;
    "skein1024-688": Uint8Array;
    "skein1024-696": Uint8Array;
    "skein1024-704": Uint8Array;
    "skein1024-712": Uint8Array;
    "skein1024-720": Uint8Array;
    "skein1024-728": Uint8Array;
    "skein1024-736": Uint8Array;
    "skein1024-744": Uint8Array;
    "skein1024-752": Uint8Array;
    "skein1024-760": Uint8Array;
    "skein1024-768": Uint8Array;
    "skein1024-776": Uint8Array;
    "skein1024-784": Uint8Array;
    "skein1024-792": Uint8Array;
    "skein1024-800": Uint8Array;
    "skein1024-808": Uint8Array;
    "skein1024-816": Uint8Array;
    "skein1024-824": Uint8Array;
    "skein1024-832": Uint8Array;
    "skein1024-840": Uint8Array;
    "skein1024-848": Uint8Array;
    "skein1024-856": Uint8Array;
    "skein1024-864": Uint8Array;
    "skein1024-872": Uint8Array;
    "skein1024-880": Uint8Array;
    "skein1024-888": Uint8Array;
    "skein1024-896": Uint8Array;
    "skein1024-904": Uint8Array;
    "skein1024-912": Uint8Array;
    "skein1024-920": Uint8Array;
    "skein1024-928": Uint8Array;
    "skein1024-936": Uint8Array;
    "skein1024-944": Uint8Array;
    "skein1024-952": Uint8Array;
    "skein1024-960": Uint8Array;
    "skein1024-968": Uint8Array;
    "skein1024-976": Uint8Array;
    "skein1024-984": Uint8Array;
    "skein1024-992": Uint8Array;
    "skein1024-1000": Uint8Array;
    "skein1024-1008": Uint8Array;
    "skein1024-1016": Uint8Array;
    "skein1024-1024": Uint8Array;
    "poseidon-bls12_381-a2-fc1": Uint8Array;
    "poseidon-bls12_381-a2-fc1-sc": Uint8Array;
    "zeroxcert-imprint-256": Uint8Array;
    "fil-commitment-unsealed": Uint8Array;
    "fil-commitment-sealed": Uint8Array;
    "holochain-adr-v0": Uint8Array;
    "holochain-adr-v1": Uint8Array;
    "holochain-key-v0": Uint8Array;
    "holochain-key-v1": Uint8Array;
    "holochain-sig-v0": Uint8Array;
    "holochain-sig-v1": Uint8Array;
    "skynet-ns": Uint8Array;
    "arweave-ns": Uint8Array;
};
export type CodeNameMap = {
    0: import("./generated-types").CodecName;
    1: import("./generated-types").CodecName;
    2: import("./generated-types").CodecName;
    3: import("./generated-types").CodecName;
    4: import("./generated-types").CodecName;
    6: import("./generated-types").CodecName;
    17: import("./generated-types").CodecName;
    18: import("./generated-types").CodecName;
    19: import("./generated-types").CodecName;
    20: import("./generated-types").CodecName;
    21: import("./generated-types").CodecName;
    22: import("./generated-types").CodecName;
    23: import("./generated-types").CodecName;
    24: import("./generated-types").CodecName;
    25: import("./generated-types").CodecName;
    26: import("./generated-types").CodecName;
    27: import("./generated-types").CodecName;
    28: import("./generated-types").CodecName;
    29: import("./generated-types").CodecName;
    30: import("./generated-types").CodecName;
    33: import("./generated-types").CodecName;
    34: import("./generated-types").CodecName;
    35: import("./generated-types").CodecName;
    41: import("./generated-types").CodecName;
    42: import("./generated-types").CodecName;
    47: import("./generated-types").CodecName;
    48: import("./generated-types").CodecName;
    49: import("./generated-types").CodecName;
    50: import("./generated-types").CodecName;
    51: import("./generated-types").CodecName;
    53: import("./generated-types").CodecName;
    54: import("./generated-types").CodecName;
    55: import("./generated-types").CodecName;
    56: import("./generated-types").CodecName;
    80: import("./generated-types").CodecName;
    81: import("./generated-types").CodecName;
    85: import("./generated-types").CodecName;
    86: import("./generated-types").CodecName;
    96: import("./generated-types").CodecName;
    99: import("./generated-types").CodecName;
    112: import("./generated-types").CodecName;
    113: import("./generated-types").CodecName;
    114: import("./generated-types").CodecName;
    120: import("./generated-types").CodecName;
    123: import("./generated-types").CodecName;
    124: import("./generated-types").CodecName;
    129: import("./generated-types").CodecName;
    130: import("./generated-types").CodecName;
    131: import("./generated-types").CodecName;
    132: import("./generated-types").CodecName;
    133: import("./generated-types").CodecName;
    134: import("./generated-types").CodecName;
    144: import("./generated-types").CodecName;
    145: import("./generated-types").CodecName;
    146: import("./generated-types").CodecName;
    147: import("./generated-types").CodecName;
    148: import("./generated-types").CodecName;
    149: import("./generated-types").CodecName;
    150: import("./generated-types").CodecName;
    151: import("./generated-types").CodecName;
    152: import("./generated-types").CodecName;
    153: import("./generated-types").CodecName;
    154: import("./generated-types").CodecName;
    176: import("./generated-types").CodecName;
    177: import("./generated-types").CodecName;
    178: import("./generated-types").CodecName;
    192: import("./generated-types").CodecName;
    193: import("./generated-types").CodecName;
    202: import("./generated-types").CodecName;
    206: import("./generated-types").CodecName;
    208: import("./generated-types").CodecName;
    209: import("./generated-types").CodecName;
    212: import("./generated-types").CodecName;
    213: import("./generated-types").CodecName;
    214: import("./generated-types").CodecName;
    224: import("./generated-types").CodecName;
    225: import("./generated-types").CodecName;
    226: import("./generated-types").CodecName;
    227: import("./generated-types").CodecName;
    228: import("./generated-types").CodecName;
    229: import("./generated-types").CodecName;
    230: import("./generated-types").CodecName;
    231: import("./generated-types").CodecName;
    234: import("./generated-types").CodecName;
    235: import("./generated-types").CodecName;
    236: import("./generated-types").CodecName;
    237: import("./generated-types").CodecName;
    238: import("./generated-types").CodecName;
    240: import("./generated-types").CodecName;
    241: import("./generated-types").CodecName;
    250: import("./generated-types").CodecName;
    251: import("./generated-types").CodecName;
    273: import("./generated-types").CodecName;
    275: import("./generated-types").CodecName;
    276: import("./generated-types").CodecName;
    277: import("./generated-types").CodecName;
    290: import("./generated-types").CodecName;
    297: import("./generated-types").CodecName;
    301: import("./generated-types").CodecName;
    302: import("./generated-types").CodecName;
    400: import("./generated-types").CodecName;
    406: import("./generated-types").CodecName;
    421: import("./generated-types").CodecName;
    443: import("./generated-types").CodecName;
    444: import("./generated-types").CodecName;
    445: import("./generated-types").CodecName;
    446: import("./generated-types").CodecName;
    447: import("./generated-types").CodecName;
    448: import("./generated-types").CodecName;
    454: import("./generated-types").CodecName;
    460: import("./generated-types").CodecName;
    477: import("./generated-types").CodecName;
    478: import("./generated-types").CodecName;
    479: import("./generated-types").CodecName;
    480: import("./generated-types").CodecName;
    496: import("./generated-types").CodecName;
    512: import("./generated-types").CodecName;
    513: import("./generated-types").CodecName;
    769: import("./generated-types").CodecName;
    770: import("./generated-types").CodecName;
    1024: import("./generated-types").CodecName;
    4114: import("./generated-types").CodecName;
    4178: import("./generated-types").CodecName;
    4179: import("./generated-types").CodecName;
    4180: import("./generated-types").CodecName;
    4181: import("./generated-types").CodecName;
    4352: import("./generated-types").CodecName;
    4608: import("./generated-types").CodecName;
    4609: import("./generated-types").CodecName;
    4610: import("./generated-types").CodecName;
    4611: import("./generated-types").CodecName;
    4612: import("./generated-types").CodecName;
    4864: import("./generated-types").CodecName;
    4865: import("./generated-types").CodecName;
    4866: import("./generated-types").CodecName;
    7425: import("./generated-types").CodecName;
    21325: import("./generated-types").CodecName;
    45569: import("./generated-types").CodecName;
    45570: import("./generated-types").CodecName;
    45571: import("./generated-types").CodecName;
    45572: import("./generated-types").CodecName;
    45573: import("./generated-types").CodecName;
    45574: import("./generated-types").CodecName;
    45575: import("./generated-types").CodecName;
    45576: import("./generated-types").CodecName;
    45577: import("./generated-types").CodecName;
    45578: import("./generated-types").CodecName;
    45579: import("./generated-types").CodecName;
    45580: import("./generated-types").CodecName;
    45581: import("./generated-types").CodecName;
    45582: import("./generated-types").CodecName;
    45583: import("./generated-types").CodecName;
    45584: import("./generated-types").CodecName;
    45585: import("./generated-types").CodecName;
    45586: import("./generated-types").CodecName;
    45587: import("./generated-types").CodecName;
    45588: import("./generated-types").CodecName;
    45589: import("./generated-types").CodecName;
    45590: import("./generated-types").CodecName;
    45591: import("./generated-types").CodecName;
    45592: import("./generated-types").CodecName;
    45593: import("./generated-types").CodecName;
    45594: import("./generated-types").CodecName;
    45595: import("./generated-types").CodecName;
    45596: import("./generated-types").CodecName;
    45597: import("./generated-types").CodecName;
    45598: import("./generated-types").CodecName;
    45599: import("./generated-types").CodecName;
    45600: import("./generated-types").CodecName;
    45601: import("./generated-types").CodecName;
    45602: import("./generated-types").CodecName;
    45603: import("./generated-types").CodecName;
    45604: import("./generated-types").CodecName;
    45605: import("./generated-types").CodecName;
    45606: import("./generated-types").CodecName;
    45607: import("./generated-types").CodecName;
    45608: import("./generated-types").CodecName;
    45609: import("./generated-types").CodecName;
    45610: import("./generated-types").CodecName;
    45611: import("./generated-types").CodecName;
    45612: import("./generated-types").CodecName;
    45613: import("./generated-types").CodecName;
    45614: import("./generated-types").CodecName;
    45615: import("./generated-types").CodecName;
    45616: import("./generated-types").CodecName;
    45617: import("./generated-types").CodecName;
    45618: import("./generated-types").CodecName;
    45619: import("./generated-types").CodecName;
    45620: import("./generated-types").CodecName;
    45621: import("./generated-types").CodecName;
    45622: import("./generated-types").CodecName;
    45623: import("./generated-types").CodecName;
    45624: import("./generated-types").CodecName;
    45625: import("./generated-types").CodecName;
    45626: import("./generated-types").CodecName;
    45627: import("./generated-types").CodecName;
    45628: import("./generated-types").CodecName;
    45629: import("./generated-types").CodecName;
    45630: import("./generated-types").CodecName;
    45631: import("./generated-types").CodecName;
    45632: import("./generated-types").CodecName;
    45633: import("./generated-types").CodecName;
    45634: import("./generated-types").CodecName;
    45635: import("./generated-types").CodecName;
    45636: import("./generated-types").CodecName;
    45637: import("./generated-types").CodecName;
    45638: import("./generated-types").CodecName;
    45639: import("./generated-types").CodecName;
    45640: import("./generated-types").CodecName;
    45641: import("./generated-types").CodecName;
    45642: import("./generated-types").CodecName;
    45643: import("./generated-types").CodecName;
    45644: import("./generated-types").CodecName;
    45645: import("./generated-types").CodecName;
    45646: import("./generated-types").CodecName;
    45647: import("./generated-types").CodecName;
    45648: import("./generated-types").CodecName;
    45649: import("./generated-types").CodecName;
    45650: import("./generated-types").CodecName;
    45651: import("./generated-types").CodecName;
    45652: import("./generated-types").CodecName;
    45653: import("./generated-types").CodecName;
    45654: import("./generated-types").CodecName;
    45655: import("./generated-types").CodecName;
    45656: import("./generated-types").CodecName;
    45657: import("./generated-types").CodecName;
    45658: import("./generated-types").CodecName;
    45659: import("./generated-types").CodecName;
    45660: import("./generated-types").CodecName;
    45661: import("./generated-types").CodecName;
    45662: import("./generated-types").CodecName;
    45663: import("./generated-types").CodecName;
    45664: import("./generated-types").CodecName;
    45825: import("./generated-types").CodecName;
    45826: import("./generated-types").CodecName;
    45827: import("./generated-types").CodecName;
    45828: import("./generated-types").CodecName;
    45829: import("./generated-types").CodecName;
    45830: import("./generated-types").CodecName;
    45831: import("./generated-types").CodecName;
    45832: import("./generated-types").CodecName;
    45833: import("./generated-types").CodecName;
    45834: import("./generated-types").CodecName;
    45835: import("./generated-types").CodecName;
    45836: import("./generated-types").CodecName;
    45837: import("./generated-types").CodecName;
    45838: import("./generated-types").CodecName;
    45839: import("./generated-types").CodecName;
    45840: import("./generated-types").CodecName;
    45841: import("./generated-types").CodecName;
    45842: import("./generated-types").CodecName;
    45843: import("./generated-types").CodecName;
    45844: import("./generated-types").CodecName;
    45845: import("./generated-types").CodecName;
    45846: import("./generated-types").CodecName;
    45847: import("./generated-types").CodecName;
    45848: import("./generated-types").CodecName;
    45849: import("./generated-types").CodecName;
    45850: import("./generated-types").CodecName;
    45851: import("./generated-types").CodecName;
    45852: import("./generated-types").CodecName;
    45853: import("./generated-types").CodecName;
    45854: import("./generated-types").CodecName;
    45855: import("./generated-types").CodecName;
    45856: import("./generated-types").CodecName;
    45857: import("./generated-types").CodecName;
    45858: import("./generated-types").CodecName;
    45859: import("./generated-types").CodecName;
    45860: import("./generated-types").CodecName;
    45861: import("./generated-types").CodecName;
    45862: import("./generated-types").CodecName;
    45863: import("./generated-types").CodecName;
    45864: import("./generated-types").CodecName;
    45865: import("./generated-types").CodecName;
    45866: import("./generated-types").CodecName;
    45867: import("./generated-types").CodecName;
    45868: import("./generated-types").CodecName;
    45869: import("./generated-types").CodecName;
    45870: import("./generated-types").CodecName;
    45871: import("./generated-types").CodecName;
    45872: import("./generated-types").CodecName;
    45873: import("./generated-types").CodecName;
    45874: import("./generated-types").CodecName;
    45875: import("./generated-types").CodecName;
    45876: import("./generated-types").CodecName;
    45877: import("./generated-types").CodecName;
    45878: import("./generated-types").CodecName;
    45879: import("./generated-types").CodecName;
    45880: import("./generated-types").CodecName;
    45881: import("./generated-types").CodecName;
    45882: import("./generated-types").CodecName;
    45883: import("./generated-types").CodecName;
    45884: import("./generated-types").CodecName;
    45885: import("./generated-types").CodecName;
    45886: import("./generated-types").CodecName;
    45887: import("./generated-types").CodecName;
    45888: import("./generated-types").CodecName;
    45889: import("./generated-types").CodecName;
    45890: import("./generated-types").CodecName;
    45891: import("./generated-types").CodecName;
    45892: import("./generated-types").CodecName;
    45893: import("./generated-types").CodecName;
    45894: import("./generated-types").CodecName;
    45895: import("./generated-types").CodecName;
    45896: import("./generated-types").CodecName;
    45897: import("./generated-types").CodecName;
    45898: import("./generated-types").CodecName;
    45899: import("./generated-types").CodecName;
    45900: import("./generated-types").CodecName;
    45901: import("./generated-types").CodecName;
    45902: import("./generated-types").CodecName;
    45903: import("./generated-types").CodecName;
    45904: import("./generated-types").CodecName;
    45905: import("./generated-types").CodecName;
    45906: import("./generated-types").CodecName;
    45907: import("./generated-types").CodecName;
    45908: import("./generated-types").CodecName;
    45909: import("./generated-types").CodecName;
    45910: import("./generated-types").CodecName;
    45911: import("./generated-types").CodecName;
    45912: import("./generated-types").CodecName;
    45913: import("./generated-types").CodecName;
    45914: import("./generated-types").CodecName;
    45915: import("./generated-types").CodecName;
    45916: import("./generated-types").CodecName;
    45917: import("./generated-types").CodecName;
    45918: import("./generated-types").CodecName;
    45919: import("./generated-types").CodecName;
    45920: import("./generated-types").CodecName;
    45921: import("./generated-types").CodecName;
    45922: import("./generated-types").CodecName;
    45923: import("./generated-types").CodecName;
    45924: import("./generated-types").CodecName;
    45925: import("./generated-types").CodecName;
    45926: import("./generated-types").CodecName;
    45927: import("./generated-types").CodecName;
    45928: import("./generated-types").CodecName;
    45929: import("./generated-types").CodecName;
    45930: import("./generated-types").CodecName;
    45931: import("./generated-types").CodecName;
    45932: import("./generated-types").CodecName;
    45933: import("./generated-types").CodecName;
    45934: import("./generated-types").CodecName;
    45935: import("./generated-types").CodecName;
    45936: import("./generated-types").CodecName;
    45937: import("./generated-types").CodecName;
    45938: import("./generated-types").CodecName;
    45939: import("./generated-types").CodecName;
    45940: import("./generated-types").CodecName;
    45941: import("./generated-types").CodecName;
    45942: import("./generated-types").CodecName;
    45943: import("./generated-types").CodecName;
    45944: import("./generated-types").CodecName;
    45945: import("./generated-types").CodecName;
    45946: import("./generated-types").CodecName;
    45947: import("./generated-types").CodecName;
    45948: import("./generated-types").CodecName;
    45949: import("./generated-types").CodecName;
    45950: import("./generated-types").CodecName;
    45951: import("./generated-types").CodecName;
    45952: import("./generated-types").CodecName;
    45953: import("./generated-types").CodecName;
    45954: import("./generated-types").CodecName;
    45955: import("./generated-types").CodecName;
    45956: import("./generated-types").CodecName;
    45957: import("./generated-types").CodecName;
    45958: import("./generated-types").CodecName;
    45959: import("./generated-types").CodecName;
    45960: import("./generated-types").CodecName;
    45961: import("./generated-types").CodecName;
    45962: import("./generated-types").CodecName;
    45963: import("./generated-types").CodecName;
    45964: import("./generated-types").CodecName;
    45965: import("./generated-types").CodecName;
    45966: import("./generated-types").CodecName;
    45967: import("./generated-types").CodecName;
    45968: import("./generated-types").CodecName;
    45969: import("./generated-types").CodecName;
    45970: import("./generated-types").CodecName;
    45971: import("./generated-types").CodecName;
    45972: import("./generated-types").CodecName;
    45973: import("./generated-types").CodecName;
    45974: import("./generated-types").CodecName;
    45975: import("./generated-types").CodecName;
    45976: import("./generated-types").CodecName;
    45977: import("./generated-types").CodecName;
    45978: import("./generated-types").CodecName;
    45979: import("./generated-types").CodecName;
    45980: import("./generated-types").CodecName;
    45981: import("./generated-types").CodecName;
    45982: import("./generated-types").CodecName;
    45983: import("./generated-types").CodecName;
    45984: import("./generated-types").CodecName;
    45985: import("./generated-types").CodecName;
    45986: import("./generated-types").CodecName;
    45987: import("./generated-types").CodecName;
    45988: import("./generated-types").CodecName;
    45989: import("./generated-types").CodecName;
    45990: import("./generated-types").CodecName;
    45991: import("./generated-types").CodecName;
    45992: import("./generated-types").CodecName;
    45993: import("./generated-types").CodecName;
    45994: import("./generated-types").CodecName;
    45995: import("./generated-types").CodecName;
    45996: import("./generated-types").CodecName;
    45997: import("./generated-types").CodecName;
    45998: import("./generated-types").CodecName;
    45999: import("./generated-types").CodecName;
    46000: import("./generated-types").CodecName;
    46001: import("./generated-types").CodecName;
    46002: import("./generated-types").CodecName;
    46003: import("./generated-types").CodecName;
    46004: import("./generated-types").CodecName;
    46005: import("./generated-types").CodecName;
    46006: import("./generated-types").CodecName;
    46007: import("./generated-types").CodecName;
    46008: import("./generated-types").CodecName;
    46009: import("./generated-types").CodecName;
    46010: import("./generated-types").CodecName;
    46011: import("./generated-types").CodecName;
    46012: import("./generated-types").CodecName;
    46013: import("./generated-types").CodecName;
    46014: import("./generated-types").CodecName;
    46015: import("./generated-types").CodecName;
    46016: import("./generated-types").CodecName;
    46017: import("./generated-types").CodecName;
    46018: import("./generated-types").CodecName;
    46019: import("./generated-types").CodecName;
    46020: import("./generated-types").CodecName;
    46021: import("./generated-types").CodecName;
    46022: import("./generated-types").CodecName;
    46023: import("./generated-types").CodecName;
    46024: import("./generated-types").CodecName;
    46025: import("./generated-types").CodecName;
    46026: import("./generated-types").CodecName;
    46027: import("./generated-types").CodecName;
    46028: import("./generated-types").CodecName;
    46029: import("./generated-types").CodecName;
    46030: import("./generated-types").CodecName;
    46031: import("./generated-types").CodecName;
    46032: import("./generated-types").CodecName;
    46033: import("./generated-types").CodecName;
    46034: import("./generated-types").CodecName;
    46035: import("./generated-types").CodecName;
    46036: import("./generated-types").CodecName;
    46037: import("./generated-types").CodecName;
    46038: import("./generated-types").CodecName;
    46039: import("./generated-types").CodecName;
    46040: import("./generated-types").CodecName;
    46041: import("./generated-types").CodecName;
    46042: import("./generated-types").CodecName;
    46043: import("./generated-types").CodecName;
    46044: import("./generated-types").CodecName;
    46045: import("./generated-types").CodecName;
    46046: import("./generated-types").CodecName;
    46047: import("./generated-types").CodecName;
    46048: import("./generated-types").CodecName;
    46081: import("./generated-types").CodecName;
    46082: import("./generated-types").CodecName;
    52753: import("./generated-types").CodecName;
    61697: import("./generated-types").CodecName;
    61698: import("./generated-types").CodecName;
    8417572: import("./generated-types").CodecName;
    8483108: import("./generated-types").CodecName;
    9728292: import("./generated-types").CodecName;
    9793828: import("./generated-types").CodecName;
    10645796: import("./generated-types").CodecName;
    10711332: import("./generated-types").CodecName;
    11639056: import("./generated-types").CodecName;
    11704592: import("./generated-types").CodecName;
};
export type CodecName = "identity" | "cidv1" | "cidv2" | "cidv3" | "ip4" | "tcp" | "sha1" | "sha2-256" | "sha2-512" | "sha3-512" | "sha3-384" | "sha3-256" | "sha3-224" | "shake-128" | "shake-256" | "keccak-224" | "keccak-256" | "keccak-384" | "keccak-512" | "blake3" | "dccp" | "murmur3-128" | "murmur3-32" | "ip6" | "ip6zone" | "path" | "multicodec" | "multihash" | "multiaddr" | "multibase" | "dns" | "dns4" | "dns6" | "dnsaddr" | "protobuf" | "cbor" | "raw" | "dbl-sha2-256" | "rlp" | "bencode" | "dag-pb" | "dag-cbor" | "libp2p-key" | "git-raw" | "torrent-info" | "torrent-file" | "leofcoin-block" | "leofcoin-tx" | "leofcoin-pr" | "sctp" | "dag-jose" | "dag-cose" | "eth-block" | "eth-block-list" | "eth-tx-trie" | "eth-tx" | "eth-tx-receipt-trie" | "eth-tx-receipt" | "eth-state-trie" | "eth-account-snapshot" | "eth-storage-trie" | "eth-receipt-log-trie" | "eth-reciept-log" | "bitcoin-block" | "bitcoin-tx" | "bitcoin-witness-commitment" | "zcash-block" | "zcash-tx" | "caip-50" | "streamid" | "stellar-block" | "stellar-tx" | "md4" | "md5" | "bmt" | "decred-block" | "decred-tx" | "ipld-ns" | "ipfs-ns" | "swarm-ns" | "ipns-ns" | "zeronet" | "secp256k1-pub" | "bls12_381-g1-pub" | "bls12_381-g2-pub" | "x25519-pub" | "ed25519-pub" | "bls12_381-g1g2-pub" | "dash-block" | "dash-tx" | "swarm-manifest" | "swarm-feed" | "udp" | "p2p-webrtc-star" | "p2p-webrtc-direct" | "p2p-stardust" | "p2p-circuit" | "dag-json" | "udt" | "utp" | "unix" | "thread" | "p2p" | "ipfs" | "https" | "onion" | "onion3" | "garlic64" | "garlic32" | "tls" | "noise" | "quic" | "ws" | "wss" | "p2p-websocket-star" | "http" | "swhid-1-snp" | "json" | "messagepack" | "libp2p-peer-record" | "libp2p-relay-rsvp" | "car-index-sorted" | "sha2-256-trunc254-padded" | "ripemd-128" | "ripemd-160" | "ripemd-256" | "ripemd-320" | "x11" | "p256-pub" | "p384-pub" | "p521-pub" | "ed448-pub" | "x448-pub" | "ed25519-priv" | "secp256k1-priv" | "x25519-priv" | "kangarootwelve" | "sm3-256" | "blake2b-8" | "blake2b-16" | "blake2b-24" | "blake2b-32" | "blake2b-40" | "blake2b-48" | "blake2b-56" | "blake2b-64" | "blake2b-72" | "blake2b-80" | "blake2b-88" | "blake2b-96" | "blake2b-104" | "blake2b-112" | "blake2b-120" | "blake2b-128" | "blake2b-136" | "blake2b-144" | "blake2b-152" | "blake2b-160" | "blake2b-168" | "blake2b-176" | "blake2b-184" | "blake2b-192" | "blake2b-200" | "blake2b-208" | "blake2b-216" | "blake2b-224" | "blake2b-232" | "blake2b-240" | "blake2b-248" | "blake2b-256" | "blake2b-264" | "blake2b-272" | "blake2b-280" | "blake2b-288" | "blake2b-296" | "blake2b-304" | "blake2b-312" | "blake2b-320" | "blake2b-328" | "blake2b-336" | "blake2b-344" | "blake2b-352" | "blake2b-360" | "blake2b-368" | "blake2b-376" | "blake2b-384" | "blake2b-392" | "blake2b-400" | "blake2b-408" | "blake2b-416" | "blake2b-424" | "blake2b-432" | "blake2b-440" | "blake2b-448" | "blake2b-456" | "blake2b-464" | "blake2b-472" | "blake2b-480" | "blake2b-488" | "blake2b-496" | "blake2b-504" | "blake2b-512" | "blake2s-8" | "blake2s-16" | "blake2s-24" | "blake2s-32" | "blake2s-40" | "blake2s-48" | "blake2s-56" | "blake2s-64" | "blake2s-72" | "blake2s-80" | "blake2s-88" | "blake2s-96" | "blake2s-104" | "blake2s-112" | "blake2s-120" | "blake2s-128" | "blake2s-136" | "blake2s-144" | "blake2s-152" | "blake2s-160" | "blake2s-168" | "blake2s-176" | "blake2s-184" | "blake2s-192" | "blake2s-200" | "blake2s-208" | "blake2s-216" | "blake2s-224" | "blake2s-232" | "blake2s-240" | "blake2s-248" | "blake2s-256" | "skein256-8" | "skein256-16" | "skein256-24" | "skein256-32" | "skein256-40" | "skein256-48" | "skein256-56" | "skein256-64" | "skein256-72" | "skein256-80" | "skein256-88" | "skein256-96" | "skein256-104" | "skein256-112" | "skein256-120" | "skein256-128" | "skein256-136" | "skein256-144" | "skein256-152" | "skein256-160" | "skein256-168" | "skein256-176" | "skein256-184" | "skein256-192" | "skein256-200" | "skein256-208" | "skein256-216" | "skein256-224" | "skein256-232" | "skein256-240" | "skein256-248" | "skein256-256" | "skein512-8" | "skein512-16" | "skein512-24" | "skein512-32" | "skein512-40" | "skein512-48" | "skein512-56" | "skein512-64" | "skein512-72" | "skein512-80" | "skein512-88" | "skein512-96" | "skein512-104" | "skein512-112" | "skein512-120" | "skein512-128" | "skein512-136" | "skein512-144" | "skein512-152" | "skein512-160" | "skein512-168" | "skein512-176" | "skein512-184" | "skein512-192" | "skein512-200" | "skein512-208" | "skein512-216" | "skein512-224" | "skein512-232" | "skein512-240" | "skein512-248" | "skein512-256" | "skein512-264" | "skein512-272" | "skein512-280" | "skein512-288" | "skein512-296" | "skein512-304" | "skein512-312" | "skein512-320" | "skein512-328" | "skein512-336" | "skein512-344" | "skein512-352" | "skein512-360" | "skein512-368" | "skein512-376" | "skein512-384" | "skein512-392" | "skein512-400" | "skein512-408" | "skein512-416" | "skein512-424" | "skein512-432" | "skein512-440" | "skein512-448" | "skein512-456" | "skein512-464" | "skein512-472" | "skein512-480" | "skein512-488" | "skein512-496" | "skein512-504" | "skein512-512" | "skein1024-8" | "skein1024-16" | "skein1024-24" | "skein1024-32" | "skein1024-40" | "skein1024-48" | "skein1024-56" | "skein1024-64" | "skein1024-72" | "skein1024-80" | "skein1024-88" | "skein1024-96" | "skein1024-104" | "skein1024-112" | "skein1024-120" | "skein1024-128" | "skein1024-136" | "skein1024-144" | "skein1024-152" | "skein1024-160" | "skein1024-168" | "skein1024-176" | "skein1024-184" | "skein1024-192" | "skein1024-200" | "skein1024-208" | "skein1024-216" | "skein1024-224" | "skein1024-232" | "skein1024-240" | "skein1024-248" | "skein1024-256" | "skein1024-264" | "skein1024-272" | "skein1024-280" | "skein1024-288" | "skein1024-296" | "skein1024-304" | "skein1024-312" | "skein1024-320" | "skein1024-328" | "skein1024-336" | "skein1024-344" | "skein1024-352" | "skein1024-360" | "skein1024-368" | "skein1024-376" | "skein1024-384" | "skein1024-392" | "skein1024-400" | "skein1024-408" | "skein1024-416" | "skein1024-424" | "skein1024-432" | "skein1024-440" | "skein1024-448" | "skein1024-456" | "skein1024-464" | "skein1024-472" | "skein1024-480" | "skein1024-488" | "skein1024-496" | "skein1024-504" | "skein1024-512" | "skein1024-520" | "skein1024-528" | "skein1024-536" | "skein1024-544" | "skein1024-552" | "skein1024-560" | "skein1024-568" | "skein1024-576" | "skein1024-584" | "skein1024-592" | "skein1024-600" | "skein1024-608" | "skein1024-616" | "skein1024-624" | "skein1024-632" | "skein1024-640" | "skein1024-648" | "skein1024-656" | "skein1024-664" | "skein1024-672" | "skein1024-680" | "skein1024-688" | "skein1024-696" | "skein1024-704" | "skein1024-712" | "skein1024-720" | "skein1024-728" | "skein1024-736" | "skein1024-744" | "skein1024-752" | "skein1024-760" | "skein1024-768" | "skein1024-776" | "skein1024-784" | "skein1024-792" | "skein1024-800" | "skein1024-808" | "skein1024-816" | "skein1024-824" | "skein1024-832" | "skein1024-840" | "skein1024-848" | "skein1024-856" | "skein1024-864" | "skein1024-872" | "skein1024-880" | "skein1024-888" | "skein1024-896" | "skein1024-904" | "skein1024-912" | "skein1024-920" | "skein1024-928" | "skein1024-936" | "skein1024-944" | "skein1024-952" | "skein1024-960" | "skein1024-968" | "skein1024-976" | "skein1024-984" | "skein1024-992" | "skein1024-1000" | "skein1024-1008" | "skein1024-1016" | "skein1024-1024" | "poseidon-bls12_381-a2-fc1" | "poseidon-bls12_381-a2-fc1-sc" | "zeroxcert-imprint-256" | "fil-commitment-unsealed" | "fil-commitment-sealed" | "holochain-adr-v0" | "holochain-adr-v1" | "holochain-key-v0" | "holochain-key-v1" | "holochain-sig-v0" | "holochain-sig-v1" | "skynet-ns" | "arweave-ns";
export type CodecConstant = "IDENTITY" | "CIDV1" | "CIDV2" | "CIDV3" | "IP4" | "TCP" | "SHA1" | "SHA2_256" | "SHA2_512" | "SHA3_512" | "SHA3_384" | "SHA3_256" | "SHA3_224" | "SHAKE_128" | "SHAKE_256" | "KECCAK_224" | "KECCAK_256" | "KECCAK_384" | "KECCAK_512" | "BLAKE3" | "DCCP" | "MURMUR3_128" | "MURMUR3_32" | "IP6" | "IP6ZONE" | "PATH" | "MULTICODEC" | "MULTIHASH" | "MULTIADDR" | "MULTIBASE" | "DNS" | "DNS4" | "DNS6" | "DNSADDR" | "PROTOBUF" | "CBOR" | "RAW" | "DBL_SHA2_256" | "RLP" | "BENCODE" | "DAG_PB" | "DAG_CBOR" | "LIBP2P_KEY" | "GIT_RAW" | "TORRENT_INFO" | "TORRENT_FILE" | "LEOFCOIN_BLOCK" | "LEOFCOIN_TX" | "LEOFCOIN_PR" | "SCTP" | "DAG_JOSE" | "DAG_COSE" | "ETH_BLOCK" | "ETH_BLOCK_LIST" | "ETH_TX_TRIE" | "ETH_TX" | "ETH_TX_RECEIPT_TRIE" | "ETH_TX_RECEIPT" | "ETH_STATE_TRIE" | "ETH_ACCOUNT_SNAPSHOT" | "ETH_STORAGE_TRIE" | "ETH_RECEIPT_LOG_TRIE" | "ETH_RECIEPT_LOG" | "BITCOIN_BLOCK" | "BITCOIN_TX" | "BITCOIN_WITNESS_COMMITMENT" | "ZCASH_BLOCK" | "ZCASH_TX" | "CAIP_50" | "STREAMID" | "STELLAR_BLOCK" | "STELLAR_TX" | "MD4" | "MD5" | "BMT" | "DECRED_BLOCK" | "DECRED_TX" | "IPLD_NS" | "IPFS_NS" | "SWARM_NS" | "IPNS_NS" | "ZERONET" | "SECP256K1_PUB" | "BLS12_381_G1_PUB" | "BLS12_381_G2_PUB" | "X25519_PUB" | "ED25519_PUB" | "BLS12_381_G1G2_PUB" | "DASH_BLOCK" | "DASH_TX" | "SWARM_MANIFEST" | "SWARM_FEED" | "UDP" | "P2P_WEBRTC_STAR" | "P2P_WEBRTC_DIRECT" | "P2P_STARDUST" | "P2P_CIRCUIT" | "DAG_JSON" | "UDT" | "UTP" | "UNIX" | "THREAD" | "P2P" | "IPFS" | "HTTPS" | "ONION" | "ONION3" | "GARLIC64" | "GARLIC32" | "TLS" | "NOISE" | "QUIC" | "WS" | "WSS" | "P2P_WEBSOCKET_STAR" | "HTTP" | "SWHID_1_SNP" | "JSON" | "MESSAGEPACK" | "LIBP2P_PEER_RECORD" | "LIBP2P_RELAY_RSVP" | "CAR_INDEX_SORTED" | "SHA2_256_TRUNC254_PADDED" | "RIPEMD_128" | "RIPEMD_160" | "RIPEMD_256" | "RIPEMD_320" | "X11" | "P256_PUB" | "P384_PUB" | "P521_PUB" | "ED448_PUB" | "X448_PUB" | "ED25519_PRIV" | "SECP256K1_PRIV" | "X25519_PRIV" | "KANGAROOTWELVE" | "SM3_256" | "BLAKE2B_8" | "BLAKE2B_16" | "BLAKE2B_24" | "BLAKE2B_32" | "BLAKE2B_40" | "BLAKE2B_48" | "BLAKE2B_56" | "BLAKE2B_64" | "BLAKE2B_72" | "BLAKE2B_80" | "BLAKE2B_88" | "BLAKE2B_96" | "BLAKE2B_104" | "BLAKE2B_112" | "BLAKE2B_120" | "BLAKE2B_128" | "BLAKE2B_136" | "BLAKE2B_144" | "BLAKE2B_152" | "BLAKE2B_160" | "BLAKE2B_168" | "BLAKE2B_176" | "BLAKE2B_184" | "BLAKE2B_192" | "BLAKE2B_200" | "BLAKE2B_208" | "BLAKE2B_216" | "BLAKE2B_224" | "BLAKE2B_232" | "BLAKE2B_240" | "BLAKE2B_248" | "BLAKE2B_256" | "BLAKE2B_264" | "BLAKE2B_272" | "BLAKE2B_280" | "BLAKE2B_288" | "BLAKE2B_296" | "BLAKE2B_304" | "BLAKE2B_312" | "BLAKE2B_320" | "BLAKE2B_328" | "BLAKE2B_336" | "BLAKE2B_344" | "BLAKE2B_352" | "BLAKE2B_360" | "BLAKE2B_368" | "BLAKE2B_376" | "BLAKE2B_384" | "BLAKE2B_392" | "BLAKE2B_400" | "BLAKE2B_408" | "BLAKE2B_416" | "BLAKE2B_424" | "BLAKE2B_432" | "BLAKE2B_440" | "BLAKE2B_448" | "BLAKE2B_456" | "BLAKE2B_464" | "BLAKE2B_472" | "BLAKE2B_480" | "BLAKE2B_488" | "BLAKE2B_496" | "BLAKE2B_504" | "BLAKE2B_512" | "BLAKE2S_8" | "BLAKE2S_16" | "BLAKE2S_24" | "BLAKE2S_32" | "BLAKE2S_40" | "BLAKE2S_48" | "BLAKE2S_56" | "BLAKE2S_64" | "BLAKE2S_72" | "BLAKE2S_80" | "BLAKE2S_88" | "BLAKE2S_96" | "BLAKE2S_104" | "BLAKE2S_112" | "BLAKE2S_120" | "BLAKE2S_128" | "BLAKE2S_136" | "BLAKE2S_144" | "BLAKE2S_152" | "BLAKE2S_160" | "BLAKE2S_168" | "BLAKE2S_176" | "BLAKE2S_184" | "BLAKE2S_192" | "BLAKE2S_200" | "BLAKE2S_208" | "BLAKE2S_216" | "BLAKE2S_224" | "BLAKE2S_232" | "BLAKE2S_240" | "BLAKE2S_248" | "BLAKE2S_256" | "SKEIN256_8" | "SKEIN256_16" | "SKEIN256_24" | "SKEIN256_32" | "SKEIN256_40" | "SKEIN256_48" | "SKEIN256_56" | "SKEIN256_64" | "SKEIN256_72" | "SKEIN256_80" | "SKEIN256_88" | "SKEIN256_96" | "SKEIN256_104" | "SKEIN256_112" | "SKEIN256_120" | "SKEIN256_128" | "SKEIN256_136" | "SKEIN256_144" | "SKEIN256_152" | "SKEIN256_160" | "SKEIN256_168" | "SKEIN256_176" | "SKEIN256_184" | "SKEIN256_192" | "SKEIN256_200" | "SKEIN256_208" | "SKEIN256_216" | "SKEIN256_224" | "SKEIN256_232" | "SKEIN256_240" | "SKEIN256_248" | "SKEIN256_256" | "SKEIN512_8" | "SKEIN512_16" | "SKEIN512_24" | "SKEIN512_32" | "SKEIN512_40" | "SKEIN512_48" | "SKEIN512_56" | "SKEIN512_64" | "SKEIN512_72" | "SKEIN512_80" | "SKEIN512_88" | "SKEIN512_96" | "SKEIN512_104" | "SKEIN512_112" | "SKEIN512_120" | "SKEIN512_128" | "SKEIN512_136" | "SKEIN512_144" | "SKEIN512_152" | "SKEIN512_160" | "SKEIN512_168" | "SKEIN512_176" | "SKEIN512_184" | "SKEIN512_192" | "SKEIN512_200" | "SKEIN512_208" | "SKEIN512_216" | "SKEIN512_224" | "SKEIN512_232" | "SKEIN512_240" | "SKEIN512_248" | "SKEIN512_256" | "SKEIN512_264" | "SKEIN512_272" | "SKEIN512_280" | "SKEIN512_288" | "SKEIN512_296" | "SKEIN512_304" | "SKEIN512_312" | "SKEIN512_320" | "SKEIN512_328" | "SKEIN512_336" | "SKEIN512_344" | "SKEIN512_352" | "SKEIN512_360" | "SKEIN512_368" | "SKEIN512_376" | "SKEIN512_384" | "SKEIN512_392" | "SKEIN512_400" | "SKEIN512_408" | "SKEIN512_416" | "SKEIN512_424" | "SKEIN512_432" | "SKEIN512_440" | "SKEIN512_448" | "SKEIN512_456" | "SKEIN512_464" | "SKEIN512_472" | "SKEIN512_480" | "SKEIN512_488" | "SKEIN512_496" | "SKEIN512_504" | "SKEIN512_512" | "SKEIN1024_8" | "SKEIN1024_16" | "SKEIN1024_24" | "SKEIN1024_32" | "SKEIN1024_40" | "SKEIN1024_48" | "SKEIN1024_56" | "SKEIN1024_64" | "SKEIN1024_72" | "SKEIN1024_80" | "SKEIN1024_88" | "SKEIN1024_96" | "SKEIN1024_104" | "SKEIN1024_112" | "SKEIN1024_120" | "SKEIN1024_128" | "SKEIN1024_136" | "SKEIN1024_144" | "SKEIN1024_152" | "SKEIN1024_160" | "SKEIN1024_168" | "SKEIN1024_176" | "SKEIN1024_184" | "SKEIN1024_192" | "SKEIN1024_200" | "SKEIN1024_208" | "SKEIN1024_216" | "SKEIN1024_224" | "SKEIN1024_232" | "SKEIN1024_240" | "SKEIN1024_248" | "SKEIN1024_256" | "SKEIN1024_264" | "SKEIN1024_272" | "SKEIN1024_280" | "SKEIN1024_288" | "SKEIN1024_296" | "SKEIN1024_304" | "SKEIN1024_312" | "SKEIN1024_320" | "SKEIN1024_328" | "SKEIN1024_336" | "SKEIN1024_344" | "SKEIN1024_352" | "SKEIN1024_360" | "SKEIN1024_368" | "SKEIN1024_376" | "SKEIN1024_384" | "SKEIN1024_392" | "SKEIN1024_400" | "SKEIN1024_408" | "SKEIN1024_416" | "SKEIN1024_424" | "SKEIN1024_432" | "SKEIN1024_440" | "SKEIN1024_448" | "SKEIN1024_456" | "SKEIN1024_464" | "SKEIN1024_472" | "SKEIN1024_480" | "SKEIN1024_488" | "SKEIN1024_496" | "SKEIN1024_504" | "SKEIN1024_512" | "SKEIN1024_520" | "SKEIN1024_528" | "SKEIN1024_536" | "SKEIN1024_544" | "SKEIN1024_552" | "SKEIN1024_560" | "SKEIN1024_568" | "SKEIN1024_576" | "SKEIN1024_584" | "SKEIN1024_592" | "SKEIN1024_600" | "SKEIN1024_608" | "SKEIN1024_616" | "SKEIN1024_624" | "SKEIN1024_632" | "SKEIN1024_640" | "SKEIN1024_648" | "SKEIN1024_656" | "SKEIN1024_664" | "SKEIN1024_672" | "SKEIN1024_680" | "SKEIN1024_688" | "SKEIN1024_696" | "SKEIN1024_704" | "SKEIN1024_712" | "SKEIN1024_720" | "SKEIN1024_728" | "SKEIN1024_736" | "SKEIN1024_744" | "SKEIN1024_752" | "SKEIN1024_760" | "SKEIN1024_768" | "SKEIN1024_776" | "SKEIN1024_784" | "SKEIN1024_792" | "SKEIN1024_800" | "SKEIN1024_808" | "SKEIN1024_816" | "SKEIN1024_824" | "SKEIN1024_832" | "SKEIN1024_840" | "SKEIN1024_848" | "SKEIN1024_856" | "SKEIN1024_864" | "SKEIN1024_872" | "SKEIN1024_880" | "SKEIN1024_888" | "SKEIN1024_896" | "SKEIN1024_904" | "SKEIN1024_912" | "SKEIN1024_920" | "SKEIN1024_928" | "SKEIN1024_936" | "SKEIN1024_944" | "SKEIN1024_952" | "SKEIN1024_960" | "SKEIN1024_968" | "SKEIN1024_976" | "SKEIN1024_984" | "SKEIN1024_992" | "SKEIN1024_1000" | "SKEIN1024_1008" | "SKEIN1024_1016" | "SKEIN1024_1024" | "POSEIDON_BLS12_381_A2_FC1" | "POSEIDON_BLS12_381_A2_FC1_SC" | "ZEROXCERT_IMPRINT_256" | "FIL_COMMITMENT_UNSEALED" | "FIL_COMMITMENT_SEALED" | "HOLOCHAIN_ADR_V0" | "HOLOCHAIN_ADR_V1" | "HOLOCHAIN_KEY_V0" | "HOLOCHAIN_KEY_V1" | "HOLOCHAIN_SIG_V0" | "HOLOCHAIN_SIG_V1" | "SKYNET_NS" | "ARWEAVE_NS";
export const nameToVarint: NameUint8ArrayMap;
export const constantToCode: ConstantCodeMap;
export const nameToCode: Readonly<Record<import("./generated-types").CodecName, import("./generated-types").CodecCode>>;
export const codeToName: CodeNameMap;
//# sourceMappingURL=maps.d.ts.map