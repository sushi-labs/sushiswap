import { PickScaleConfigWithoutType } from './types/ScaleConfig';
import { DefaultThresholdInput, D3Scale, PickD3Scale } from './types/Scale';
import { StringLike, DefaultOutput } from './types/Base';
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'linear', Output>, config: PickScaleConfigWithoutType<'linear', Output>): PickD3Scale<'linear', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'log', Output>, config: PickScaleConfigWithoutType<'log', Output>): PickD3Scale<'log', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'pow', Output>, config: PickScaleConfigWithoutType<'pow', Output>): PickD3Scale<'pow', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'sqrt', Output>, config: PickScaleConfigWithoutType<'sqrt', Output>): PickD3Scale<'sqrt', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'symlog', Output>, config: PickScaleConfigWithoutType<'symlog', Output>): PickD3Scale<'symlog', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'time', Output>, config: PickScaleConfigWithoutType<'time', Output>): PickD3Scale<'time', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'utc', Output>, config: PickScaleConfigWithoutType<'utc', Output>): PickD3Scale<'utc', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'quantile', Output>, config: PickScaleConfigWithoutType<'quantile', Output>): PickD3Scale<'quantile', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'quantize', Output>, config: PickScaleConfigWithoutType<'quantize', Output>): PickD3Scale<'quantize', Output>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'threshold', Output, StringLike, ThresholdInput>, config: PickScaleConfigWithoutType<'threshold', Output, StringLike, ThresholdInput>): PickD3Scale<'threshold', Output, StringLike, ThresholdInput>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'ordinal', Output, DiscreteInput>, config: PickScaleConfigWithoutType<'ordinal', Output, DiscreteInput>): PickD3Scale<'ordinal', Output, DiscreteInput>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'point', Output, DiscreteInput>, config: PickScaleConfigWithoutType<'point', Output, DiscreteInput>): PickD3Scale<'point', Output, DiscreteInput>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput>(scale: PickD3Scale<'band', Output, DiscreteInput>, config: PickScaleConfigWithoutType<'band', Output, DiscreteInput>): PickD3Scale<'band', Output, DiscreteInput>;
declare function updateScale<Output = DefaultOutput, DiscreteInput extends StringLike = StringLike, ThresholdInput extends DefaultThresholdInput = DefaultThresholdInput, Scale extends D3Scale<Output, DiscreteInput, ThresholdInput> = D3Scale<Output, DiscreteInput, ThresholdInput>>(scale: Scale, config?: undefined): Scale;
export default updateScale;
//# sourceMappingURL=updateScale.d.ts.map