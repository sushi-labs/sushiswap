generator client {
  provider   = "prisma-client-js"
  engineType = "dataproxy"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum TokenStatus {
  APPROVED
  UNKNOWN
  DISAPPROVED
}

enum Protocol {
  SUSHISWAP_V2
  SUSHISWAP_V3
  BENTOBOX_STABLE
  BENTOBOX_CLASSIC
}

enum ChefType {
  MasterChefV1
  MasterChefV2
  MiniChef
  Merkl
}

enum RewarderType {
  Primary
  Secondary
}

model Token {
  id       String      @id // chainId:address
  address  String
  chainId  Int
  name     String
  symbol   String
  decimals Int
  status   TokenStatus @default(UNKNOWN)

  isFeeOnTransfer Boolean @default(false)
  isCommon        Boolean @default(false)

  derivedUSD    Decimal?
  derivedNative Decimal?

  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  pools0        Pool[]      @relation("token0")
  pools1        Pool[]      @relation("token1")
  sushiPools0   SushiPool[] @relation("token0")
  sushiPools1   SushiPool[] @relation("token1")
  steerVaults0  SteerVault[] @relation("token0")
  steerVaults1  SteerVault[] @relation("token1")
  incentives    Incentive[]

  @@unique([chainId, address])
  @@index(fields: [id])
  @@index(fields: [address])
  @@index(fields: [chainId])
  @@index(fields: [symbol])
  @@index(fields: [address, chainId])
  @@index(fields: [chainId, status])
  @@index(fields: [chainId, status, derivedUSD])
  @@index(fields: [chainId, status, derivedNative])
  @@index(fields: [chainId, status, symbol])
}

model Pool {
  id            String  @id // chainId:address
  address       String
  name          String
  chainId       Int
  protocol      String
  version       String
  type          String
  isWhitelisted Boolean @default(false)
  token0        Token   @relation("token0", fields: [token0Id], references: [id])
  token0Id      String
  token1        Token   @relation("token1", fields: [token1Id], references: [id])
  token1Id      String

  swapFee      Float
  twapEnabled  Boolean
  reserve0     String  @default("0")
  reserve1     String  @default("0")
  liquidityUSD Decimal

  generatedAt DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index(fields: [id])
  @@index(fields: [isWhitelisted])
  @@index(fields: [chainId])
  @@index(fields: [address])
  @@index(fields: [chainId, version, type])
  @@index(fields: [chainId, protocol, version, type])
  @@index(fields: [token0Id])
  @@index(fields: [token1Id])
  @@index(fields: [generatedAt])
}

model SushiPool {
  id              String   @id // chainId_address
  address         String
  name            String
  chainId         Int
  protocol        Protocol
  token0          Token    @relation("token0", fields: [token0Id], references: [id])
  token0Id        String
  token1          Token    @relation("token1", fields: [token1Id], references: [id])
  token1Id        String
  swapFee         Float
  twapEnabled     Boolean
  reserve0        String
  reserve1        String
  totalSupply     String
  liquidityUSD    Decimal
  liquidityNative Decimal
  volumeUSD       Decimal
  feesUSD         Decimal @default(0)
  volumeNative    Decimal
  token0Price     String
  token1Price     String

  liquidityUSDChange1h Float @default(0)
  liquidityUSDChange1d Float @default(0)
  liquidityUSDChange1w Float @default(0)
  liquidityUSDChange1m Float @default(0)

  volume1h       Decimal @default(0)
  volume1d       Decimal @default(0)
  volume1w       Decimal @default(0)
  volume1m       Decimal @default(0)
  volumeChange1h Float @default(0)
  volumeChange1d Float @default(0)
  volumeChange1w Float @default(0)
  volumeChange1m Float @default(0)

  fees1h       Decimal @default(0)
  fees1d       Decimal @default(0)
  fees1w       Decimal @default(0)
  fees1m       Decimal @default(0)
  feesChange1h Float @default(0)
  feesChange1d Float @default(0)
  feesChange1w Float @default(0)
  feesChange1m Float @default(0)

  feeApr1h Float @default(0)
  feeApr1d Float @default(0)
  feeApr1w Float @default(0)
  feeApr1m Float @default(0)

  totalApr1h Float @default(0)
  totalApr1d Float @default(0)
  totalApr1w Float @default(0)
  totalApr1m Float @default(0)

  incentiveApr Float @default(0)

  isIncentivized  Boolean     @default(false)
  wasIncentivized Boolean     @default(false)
  incentives      Incentive[]

  hasEnabledSteerVault  Boolean @default(false)
  hadEnabledSteerVault  Boolean @default(false)
  steerVaults           SteerVault[]

  createdAtBlockNumber BigInt   @db.UnsignedBigInt
  isBlacklisted        Boolean  @default(false)
  generatedAt          DateTime @default(now())
  updatedAt            DateTime @updatedAt

  @@index(fields: [id])
  @@index(fields: [chainId])
  @@index(fields: [address])
  @@index(fields: [chainId, protocol])
  @@index(fields: [liquidityUSD, chainId])
  @@index(fields: [totalApr1d, chainId])
  @@index(fields: [totalApr1w, chainId])
  @@index(fields: [totalApr1m, chainId])
  @@index(fields: [token0Id])
  @@index(fields: [token1Id])
}

model Incentive {
  id              String       @id // poolAddress_rewarderAddress
  chainId         Int
  chefType        ChefType
  apr             Float
  rewardPerDay    Float
  rewardToken     Token        @relation(fields: [rewardTokenId], references: [id])
  rewardTokenId   String
  pool            SushiPool    @relation(fields: [poolId], references: [id])
  poolId          String
  pid             Int
  rewarderAddress String
  rewarderType    RewarderType

  @@index(fields: [id])
  @@index(fields: [poolId])
  @@index(fields: [rewardTokenId])
  @@index(fields: [chainId, rewardTokenId])
}

enum SteerStrategy {
  DeltaNeutralStables
  ElasticExpansion
  MovingVolatilityChannelMedium
  HighLowChannel
  StaticStable
  ClassicRebalance
}

enum VaultState {
  PendingApproval
  PendingThreshold
  Paused
  Active
  Retired
}

model SteerVault {
  id                      String      @id // chainId:address
  
  pool                    SushiPool   @relation(fields: [poolId], references: [id])
  poolId                  String
  feeTier                 Float
  
  apr                     Float
  apr1d                   Float
  apr1m                   Float
  apr1y                   Float

  token0                  Token       @relation("token0", fields: [token0Id], references: [id])
  token0Id                String
  reserve0                String
  fees0                   String

  token1                  Token       @relation("token1", fields: [token1Id], references: [id])
  token1Id                String 
  reserve1                String
  fees1                   String

  strategy                SteerStrategy
  description             String @db.Text
  state                   VaultState

  performanceFee          Float

  lowerTick               Int
  upperTick               Int

  adjustmentFrequency     Int
  lastAdjustmentTimestamp Int

  isEnabled               Boolean @default(false)
  wasEnabled              Boolean @default(false)

  creator                 String
  admin                   String
  manager                 String

  generatedAt             DateTime @default(now())
  updatedAt               DateTime    @updatedAt

  @@index(fields: [id])
  @@index(fields: [poolId])
  @@index(fields: [token0Id])
  @@index(fields: [token1Id])
}