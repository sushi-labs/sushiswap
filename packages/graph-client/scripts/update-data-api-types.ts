import { writeFileSync } from 'node:fs'
import type { introspection } from '../src/subgraphs/data-api/data-api-env'
import { getChainIdsByFeature } from '../src/subgraphs/data-api/queries/features/chain-ids-by-feature'

const features: introspection['types']['ChainIdFeature']['enumValues'][] = [
  'SushiSwapChainId',
  // 'SushiSwapV2ChainId',
  // 'SushiSwapV3ChainId',
  'PoolChainId',
  'TokenListChainId',
  'TokenListV2ChainId',
  'TrendingTokensChainId',
] as const

const path = `./src/subgraphs/data-api/types`

async function updateDataApiType(feature: (typeof features)[number]) {
  const chainIds = await getChainIdsByFeature({ feature })

  let content = `// This file is auto-generated by scripts/update-data-api-types.ts`
  content += `\n`
  content += `import type { ChainId } from 'sushi/chain'`
  content += `\n\n`
  content += `export const ${feature}s = ${JSON.stringify(chainIds)} as const`
  content += `\n`
  content += `export type ${feature} = typeof ${feature}s[number]`
  content += `\n`
  content += `export function is${feature}(value: ChainId): value is ${feature} {`
  content += `return ${feature}s.includes(value as ${feature})`
  content += `}`

  return content
}

const res = await Promise.all(
  features.map((feature) => updateDataApiType(feature)),
)

res.forEach((content, i) => {
  const feature = features[i]
  const file = `${path}/${feature}.ts`

  writeFileSync(file, content)
  console.log(`Updated ${feature} type`)
})

writeFileSync(
  `${path}/index.ts`,
  res.map((_, i) => `export * from './${features[i]}.js'`).join('\n'),
)
