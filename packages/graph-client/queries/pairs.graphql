fragment PairFields on Pair {
  id
  chainId
  address
  type
  swapFee
  twapEnabled
  name
  token0 {
    name
    id
    decimals
    symbol
  }
  token1 {
    name
    id
    decimals
    symbol
  }
  source
  createdAtBlock
  createdAtTimestamp
  reserve0
  reserve1
  liquidity
  liquidityUSD
  liquidityNative
  # token0Price
  # token1Price
  volumeUSD
  volumeNative
  volumeToken0
  volumeToken1
  feesNative
  feesUSD
  txCount
  apr
  aprUpdatedAtTimestamp
}

fragment TimeTravelPairFields on Pair {
  id
  reserve0
  reserve1
  liquidity
  liquidityUSD
  liquidityNative
  volumeUSD
  volumeNative
  volumeToken0
  volumeToken1
  feesNative
  feesUSD
  apr
}

query PairsByChainId(
  $first: Int
  $skip: Int
  $where: Pair_filter
  $orderBy: Pair_orderBy
  $orderDirection: OrderDirection
  $block: Block_height
  $chainId: BigInt!
) {
  pairs: pairsByChainId(
    first: $first
    skip: $skip
    where: $where
    orderBy: $orderBy
    orderDirection: $orderDirection
    block: $block
    chainId: $chainId
  ) {
    ...PairFields
  }
}

query PairsByChainIds(
  $first: Int
  $skip: Int
  $where: Pair_filter
  $orderBy: Pair_orderBy
  $orderDirection: OrderDirection
  $block: Block_height
  $chainIds: [BigInt!]!
) {
  pairs: pairsByChainIds(
    first: $first
    skip: $skip
    where: $where
    orderBy: $orderBy
    orderDirection: $orderDirection
    block: $block
    chainIds: $chainIds
  ) {
    ...PairFields
  }
}

query PairById($id: ID!) {
  pair: pairById(id: $id) {
    ...PairFields
    liquidity1dChange
    liquidity1wChange
    volume1d
    volume1dChange
    volume1w
    fees1d
    fees1dChange
    fees1w
    txCount1d
    txCount1dChange
    txCount1w
    apr
    feeApr
    hourSnapshots(first: 168, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
      apr
    }
    daySnapshots(first: 730, orderBy: date, orderDirection: desc) {
      id
      date
      volumeUSD
      liquidityNative
      liquidityUSD
      transactionCount
      apr
    }
  }
}

query V2Transactions($first: Int = 100, $skip: Int = 0, $orderBy: Transaction_orderBy = timestamp, $orderDir: OrderDirection = desc, $where: Transaction_filter) {
  transactions: v2Transactions(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    createdAtTimestamp
    createdAtBlock
    mints {
      id
      sender
      liquidity
      amount0
      amount1
      amountUSD
      logIndex
    }
    burns {
      id
      sender
      liquidity
      amount0
      amount1
      amountUSD
      logIndex
    }
    swaps {
      id
      sender
      to
      amountIn
      tokenIn {
        symbol
      }
      amountOut
      tokenOut {
        symbol
      }
      amountUSD
      logIndex
    }
  }
}

query V2Burns($first: Int = 100, $skip: Int = 0, $orderBy: Burn_orderBy = timestamp, $orderDir: OrderDirection = desc, $where: Burn_filter) {
  burns: v2Burns(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    sender
    liquidity
    amount0
    amount1
    amountUSD
    logIndex
    transaction {
      id
      createdAtTimestamp
      createdAtBlock
    }
  }
}

query V2Mints($first: Int = 100, $skip: Int = 0, $orderBy: Mint_orderBy = timestamp, $orderDir: OrderDirection = desc, $where: Mint_filter) {
  mints: v2Mints(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    sender
    liquidity
    amount0
    amount1
    amountUSD
    logIndex
    transaction {
      id
      createdAtTimestamp
      createdAtBlock
    }
  }
}

query V2Swaps($first: Int = 100, $skip: Int = 0, $orderBy: Swap_orderBy = timestamp, $orderDir: OrderDirection = desc, $where: Swap_filter) {
  swaps: v2Swaps(first: $first, skip: $skip, orderBy: $orderBy, orderDirection: $orderDir, where: $where) {
    id
    sender
    to
    amountIn
    tokenIn {
      symbol
    }
    amountOut
    tokenOut {
      symbol
    }
    amountUSD
    logIndex
    transaction {
      id
      createdAtTimestamp
      createdAtBlock
    }
  }
}

# fragment PairWithIncentivesFields on PairWithIncentives {
#   ...PairFields
#   # liquidityPositions {
#   #    id
#   # }
#   # liquidityPositionSnapshots {
#   #   id
#   # }
#   incentives {
#     id
#     # currency { id symbol name decimals }
#     apr
#   }
# }

# query PairWithIncentives(
#   $first: Int
#   $skip: Int
#   # $where: PairWithIncentives_filter
#   # $orderBy: PairWithIncentives_orderBy
#   # $orderDirection: OrderDirection
#   $block: Block_height
#   $chainIds: [Int!]!
# ) {
#   pairWithIncentives(
#     first: $first
#     skip: $skip
#     # where: $where
#     # orderBy: $orderBy
#     # orderDirection: $orderDirection
#     block: $block
#     chainIds: $chainIds
#   ) {
#     ...PairWithIncentivesFields
#   }
# }

# query PairWithIncentives(
#   $first: Int
#   $skip: Int
#   # $where: PairWithIncentives_filter
#   # $orderBy: PairWithIncentives_orderBy
#   # $orderDirection: OrderDirection
#   $block: Block_height
#   $chainIds: [Int!]!
# ) {
#   pairWithIncentives(
#     first: $first
#     skip: $skip
#     # where: $where
#     # orderBy: $orderBy
#     # orderDirection: $orderDirection
#     block: $block
#     chainIds: $chainIds
#   ) {
#     ...PairWithIncentivesFields
#   }
# }
