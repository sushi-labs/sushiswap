import { SUPPORTED_CHAIN_IDS } from 'config'
import { GetStaticProps, InferGetStaticPropsType } from 'next'
import { FC } from 'react'
import { SWRConfig, unstable_serialize } from 'swr'
import { unstable_serialize as unstable_serialize_infinite } from 'swr/infinite'
import { getPools, getPoolCount, getPoolCountUrl, getPoolsUrl } from '@sushiswap/client'

import { ChartSection, Layout, PoolsFiltersProvider, TableSection } from '../components'
import { getBundles, getCharts, getTokenCount, getTokens } from '../lib/api'
import { defaultPoolsArgs } from 'lib/constants'

export const getStaticProps: GetStaticProps = async () => {
  const [pools, tokens, charts, poolCount, tokenCount, bundles] = await Promise.all([
    getPools(defaultPoolsArgs),
    getTokens(),
    getCharts(),
    getPoolCount(defaultPoolsArgs),
    getTokenCount(),
    getBundles(),
  ])
  return {
    props: {
      fallback: {
        [unstable_serialize_infinite(() => getPoolsUrl(defaultPoolsArgs))]: pools,
        [unstable_serialize({
          url: '/analytics/api/tokens',
          args: {
            sorting: [
              {
                id: 'liquidityUSD',
                desc: true,
              },
            ],
            selectedNetworks: SUPPORTED_CHAIN_IDS,
            pagination: {
              pageIndex: 0,
              pageSize: 20,
            },
            query: '',
            extraQuery: '',
          },
        })]: tokens,

        [unstable_serialize({
          url: '/analytics/api/charts',
          args: {
            selectedNetworks: SUPPORTED_CHAIN_IDS,
          },
        })]: charts,
        [getPoolCountUrl(defaultPoolsArgs)]: poolCount,
        [`/analytics/api/tokens/count`]: tokenCount,
        [`/analytics/api/bundles`]: bundles,
      },
    },
    revalidate: 900,
  }
}

const Index: FC<InferGetStaticPropsType<typeof getStaticProps>> = ({ fallback }) => {
  return (
    <SWRConfig value={{ fallback }}>
      <_Index />
    </SWRConfig>
  )
}

const _Index: FC = () => {
  return (
    <Layout>
      <div className="flex flex-col gap-10">
        <section className="flex flex-col gap-6 lg:flex-row">
          <div className="max-w-md space-y-4">
            <h2 className="text-2xl font-semibold text-slate-50">Sushi Analytics</h2>
            <p className="text-slate-300">
              Analytics platform for tracking the liquidity, volume, and fees generated by Sushi products.
            </p>
          </div>
        </section>
        <PoolsFiltersProvider>
          <ChartSection />
          <TableSection />
        </PoolsFiltersProvider>
      </div>
    </Layout>
  )
}

export default Index
